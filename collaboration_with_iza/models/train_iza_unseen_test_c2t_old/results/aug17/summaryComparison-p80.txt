Example 1:
titleEntities: {'Subject': ['India', 'Europe'], 'Date': ['2018']}
title: Number of outbound trips from India to Europe in 2018 , by region of destination
X_Axis['Locations']: ['Central/Eastern_Europe', 'Western_Europe', 'Northern_Europe', 'Southern/Mediterranean_Europe']
Y_Axis['Arrivals', 'in', 'thousands']: ['1273', '1097', '564', '355']

gold: This statistic shows the number of outbound trips from India to Europe in 2018 , by region of destination . There were approximately 355 thousand trips from India to Southern and Mediterranean Europe in 2018 .
gold_template: This statistic shows the templateTitle[0] of templateTitle[1] templateTitle[2] templateTitle[3] templateTitleSubject[0] to templateXValue[0] in templateTitleDate[0] , templateTitle[7] templateTitle[8] of templateTitle[9] . There were approximately templateYValue[min] thousand templateTitle[2] templateTitle[3] templateTitleSubject[0] to Southern and Mediterranean templateXValue[0] in templateTitleDate[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Number outbound on India in the India 2018 on different continents .  The most Number outbound was in Southern/Mediterranean_Europe where £ 1273 thousands was outbound .  The amount in Western_Europe was a little lower at £ 1097 ,000,000 .

Example 2:
titleEntities: {'Subject': ['Estimated'], 'Date': ['2015', '2020']}
title: Estimated migration balance by region 2015 to 2020
X_Axis['Country']: ['Europe', 'Northern_America', 'Oceania', 'Africa', 'Latin_America_and_Caribbean', 'Asia']
Y_Axis['Migration', 'balance', 'in', 'millions']: ['6.81', '5.98', '0.78', '-2.32', '-2.61', '-8.65']

gold: This statistic shows the net migration balance of different regions between 2015 and 2020 . During that time , Europe is estimated to have a net migration surplus of 6.81 million people .
gold_template: This statistic shows the net templateYLabel[0] templateYLabel[1] of different regions between templateTitleDate[min] and templateTitleDate[max] . During that time , templateXValue[0] is templateTitleSubject[0] to have a net templateYLabel[0] surplus of templateYValue[max] templateScale people .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Estimated migration balance by the Migration of balance they 've had .  \n It shows Europe has had 6.81 balance , Northern_America has had the Estimated at -8.65 balance , Oceania has had 0.78 , Africa has had -2.32 , Latin_America_and_Caribbean has had the most balance at 6.81 and Asia has had -8.65 balance .

Example 3:
titleEntities: {'Subject': ['Canadian'], 'Date': ['2018', '2019']}
title: Canadian average domestic heating oil prices 2018 to 2019
X_Axis['Month']: ["Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18"]
Y_Axis['Price', 'in', 'Canadian', 'dollars', 'per', 'thousand', 'liters']: ['1160', '1146', '1125', '1118', '1129', '1146', '1190', '1168', '1138', '1120', '1111', '1116']

gold: The average domestic heating oil price in Canada reached about 1,160 Canadian dollars per 1,000 liters in November 2019 . There are three types of middle distillate fuel oils that can be used for liquid-fuel-burning equipment without any preheating , and three other types that require preheating as they contain residual fuel components . There are both federal and provincial regulations that are applicable to heating oils in Canada , including the Canadian Environmental Protection Act .
gold_template: The templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[0] in Canada reached about templateYValue[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] 1,000 templateYLabel[5] in templateTitleDate[max] . There are three types of middle distillate fuel oils that can be used for liquid-fuel-burning equipment without any preheating , and three other types that require preheating as they contain residual fuel components . There are both federal and provincial regulations that are applicable to templateTitle[3] oils in Canada , including the templateYLabel[1] Environmental Protection Act .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Canadian average in Canadian .  It shows Sep_'19 was the Canadian at just 1111 degrees and Jul_'19 was the warmest at 1190 Canadian .  After Sep_'19 , the next Canadian average are Nov_'19 at 1160 degrees , followed by Dec_'18 at 18 degrees , Oct_'19 at 1146 degrees and then Aug_'19 at 1118 degrees .

Example 4:
titleEntities: {'Subject': ['Christmas'], 'Date': []}
title: Box office revenue of the most successful Christmas movies
X_Axis['Christmas', 'movies', '']: ['Home_Alone(1990)', "Dr._Seuss'_The_Grinch_(2018)", 'How_the_Grinch_StoleChristmas_(2000)', 'The_Polar_Express(2004)', 'Elf(2003)', 'Home_Alone_2:_Lost_in_New_York(1992)', 'The_Santa_Clause(1994)', 'The_Santa_Clause_2(2002)', 'A_Christmas_Carol(2009)', 'Four_Christmases(2008)', "Daddy's_Home_2(2017)", 'The_Santa_Clause_3:The_Escape_Clause_(2006)', "Tim_Burton's_NightmareBefore_Christmas_(1993)", 'Christmas_with_the_Kranks(2004)', 'A_Bad_Moms_Christmas(2017)', 'Fred_Claus(2007)', 'Christmas_Vacation(1996)', 'The_Best_Man_Holiday(2013)', 'Jingle_All_the_Way(1996)', 'Scrooged(1988)']
Y_Axis['Box', 'office', 'revenue', 'in', 'U.S.', 'million', 'dollars']: ['285.76', '270.52', '260.04', '157.22', '173.84', '173.59', '144.83', '139.24', '137.86', '120.15', '104.03', '84.5', '75.08', '73.78', '72.11', '72.01', '71.32', '70.53', '60.59', '60.33']

gold: This statistic presents the 20 most successful Christmas movies at the North American box office . The most successful Christmas movie is Home Alone , with a lifetime gross of over 285.7 million U.S. dollars . The 2018 version of the Grinch was in second place , earning more than 270 million U.S. dollars at the domestic box office .
gold_template: This statistic presents the 20 templateTitle[3] templateTitle[4] templateXValue[8] templateXLabel[1] at the North American templateYLabel[0] templateYLabel[1] . The templateTitle[3] templateTitle[4] templateXValue[8] movie is templateXValue[0] templateXValue[5] , templateXValue[13] a lifetime gross of over 285.7 templateScale templateYLabel[3] templateYLabel[5] . The 2018 version of the templateXValue[1] was in second place , earning more than 270 templateScale templateYLabel[3] templateYLabel[5] at the domestic templateYLabel[0] templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Box office in Christmas .  It shows How_the_Grinch_StoleChristmas_(2000) was the Box at just 60.33 degrees and Elf(2003) was the warmest at 285.76 degrees .  After How_the_Grinch_StoleChristmas_(2000) , the next Box office are Home_Alone(1990) at 285.76 degrees , followed by Scrooged(1988) at 18 degrees , Dr._Seuss'_The_Grinch_(2018) at 270.52 degrees and then The_Polar_Express(2004) at 157.22 degrees .

Example 5:
titleEntities: {'Subject': ['June'], 'Date': []}
title: Leading hotel companies worldwide as of June 2019 , by number of properties
X_Axis['Month']: ['Wyndham_Hotel_Group', 'Choice_Hotels_International', 'Marriott_International', 'Hilton_Worldwide', 'InterContinental_Hotels_Group_(IHG)', 'Best_Western_Hotels_&_Resorts', 'G6_Hospitality', 'Radisson_Hotel_Group', 'RLH_Corporation', 'Hyatt_Hotels_Corp.', 'Aimbridge_Hospitality', 'Westmont_Hospitality_Group', 'Red_Roof', 'Extended_Stay_America', 'Interstate_Hotels_&_Resorts']
Y_Axis['Number', 'of', 'properties']: ['9157', '7045', '7003', '5872', '5656', '4008', '1391', '1179', '1167', '865', '834', '692', '637', '627', '479']

gold: Global hotel chain , Wyndham Hotel Group , leads the ranking of the top hotel companies by number properties . As of June 2019 , Wyndham accounted for over nine thousand units in its worldwide portfolio , which ranged from economy to upscale accommodation . Its closest competitors were Choice Hotels International and Marriot International , who reported 7,045 and 7,003 properties , respectively .
gold_template: Global templateXValue[0] chain , templateXValue[0] , leads the ranking of the top templateXValue[0] templateTitle[2] templateTitle[6] templateYLabel[0] templateYLabel[1] . As of templateTitleSubject[0] templateTitleDate[0] , templateXValue[0] accounted for over templateYValue[max] thousand units in its templateXValue[3] portfolio , which ranged from economy to upscale accommodation . Its closest competitors were templateXValue[1] and Marriot templateXValue[1] , who reported templateYValue[1] and templateYValue[2] templateYLabel[1] , respectively .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading hotel in June .  It shows Marriott_International was the Leading at just 479 degrees and InterContinental_Hotels_Group_(IHG) was the warmest at 9157 properties .  After Marriott_International , the next Leading hotel are Wyndham_Hotel_Group at 9157 degrees , followed by Interstate_Hotels_&_Resorts at 18 degrees , Choice_Hotels_International at 7045 degrees and then Hilton_Worldwide at 5872 degrees .

Example 6:
titleEntities: {'Subject': ['Countries'], 'Date': []}
title: Countries ranked by number of ice hockey players 2018/19
X_Axis['Country']: ['Canada', 'United_States', 'Czech_Republic', 'Russia', 'Finland', 'Sweden', 'Switzerland', 'France', 'Germany', 'Japan', 'Slovakia', 'Norway', 'Great_Britain', 'Austria', 'Hungary', 'Latvia', 'Kazakhstan', 'Ukraine', 'Italy', 'Belarus']
Y_Axis['Number', 'of', 'players']: ['621026', '567908', '121613', '112236', '64641', '55431', '27867', '21667', '21340', '18837', '11394', '10353', '8162', '7670', '7106', '7000', '6915', '5384', '5210', '4580']

gold: The statistics ranks countries by the number of registered ice hockey players in 2018/19 . In the 2018/19 season , Canada had the most registered ice hockey players with 621 thousand according to the International Ice Hockey Federation .
gold_template: The statistics ranks templateTitleSubject[0] templateTitle[2] the templateYLabel[0] of registered templateTitle[4] templateTitle[5] templateYLabel[1] in templateTitle[7] . In the templateTitle[7] season , templateXValue[0] had the most registered templateTitle[4] templateTitle[5] templateYLabel[1] with templateYValue[max] thousand according to the International templateTitle[4] templateTitle[5] Federation .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Countries ranked in Countries .  It shows Czech_Republic was the Countries at just 4580 degrees and Finland was the warmest at 621026 degrees .  After Czech_Republic , the next Countries ranked are Canada at 621026 degrees , followed by Belarus at 18 degrees , United_States at 567908 degrees and then Russia at 112236 degrees .

Example 7:
titleEntities: {'Subject': ['Brazil', 'Europe'], 'Date': ['2018']}
title: Number of outbound trips from Brazil to Europe in 2018 , by region of destination
X_Axis['Outbound', 'Trip']: ['Southern/Mediterranean_Europe', 'Western_Europe', 'Central/Eastern_Europe', 'Northern_Europe']
Y_Axis['Arrivals', 'in', 'millions']: ['2.23', '1.63', '0.38', '0.26']

gold: This statistic shows the number of outbound trips from Brazil to Europe in 2018 , by region of destination . There were approximately 2.23 million trips from Brazil to Southern and Mediterranean Europe in 2018 .
gold_template: This statistic shows the templateTitle[0] of templateXLabel[0] templateTitle[2] templateTitle[3] templateTitleSubject[0] to templateXValue[0] in templateTitleDate[0] , templateTitle[7] templateTitle[8] of templateTitle[9] . There were approximately templateYValue[max] templateScale templateTitle[2] templateTitle[3] templateTitleSubject[0] to Southern and Mediterranean templateXValue[0] in templateTitleDate[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Number outbound on Brazil in the Brazil 2018 on different continents .  The most Number outbound was in Northern_Europe where £ 2.23 millions was outbound .  The amount in Western_Europe was a little lower at £ 1.63 ,000,000 .

Example 8:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2015']}
title: Survey on regretting tattoos in the U.S. 2015
X_Axis['Response']: ['Yes', 'No']
Y_Axis['Share', 'of', 'respondents']: ['23', '77']

gold: This statistic shows the results of a survey among adult Americans who have one or more tattoos . The survey was conducted in 2015 , asking the respondents whether they ever regret getting any of their tattoos , or not . 77 percent of respondents stated they do not regret getting any of their tattoos .
gold_template: This statistic shows the results of a templateTitle[0] among adult Americans who have one or more templateTitle[2] . The templateTitle[0] was conducted in templateTitleDate[0] , asking the templateYLabel[1] whether they ever regret getting any of their templateTitle[2] , or not . templateYValue[max] templateScale of templateYLabel[1] stated they do not regret getting any of their templateTitle[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Survey regretting tattoos in Yes 2015 compared with that in No and the No .  In Yes there was a 77 % difference in the salaries of men and women .  In No the difference was 23 % .

Example 9:
titleEntities: {'Subject': ['LA Galaxy', 'MLS'], 'Date': ['2019']}
title: Player expenses ( payroll ) of LA Galaxy ( MLS ) 2019
X_Axis['Month']: ['Zlatan_Ibrahimovic', 'Jonathan_dos_Santos', 'Romain_Alessandrini', 'Jorgen_Skjelvik', 'Diego_Polenta', 'Giancarlo_Gonzalez_Castro', 'Favio_Alvarez', 'Joe_Corona', 'Perry_Kitchen', 'Uriel_Antuna', 'David_Bingham', 'Sebastian_Lletget', 'Joao_Pedro', 'Rolf_Feltscher', 'Chris_Pontius', 'Emmanuel_Boateng', 'Juninho', 'Daniel_Steres', 'Tomas_Hilliard-Arce', 'Dave_Romney', 'Hugo_Arellano', 'Julian_Araujo', 'Ethan_Zubak', 'Bradford_Jamieson', 'Efrain_Alvarez', 'Emil_Cuello', 'Matt_Lampson', 'Servando_Carrasco', 'Justin_Vom_Steeg', 'Diedie_Traore']
Y_Axis['Payroll', 'in', 'thousand', 'U.S.', 'dollars']: ['7200.0', '2000.0', '1940.0', '1066.67', '777.28', '719.58', '586.25', '550.0', '474.17', '420.0', '375.0', '312.67', '261.0', '242.65', '190.0', '185.0', '163.13', '155.5', '123.13', '118.95', '90.07', '86.25', '78.13', '76.4', '75.61', '70.25', '70.25', '70.25', '57.23', '56.25']

gold: The statistic shows the player expenses ( payroll ) of the LA Galaxy club of Major League Soccer by player in 2019 . Jonathan Dos Santos received a salary of two million U.S. dollars in that year .
gold_template: The statistic shows the templateTitle[0] templateTitle[1] ( templateYLabel[0] ) of the templateTitleSubject[0] club of Major League Soccer by templateTitle[0] in templateTitleDate[0] . templateXValue[1] received a salary of templateYValue[1] templateScale templateYLabel[2] templateYLabel[3] in that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Player expenses in LA Galaxy .  It shows Romain_Alessandrini was the Player at just 56.25 degrees and Diego_Polenta was the warmest at 7200.0 degrees .  After Romain_Alessandrini , the next Player expenses are Zlatan_Ibrahimovic at 7200.0 degrees , followed by Diedie_Traore at 18 degrees , Jonathan_dos_Santos at 2000.0 degrees and then Jorgen_Skjelvik at 1066.67 degrees .

Example 10:
titleEntities: {'Subject': ['UK'], 'Date': ['2016', '2019']}
title: UK : monthly moped and motorcycle scooter sales 2016 to 2019
X_Axis['Month']: ["Dec_'19", "Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Mar_'18", "Feb_'18", "Jan_'18", "Dec_'17", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Apr_'17", "Mar_'17", "Feb_'17", "Jan_'17", "Dec_'16", "Nov_'16", "Oct_'16", "Sep_'16", "Aug_'16", "Jul_'16", 'Jun_´16', "May_'16", "Apr_'16", "Mar_'16", "Feb_'16", "Jan_'16"]
Y_Axis['Units', 'sold']: ['1383', '1820', '2143', '2887', '1872', '2244', '2207', '2343', '2205', '2811', '1457', '1714', '1471', '2105', '2110', '2958', '2126', '2238', '2500', '2090', '1961', '2715', '1262', '1408', '1976', '1807', '2143', '2947', '1820', '2438', '2512', '2423', '2035', '2644', '1415', '1500', '3321', '2579', '3028', '4416', '2687', '3083', '3550', '2940', '2917', '3656', '1880', '2015']

gold: Scooter and moped sales amounted to over 25,000 units in 2019 . March and September recorded the highest sales , which were the months when the Driver and Vehicle Licensing Agency issued new registration plates for cars and motorcycles . In December 2019 , 1,383 scooters and mopeds were sold in the United Kingdom .
gold_template: templateTitle[4] and templateTitle[2] templateTitle[5] amounted to over 25,000 templateYLabel[0] in templateTitleDate[max] . and recorded the highest templateTitle[5] , which were the months when the Driver and Vehicle Licensing Agency issued new registration plates for cars and motorcycles . In templateTitleDate[max] , templateYValue[0] scooters and mopeds were templateYLabel[1] in the United Kingdom .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the UK monthly moped in the motorcycle competirion .  \\n From the chart we see that the Aug_'19 Month made the UK sold by some margin , with only 1262 .  Nov_'19 and Dec_'19 made a respectable 1820 and 1383 sold , with Jan_'16 and Sep_'19 not far behind , at 2015 and 2887 respectively .

Example 11:
titleEntities: {'Subject': ['Most'], 'Date': ['2018']}
title: Most reputable companies worldwide 2018
X_Axis['Brands']: ['Rolex', 'LEGO', 'Google', 'Canon', 'The_Walt_Disney_Company', 'Sony', 'Adidas', 'Bosch', 'BMW_Group', 'Microsoft']
Y_Axis['Index', 'score', 'on', 'a', '0', 'to', '100', 'scale']: ['79.3', '77.9', '77.7', '77.4', '77.4', '77.3', '76.6', '76.4', '76.1', '75.8']

gold: The graph shows the most reputable companies worldwide as first quarter of 2018 . The source found that Rolex was the most reputable company , followed by LEGO and Google . Most reputable companies worldwide – additional information Based on dimensions such as performance , leadership , products and services , innovation , to mention a few , the Reputation Institute created a framework to measure the reputation performance of global companies .
gold_template: The graph shows the templateTitleSubject[0] templateTitle[1] templateTitle[2] templateTitle[3] as first quarter of templateTitleDate[0] . The source found that templateXValue[0] was the templateTitleSubject[0] templateTitle[1] templateXValue[4] , followed by templateXValue[1] and templateXValue[2] . templateTitleSubject[0] templateTitle[1] templateTitle[2] templateTitle[3] – additional information Based on dimensions such as performance , leadership , products and services , innovation , to mention a few , the Reputation Institute created a framework to measure the reputation performance of global templateTitle[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most reputable companies in the worldwide competirion .  \\n From the chart we see that the The_Walt_Disney_Company Brands made the Most score by some margin , with only 75.8 LEGO and Rolex made a respectable 77.9 and 79.3 score , with Microsoft and Canon not far behind , at 75.8 and 77.4 respectively .

Example 12:
titleEntities: {'Subject': ['Important'], 'Date': ['2016']}
title: Important food attributes when selecting healthy meals 2016
X_Axis['Response']: ['Local_and_fresh_ingredients', 'Low-calorie_options', 'Nutritional_information_on_menus', 'Low-sodium_options', 'Portion_control_off\x90erings', 'Antibiotic-_and_hormone-free_ingredients', 'Organic_products', 'GMO-free_ingredients', 'Sustainable_and/or_humane_ingredient-supply_practices', 'Gluten-free_off\x90erings', 'Plant-based_meal_off\x90erings', 'Items_backed_by_recognized_diet_programs', 'None_of_these']
Y_Axis['Share', 'of', 'respondents']: ['45', '41', '35', '32', '21', '21', '20', '19', '11', '10', '10', '4', '13']

gold: The statistic shows which food attributes are important to U.S. survey respondents when selecting a healthy meal in 2016 . During the survey , 41 percent of respondents cited low-calorie options as important when selecting a healthy meal .
gold_template: The statistic shows which templateTitle[1] templateTitle[2] are templateTitleSubject[0] to U.S. survey templateYLabel[1] templateTitle[3] templateTitle[4] a templateTitle[5] templateXValue[10] in templateTitleDate[0] . During the survey , templateYValue[1] templateScale of templateYLabel[1] cited templateXValue[1] as templateTitleSubject[0] templateTitle[3] templateTitle[4] a templateTitle[5] templateXValue[10] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Important food attributes in the when competirion .  \\n From the chart we see that the Portion_control_offerings Response made the Important respondents by some margin , with only 4 .  Low-calorie_options and Local_and_fresh_ingredients made a respectable 41 and 45 respondents , with None_of_these and Low-sodium_options not far behind , at 13 and 32 respectively .

Example 13:
titleEntities: {'Subject': ['Russian'], 'Date': ['2014', '2020']}
title: Euro to Russian Ruble monthly exchange rate 2014 to 2020
X_Axis['Month']: ["Jan_'20", "Dec_'19", "Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Mar_'18", "Feb_'18", "Jan_'18", "Dec_'17", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Apr_'17", "Mar_'17", "Feb_'17", "Jan_'17", "Dec_'16", "Nov_'16", "Oct_'16", "Sep_'16", "Aug_'16", "Jul_'16", "Jun_'16", "May_'16", "Apr_'16", "Mar_'16", "Feb_'16", "Jan_'16", "Dec_'15", "Nov_'15", "Oct_'15", "Sep_'15", "Aug_'15", "Jul_'15", "Jun_'15", "May_'15", "Apr_'15", "Mar_'15", "Feb_'15", "Jan_'15", "Dec_'14", "Nov_'14", "Oct_'14", "Sep_'14", "Aug_'14", "Jul_'14", "Jun_'14", "May_'14", "Apr_'14", "Mar_'14", "Feb_'14", "Jan_'14"]
Y_Axis['Exchange', 'rate']: ['70.34', '69.96', '70.55', '71.36', '70.76', '73.41', '70.8', '71.6', '72.91', '72.21', '72.86', '75.09', '75.11', '79.72', '76.07', '74.41', '76.14', '79.1', '73.21', '73.16', '72.58', '75.96', '70.89', '68.75', '70.07', '69.39', '69.19', '67.87', '68.25', '69.12', '70.46', '67.54', '63.71', '62.11', '60.31', '61.76', '64.43', '65.38', '69.53', '69.01', '72.24', '72.8', '71.24', '73.15', '74.47', '75.43', '77.94', '85.62', '83.86', '80.67', '69.99', '70.57', '73.24', '74.86', '66.86', '62.36', '57.46', '57.65', '62.44', '69.2', '79.93', '72.34', '61.35', '53.86', '49.77', '48.74', '47.52', '46.38', '47.31', '49.46', '48.78', '49.94', '47.75']

gold: This statistic displays the monthly exchange rate ( as of the end of each month ) of the euro to the Russian ruble ( EUR/RUB ) , according to data from the European Central Bank , from January 2014 to January 2020 . The concrete , or point in time , measure shows the exchange rate as of the last day of each month , which is different to the standardized measure ; calculation of average based on observations throughout the period in question.Monthly change After seeing a height of 85.6 rubles to the euro in February 2016 , the monthly exchange rate has fluctuated . Between December 2018 and January 2020 , the end of month exchange rate between the euro and Russian ruble has seen a downward trend .
gold_template: This statistic displays the templateTitle[3] templateYLabel[0] templateYLabel[1] ( as of the end of each templateXLabel[0] ) of the templateTitle[0] to the templateTitleSubject[0] ( EUR/RUB ) , according to data from the European Central Bank , from templateTitleDate[min] to templateTitleDate[max] . The concrete , or point in time , measure shows the templateYLabel[0] templateYLabel[1] as of the last day of each templateXLabel[0] , which is different to the standardized measure ; calculation of average based on observations throughout the period in question.Monthly change After seeing a height of templateYValue[max] rubles to the templateTitle[0] in 2016 , the templateTitle[3] templateYLabel[0] templateYLabel[1] has fluctuated . Between 2018 and templateTitleDate[max] , the end of templateXLabel[0] templateYLabel[0] templateYLabel[1] between the templateTitle[0] and templateTitleSubject[0] has seen a downward trend .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale , templateXValue[1] at templateYValue[1] templateScale .
generated: This chart shows the Euro Russian in .  It shows Nov_'19 was the Euro at just 46.38 degrees and Sep_'19 was the warmest at 85.62 % .  After Nov_'19 , the next Euro Russian are Jan_'20 at 70.34 % , followed by Jan_'14 at 18 % , Dec_'19 at 69.96 % .

Example 14:
titleEntities: {'Subject': ['Coffee'], 'Date': []}
title: Coffee machines : typical lifetime , by product type
X_Axis['Coffee', 'Machine']: ['Fully_Automatic_Espresso_Coffee_Machine', 'Semi-Automatic_Espresso_Coffee_Machine', 'Hard_Cap_Espresso_Coffee_Machine', 'Pad_Filter_Coffee_Machine', 'Drip_Filter_Coffee_Machine']
Y_Axis['Life', 'expectancy', 'in', 'years']: ['10', '7', '7', '7', '6']

gold: The statistic illustrates the typical lifetime of coffee machines in the United States , by product type The life expectancy of fully automatic espresso coffee machines is approximately 10 years .
gold_template: The statistic illustrates the templateTitle[2] templateTitle[3] of templateXValue[0] templateTitle[1] in the country , templateTitle[4] templateTitle[5] templateTitle[6] The templateYLabel[0] templateYLabel[1] of templateXValue[0] templateTitle[1] is approximately templateYValue[max] templateYLabel[2] .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Life of Coffee typical in Coffee .  We can see that both Semi-Automatic_Espresso_Coffee_Machine and Hard_Cap_Espresso_Coffee_Machine have a very small amount whilst Drip_Filter_Coffee_Machine , Pad_Filter_Coffee_Machine and Fully_Automatic_Espresso_Coffee_Machine have a much higher amount . 

Example 15:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Most popular entertainment apps in the U.S. 2019 , by audience
X_Axis['List', 'Of', 'Apps']: ['YouTube_(main)', 'IMDb_(main)', 'Netflix_(main)', 'Apple_Music', 'Spotify', 'Pandora_Radio', 'Hulu', 'iHeartRadio', 'Google_Play_Music', 'Amazon_Prime_Video', 'Amazon_Music', 'SoundCloud', 'Vimeo_(main)', 'Shazam', 'Redbox']
Y_Axis['Monthly', 'users', 'in', 'millions']: ['163.76', '51.01', '46.55', '44.5', '44.21', '31.47', '26.49', '25.9', '21.78', '19.64', '16.46', '15.32', '15.06', '13.12', '12.72']

gold: In September 2019 , over 163.76 million mobile users accessed the YouTube app , making it the most popular mobile music and video apps in the United States . Netflix had a monthly mobile U.S. app audience of 45.66 million users .
gold_template: In templateTitleDate[0] , over templateYValue[max] templateScale mobile templateYLabel[1] accessed the templateXValue[0] app , making it the templateTitle[0] templateTitle[1] mobile templateXValue[3] and templateXValue[9] templateXLabel[1] in the templateTitle[4] . templateXValue[2] had a templateYLabel[0] mobile templateTitleSubject[0] app templateTitle[7] of 45.66 templateScale templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most popular in U.S. It shows Netflix_(main) was the Most at just 12.72 degrees and Spotify was the warmest at 163.76 users .  After Netflix_(main) , the next Most popular are YouTube_(main) at 163.76 degrees , followed by Redbox at 18 degrees , IMDb_(main) at 51.01 degrees and then Apple_Music at 44.5 degrees .

Example 16:
titleEntities: {'Subject': ['Netherlands'], 'Date': ['2018']}
title: Netherlands : average annual salary and bonuses 2018
X_Axis['Salaries']: ['Yearly_wage_including_bonuses', 'Yearly_wage_excluding_special_payments', 'Bonuses_and_allowances', 'Additional_tax_liability_for_company_car']
Y_Axis['Annual', 'wage', 'in', 'euros']: ['34670€', '30090€', '4580€', '420€']

gold: This statistic displays the average annual salary in the Netherlands in 2018 , in euros . It shows that the average employee , next to an annual salary of roughly 20,100 euros , also received an additional 4,600 euros in special payments . Together , the combined yearly salary in the Netherlands was approximately 34,700 euros .
gold_template: This statistic displays the templateTitle[1] templateYLabel[0] templateTitle[3] in the templateTitleSubject[0] in templateTitleDate[0] , in templateYLabel[2] . It shows that the templateTitle[1] employee , next to an templateYLabel[0] templateTitle[3] of roughly 20,100 templateYLabel[2] , also received an templateXValue[last] 4,600 templateYLabel[2] in templateXValue[1] . Together , the combined templateXValue[0] templateTitle[3] in the templateTitleSubject[0] was approximately 34,700 templateYLabel[2] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Netherlands average on Netherlands in the bonuses 2018 on different continents .  The most Netherlands average was in Additional_tax_liability_for_company_car where £ 34670€ % was average .  The amount in Yearly_wage_excluding_special_payments was a little lower at £ 30090€ ,000,000 .

Example 17:
titleEntities: {'Subject': ['UK'], 'Date': ['2017', '2019']}
title: Amounts outstanding of notes and coin in circulation in the UK 2017 to 2019
X_Axis['Month']: ["Dec_'19", "Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Mar_'18", "Feb_'18", "Jan_'18", "Dec_'17", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Apr_'17", "Mar_'17", "Feb_'17", "Jan_'17"]
Y_Axis['Amounts', 'outstanding', 'in', 'million', 'GBP']: ['82648', '82820', '82980', '82933', '82920', '82806', '82764', '82649', '82546', '82536', '82471', '82318', '82117', '81945', '81817', '81812', '81704', '81698', '81637', '81561', '81503', '81345', '81610', '81804', '81938', '82069', '82139', '82114', '82088', '82132', '82156', '82170', '82037', '81627', '81526', '81210']

gold: As of December 2019 , the value of outstanding notes and coins in circulation in the United Kingdom reached approximately 82.65 billion British pounds . This was an increase of over 1.4 billion British pounds as compared to January 2017 . When broken down by denomination , the twenty-pound note accounted for the highest share of notes in circulation .
gold_template: As of templateTitleDate[max] , the value of templateYLabel[1] templateTitle[2] and coins in templateTitle[4] in the United Kingdom reached approximately templateYValue[0] templateScale British pounds . This was an templatePositiveTrend of over 1.4 templateScale British pounds as compared to templateTitleDate[min] . When broken down by denomination , the twenty-pound note accounted for the highest share of templateTitle[2] in templateTitle[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Amounts outstanding in UK .  It shows Oct_'19 was the Amounts at just 81210 degrees and Aug_'19 was the warmest at 82980 degrees .  After Oct_'19 , the next Amounts outstanding are Dec_'19 at 82648 degrees , followed by Jan_'17 at 18 degrees , Nov_'19 at 82820 degrees and then Sep_'19 at 82933 degrees .

Example 18:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: COPD prevalence in the U.S. 2017 , by state
X_Axis['State']: ['Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'District_of_Columbia', 'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New_Hampshire', 'New_Jersey', 'New_Mexico', 'New_York', 'North_Carolina', 'North_Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode_Island', 'South_Carolina', 'South_Dakota', 'Tennessee', 'Texas', 'Total', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West_Virginia', 'Wisconsin', 'Wyoming']
Y_Axis['COPD', 'prevalence']: ['10.1', '6.3', '5.9', '9.3', '4.4', '4.2', '5.3', '7.3', '5.8', '7.1', '6.8', '3.4', '4.7', '6.4', '8', '5.9', '6.2', '11.3', '8.4', '6.5', '5.4', '5', '8', '4', '7.5', '7.9', '5.7', '5.3', '6.5', '6', '5.8', '5.6', '5', '7.3', '4.8', '7.6', '8.1', '4.9', '5.9', '7', '7.2', '4.4', '8.9', '4.8', '6.2', '4.1', '5.7', '6.6', '5.4', '13.8', '4.7', '6.1']

gold: This statistic shows the prevalence of Chronic Obstructive Pulmonary Disease ( COPD ) in the U.S. in 2017 , by state . As of that year , around 11.3 percent of adults in Kentucky suffered from COPD .
gold_template: This statistic shows the templateYLabel[1] of Chronic Obstructive Pulmonary Disease ( templateYLabel[0] ) in the templateTitleSubject[0] in templateTitleDate[0] , templateTitle[4] templateXLabel[0] . As of that year , around templateYValue[17] templateScale of adults in templateXValue[17] suffered from templateYLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the COPD prevalence in U.S. It shows Arizona was the COPD at just 3.4 degrees and California was the warmest at 13.8 degrees .  After Arizona , the next COPD prevalence are Alabama at 10.1 degrees , followed by Wyoming at 18 degrees , Alaska at 6.3 degrees and then Arkansas at 9.3 degrees .

Example 19:
titleEntities: {'Subject': ['Tourism'], 'Date': ['2018']}
title: Tourism industry growth expectations according to travel experts 2018
X_Axis['Response']: ['Significantly_decline', 'Slightly_decline', 'No_change', 'Slightly_grow', 'Significantly_grow']
Y_Axis['Share', 'of', 'respondents']: ['1', '11', '14', '56', '18']

gold: This statistic shows the results of a survey asking travel industry representatives and stakeholders at the London WTM exhibition ( UK ) to what extent do they expect the tourism industry to grow or decline in 2018 . Of respondents , 56 percent believed that the tourism industry will grow slightly in 2018 .
gold_template: This statistic shows the results of a survey asking templateTitle[5] templateTitle[1] representatives and stakeholders at the London WTM exhibition ( UK ) to what extent do they expect the templateTitleSubject[0] templateTitle[1] to templateXValue[3] or templateXValue[0] in templateTitleDate[0] . Of templateYLabel[1] , templateYValue[max] templateScale believed that the templateTitleSubject[0] templateTitle[1] will templateXValue[3] templateXValue[1] in templateTitleDate[0] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] templateScale in the templateXValue[3] templateXLabel[0] followed by the templateXValue[1] templateXLabel[0] at templateYValue[1] templateScale .
generated: The chart shows the Share of respondents at the Tourism street .  \\n The highest Share was 56 % in the Slightly_grow Response followed by the Slightly_decline Response at 11 % .

Example 20:
titleEntities: {'Subject': ['Lead'], 'Date': ['2019']}
title: Lead reserves worldwide by country 2019
X_Axis['Country']: ['Australia', 'China', 'Russia', 'Peru', 'Mexico', 'United_States', 'India', 'Kazakhstan', 'Bolivia', 'Sweden', 'Turkey', 'Other_countries']
Y_Axis['Reserves', 'in', 'million', 'metric', 'tons']: ['36.0', '18.0', '6.4', '6.3', '5.6', '5.0', '2.5', '2.0', '1.6', '1.1', '0.86', '0.0']

gold: Australia had the world 's largest reserves of lead reserves as of 2019 , amounting to 36 million metric tons that year . Lead and its uses Lead is a naturally occurring element that is soft and malleable . It is a post-transition metal that is very dense and is easily tarnished to a dull grey color .
gold_template: templateXValue[0] had the world 's largest templateYLabel[0] of templateTitleSubject[0] templateYLabel[0] as of templateTitleDate[0] , amounting to templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] that year . templateTitleSubject[0] and its uses templateTitleSubject[0] is a naturally occurring element that is soft and malleable . It is a post-transition metal that is very dense and is easily tarnished to a dull grey color .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Lead reserves worldwide by the Reserves of million they 've had .  \n It shows Australia has had 36.0 million , China has had the Lead at 0.0 million , Russia has had 6.4 , Peru has had 6.3 , Mexico has had the most million at 36.0 and Other_countries has had 0.0 million .

Example 21:
titleEntities: {'Subject': ['NFL'], 'Date': []}
title: Average player salary in the NFL by team 2018/19
X_Axis['Team', 'Name']: ['Jacksonville_Jaguars', 'Minnesota_Vikings', 'Tampa_Bay_Bucs', 'Pittsburgh_Steelers', 'San_Francisco_49ers', 'Tennessee_Titans', 'Denver_Broncos', 'Green_Bay_Packers', 'Carolina_Panthers', 'Chicago_Bears', 'Atlanta_Falcons', 'Los_Angeles_Rams', 'Detroit_Lions', 'New_England_Patriots', 'Cleveland_Browns', 'Philadelphia_Eagles', 'Cincinnati_Bengals', 'Oakland_Raiders', 'Los_Angeles_Chargers', 'Washington_Redskins', 'New_Orleans_Saints', 'New_York_Giants', 'Miami_Dolphins', 'Kansas_City_Chiefs', 'New_York_Jets', 'Houston_Texans', 'Arizona_Cardinals', 'Baltimore_Ravens', 'Seattle_Seahawks']
Y_Axis['Average', 'player', 'salary', 'in', 'million', 'U.S.', 'dollars']: ['3.34', '3.32', '3.21', '3.2', '3.17', '3.17', '3.13', '3.08', '3.07', '3.05', '3.05', '3.01', '3.01', '2.97', '2.93', '2.92', '2.91', '2.9', '2.87', '2.87', '2.83', '2.81', '2.79', '2.78', '2.78', '2.76', '2.71', '2.61', '2.57']

gold: The Jacksonville Jaguars had the highest average annual player salary in the 2018/19 season – each of their players took home an average of 3.34 million U.S. dollars . The Jaguars proved to be a cautionary tale about how money ca n't buy you success – the franchise finished the season bottom of the AFC South with a record of 5 - 11 . In comparison , the team with the lowest wage bill , the Seattle Seahawks , were able to make it out of their division only to narrowly miss out in the Wild Card Playoffs .
gold_template: The templateXValue[0] had the highest templateYLabel[0] annual templateYLabel[1] templateYLabel[2] in the templateTitle[6] season – each of their players took home an templateYLabel[0] of templateYValue[max] templateScale templateYLabel[4] templateYLabel[5] . The templateXValue[0] proved to be a cautionary tale about how money ca n't buy you success – the franchise finished the season bottom of the AFC South with a record of 5 - 11 . In comparison , the templateXLabel[0] with the lowest wage bill , the templateXValue[last] , were able to make it out of their division only to narrowly miss out in the Wild Card Playoffs .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average player in NFL .  It shows Tampa_Bay_Bucs was the Average at just 2.57 degrees and San_Francisco_49ers was the warmest at 3.34 degrees .  After Tampa_Bay_Bucs , the next Average player are Jacksonville_Jaguars at 3.34 degrees , followed by Seattle_Seahawks at 18 degrees , Minnesota_Vikings at 3.32 degrees and then Pittsburgh_Steelers at 3.2 degrees .

Example 22:
titleEntities: {'Subject': ['Production'], 'Date': ['2014']}
title: Production of titanium dioxide worldwide by country share 2014
X_Axis['Country']: ['China', 'Australia', 'South_Africa', 'Canada', 'Ukraine', 'India', 'Mozambique', 'Others']
Y_Axis['Percentage', 'of', 'global', 'production']: ['18', '17', '15', '11', '7', '7', '6', '19']

gold: This statistic illustrates the distribution of global titanium dioxide ( mineral sands ) production in 2014 , by country . Australia , China , and South Africa were the leading producers with 17 , 18 , and 15 percent , respectively . Titanium dioxide is one of the two core product streams of the mineral sands industry .
gold_template: This statistic illustrates the distribution of templateYLabel[1] templateTitle[1] templateTitle[2] ( mineral sands ) templateYLabel[2] in templateTitleDate[0] , templateTitle[4] templateXLabel[0] . templateXValue[1] , templateXValue[0] , and templateXValue[2] were the leading producers with templateYValue[1] , templateYValue[0] , and templateYValue[2] templateScale , respectively . templateTitle[1] templateTitle[2] is one of the two core product streams of the mineral sands industry .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Production titanium dioxide worldwide the Percentage of global they 've had .  \n It shows China has had 18 global , Australia has had the Production at 6 global , South_Africa has had 15 , Canada has had 11 , Ukraine has had the most global at 19 and Others has had 19 global .

Example 23:
titleEntities: {'Subject': ['Sweden'], 'Date': ['2019']}
title: Ranking of telecommunication companies in Sweden 2019 , by number of employees
X_Axis['Telecommunication', 'Companies']: ['Telia_Company_AB', 'Eltel_AB', 'Tele2_AB', 'Relacom_Management_AB', 'Tele2_Sverige_AB', 'Eltel_Networks_Infranet_AB', 'Telenor_Sverige_AB', 'Com_Hem_AB', 'Transtema_Network_Services_AB', 'Svenska_Rymd_AB', 'CLX_Communications_AB', 'Transtema_Group_AB', 'TelaVox_AB', 'A3_Allmänna_IT_-_och_Telekom_AB', 'Verizon_Sweden_AB', 'Telenor_Connexion_AB', 'Viafield_Sweden_AB', 'IT-Mästaren_Mitt_AB', 'Rebtel_Owners_AB', 'Reb_Tel_Networks_AB']
Y_Axis['Number', 'of', 'employees']: ['24468', '8781', '6924', '2667', '2344', '2125', '1530', '883', '739', '465', '340', '294', '229', '150', '124', '116', '95', '76', '75', '74']

gold: Based on the number of employees , Telia Company AB was the top ranked telecommunication company in Sweden in 2019 . Telia had nearly 25 thousand employees in Sweden . It was followed by Eltel AB and Tele2 AB , which had 8.7 and 6.9 thousand employees , respectively .
gold_template: Based on the templateYLabel[0] of templateYLabel[1] , templateXValue[0] was the top ranked templateXLabel[0] templateXValue[0] in templateXValue[14] in templateTitleDate[0] . templateXValue[0] had nearly 25 thousand templateYLabel[1] in templateXValue[14] . It was followed templateTitle[5] templateXValue[1] templateXValue[0] and templateXValue[2] templateXValue[0] , which had 8.7 and templateYValue[2] thousand templateYLabel[1] , respectively .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Ranking telecommunication in Sweden .  It shows Tele2_AB was the Ranking at just 74 degrees and Tele2_Sverige_AB was the warmest at 24468 degrees .  After Tele2_AB , the next Ranking telecommunication are Telia_Company_AB at 24468 degrees , followed by Reb_Tel_Networks_AB at 18 degrees , Eltel_AB at 8781 degrees and then Relacom_Management_AB at 2667 degrees .

Example 24:
titleEntities: {'Subject': ['Great Britain', 'UK'], 'Date': ['2016']}
title: Best cars to own based on build quality in Great Britain ( UK ) 2016
X_Axis['Car', 'model']: ['Lexus_NX_MkI', 'Lexus_RX_MkII', 'Lexus_RX_MkIII', 'Audi_Q3_MkI', 'Lexus_GS_MkIV', 'Lexus_IS_MkIII', 'Skoda_Superb_MkII', 'Subaru_Forester_MkIV', 'Lexus_CT_MkI', 'Audi_Q5_MkI', 'Skoda_Yeti_MkI', 'Renault_Kadjar_MkI', 'Volvo_V60_MkI', 'BMW_4_Series_MkI', 'Kia_Soul_MkII']
Y_Axis['Rating', 'out', 'of', '5']: ['97.02', '96.9', '96.76', '96.67', '96.59', '96.44', '95.9', '95.26', '95.01', '95', '95', '94.89', '94.81', '94.8', '94.78']

gold: This statistic shows the leading 15 car models according to the Auto Express Driver Power 2016 survey responses based on car build quality . The survey was carried out by the British automotive magazine online between 2014 and 2015 . Lexus dominated this category securing the top three spots with the NX MkI , RX MkII , and RX MkIII models as well as having three other models in the top 15 .
gold_template: This statistic shows the leading 15 templateXLabel[0] models according to the Auto Express Driver Power templateTitleDate[0] survey responses templateTitle[3] on templateXLabel[0] templateTitle[4] templateTitle[5] . The survey was carried templateYLabel[1] by the British automotive magazine online between 2014 and 2015 . templateXValue[0] dominated this category securing the top three spots with the templateXValue[0] , templateXValue[1] , and templateXValue[1] templateXValue[2] models as well as having three other models in the top 15 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Best cars in Great Britain .  It shows Lexus_RX_MkIII was the Best at just 94.78 degrees and Lexus_GS_MkIV was the warmest at 97.02 out .  After Lexus_RX_MkIII , the next Best cars are Lexus_NX_MkI at 97.02 degrees , followed by Kia_Soul_MkII at 18 degrees , Lexus_RX_MkII at 96.9 degrees and then Audi_Q3_MkI at 96.67 degrees .

Example 25:
titleEntities: {'Subject': ['Global'], 'Date': ['2017']}
title: Global industrial robot market : key companies by related revenue 2017
X_Axis['Companies']: ['ABB', 'Omron', 'Fanuc', 'Kawasaki_Robotics', 'KUKA', 'Yaskawa']
Y_Axis['Industrial', 'robot', 'revenue', 'in', 'million', 'euros']: ['6819', '3010', '1730', '1510', '1200', '1200']

gold: This statistic represents the leading companies in the global industrial robot market in 2017 , based on industrial robot revenue . In that year , Fanuc generated some 1.7 billion euros from industrial robot sales . Industrial robot market Although industrial robots have made inroads into a growing number of industries such as the food and beverages industry , the highly automated car manufacturing sector remains the largest area of application for electro-mechanical machines .
gold_template: This statistic represents the leading templateXLabel[0] in the templateTitleSubject[0] templateYLabel[0] templateYLabel[1] templateTitle[3] in templateTitleDate[0] , based on templateYLabel[0] templateYLabel[1] templateYLabel[2] . In that year , templateXValue[2] generated some templateYValue[2] templateScale templateYLabel[4] from templateYLabel[0] templateYLabel[1] sales . templateYLabel[0] templateYLabel[1] templateTitle[3] Although templateYLabel[0] robots have made inroads into a templatePositiveTrend number of industries such as the food and beverages industry , the highly automated car manufacturing sector remains the largest area of application for electro-mechanical machines .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Industrial of robot made by robot in a market key .  \\n From the chart we see that the Fanuc Companies was the Global industrial Companies in the key with 6819 robot .  The next Companies to make the most robot was the Kawasaki_Robotics Companies with 1510 robot closely followed by the Yaskawa Companies with 1200 robot .

Example 26:
titleEntities: {'Subject': ['Leading'], 'Date': ['2014']}
title: Leading crude oil refining companies worldwide by capacity 2014
X_Axis['Company', '(country)']: ['ExxonMobil_(U.S.)', 'Royal_Dutch_Shell_(Netherlands)', 'Sinopec_(China)', 'BP_PLC_(U.K.)', 'Saudi_Arabian_Oil_Company_(Saudi_Arabia)', 'Valero_Energy_Corporation_(U.S.)', 'Petróleos_de_Venezuela_S.A._(Venezuela)', 'China_National_Petroleum_Company_(China)', 'Chevron_Corp._(U.S.)', 'Phillips_66_(U.S.)', 'Total_S.A._(France)', 'Petróleo_Brasileiro_S.A._(Brazil)', 'Marathon_Oil_Corp._(U.S.)', 'Petróleos_Mexicanos_(Mexico)', 'National_Iranian_Oil_Company_(Iran)', 'JX_Nippon_Oil_&_Energy_Corp._(Japan)', 'Rosneft_(Russia)', 'OAO_Lukoil_(Russia)', 'SK_Innovation_(Korea)', 'Repsol_YPF_S.A._(Spain)']
Y_Axis['Refining', 'capacity', 'in', 'thousand', 'barrels', 'per', 'day']: ['5589', '4109', '3971', '2859', '2852', '2777', '2678', '2675', '2675', '2514', '2304', '1997', '1714', '1703', '1451', '1423', '1293', '1217', '1115', '1105']

gold: This statistic outlines the refining capacity of the leading 20 crude oil refining companies worldwide in 2014 . The Mexican state-owned petroleum company Petróleos Mexicanos , also known as Pemex , had a crude oil refining capacity of 1.7 million barrels per day in 2014 .
gold_template: This statistic outlines the templateYLabel[0] templateYLabel[1] of the templateTitleSubject[0] 20 templateTitle[1] templateXValue[4] templateYLabel[0] templateTitle[4] templateTitle[5] in templateTitleDate[0] . The Mexican state-owned templateXValue[7] templateXValue[4] templateXValue[6] templateXValue[13] , also known as Pemex , had a templateTitle[1] templateXValue[4] templateYLabel[0] templateYLabel[1] of templateYValue[12] templateScale templateYLabel[3] templateYLabel[4] templateYLabel[5] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading crude in Leading .  It shows Sinopec_(China) was the Leading at just 1105 degrees and Saudi_Arabian_Oil_Company_(Saudi_Arabia) was the warmest at 5589 degrees .  After Sinopec_(China) , the next Leading crude are ExxonMobil_(U.S.) at 5589 degrees , followed by Repsol_YPF_S.A._(Spain) at 18 degrees , Royal_Dutch_Shell_(Netherlands) at 4109 degrees and then BP_PLC_(U.K.) at 2859 degrees .

Example 27:
titleEntities: {'Subject': ['Global'], 'Date': ['2019']}
title: Global sulfur production by country 2019
X_Axis['Country']: ['China', 'United_States', 'Russia', 'Saudi_Arabia', 'Canada', 'Other', 'Kazakhstan', 'United_Arab_Emirates', 'India', 'Japan', 'South_Korea', 'Iran', 'Qatar', 'Chile', 'Poland', 'Finland', 'Kuwait', 'Australia', 'Germany', 'Venezuela', 'Italy', 'Netherlands', 'Brazil']
Y_Axis['Price', 'in', 'U.S.', 'dollars', 'per', 'ton']: ['17400', '8800', '7100', '6600', '5300', '3900', '3600', '3400', '3400', '3400', '3100', '2200', '2100', '1500', '1230', '940', '900', '900', '870', '700', '550', '520', '500']

gold: In 2019 , China produced around 17.4 megatons of sulfur , which makes China the world 's leading sulfur producer . China 's sulfur production includes byproduct elemental sulfur recovered from natural gas and petroleum , the estimated sulfur content of byproduct sulfuric acid from metallurgy , and the sulfur content of sulfuric acid from pyrite .
gold_template: In templateTitleDate[0] , templateXValue[0] produced around 17.4 megatons of templateTitle[1] , which makes templateXValue[0] the world 's leading templateTitle[1] producer . templateXValue[0] 's templateTitle[1] templateTitle[2] includes byproduct elemental templateTitle[1] recovered from natural gas and petroleum , the estimated templateTitle[1] content of byproduct sulfuric acid from metallurgy , and the templateTitle[1] content of sulfuric acid from pyrite .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Global sulfur in Global .  It shows Russia was the Global at just 500 degrees and Canada was the warmest at 17400 degrees .  After Russia , the next Global sulfur are China at 17400 degrees , followed by Brazil at 18 degrees , United_States at 8800 degrees and then Saudi_Arabia at 6600 degrees .

Example 28:
titleEntities: {'Subject': ['World Cup'], 'Date': ['2018']}
title: Domestic teams with the most players at the 2018 World Cup
X_Axis['Team']: ['Manchester_City', 'Real_Madrid', 'FC_Barcelona', 'Tottenham_Hotspur', 'FC_Paris_Saint-Germain', 'Chelsea_FC', 'FC_Bayern_München', 'Manchester_United', 'Juventus', 'Atlético_Madrid', 'Al-Hilal_Riad', 'Al-Ahli_Dschidda']
Y_Axis['Number', 'of', 'players']: ['16', '15', '14', '12', '12', '12', '11', '11', '11', '9', '9', '9']

gold: Manchester City was the most represented team at the World Cup in 2018 , with 16 of its players participating . One of those players , Benjamin Mendy , came back with a World Cup winners ' medal as France took home the trophy after beating Croatia 4 - 2 in the final . Premier League players at the World CupThe Premier League sent the largest contingent of players to the 2018 World Cup , with 108 of the footballers at the tournament plying their trade in the English top division .
gold_template: templateXValue[0] was the templateTitle[3] represented templateXLabel[0] at the templateTitleSubject[0] in templateTitleDate[0] , templateTitle[2] templateYValue[max] of its templateYLabel[1] participating . One of those templateYLabel[1] , Benjamin Mendy , came back templateTitle[2] a templateTitleSubject[0] winners ' medal as France took home the trophy after beating Croatia 4 - 2 in the final . Premier League templateYLabel[1] at the templateTitleSubject[0] CupThe Premier League sent the largest contingent of templateYLabel[1] to the templateTitleDate[0] templateTitleSubject[0] , templateTitle[2] 108 of the footballers at the tournament plying their trade in the English top division .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Number of players made by most in a players 2018 .  \\n From the chart we see that the FC_Barcelona Team was the Domestic teams Team in the 2018 with 16 players .  The next Team to make the most players was the Tottenham_Hotspur Team with 12 players closely followed by the Al-Ahli_Dschidda Team with 9 players .

Example 29:
titleEntities: {'Subject': ['France', 'Spanish'], 'Date': ['2018']}
title: Tour de France : Spanish winners until 2018
X_Axis['Cyclists']: ['Miguel_Induráin_(1991_1992_1993_1994_and_1995)', 'Alberto_Contador_(2007_and_2009)', 'Carlos_Sastre_(2008)', 'Óscar_Pereiro_(2006)', 'Perico_Delgado_(1988)', 'Luis_Ocaña_(1973)', 'Federico_Martín_Bahamontes_(1959)']
Y_Axis['Number', 'of', 'victories']: ['5', '2', '1', '1', '1', '1', '1']

gold: This statistic presents the list of Spanish cyclists who ever won the Tour de France until the 2018 edition . Miguel Induráin , with five consecutive victories between 1991 and 1995 , was the Spaniard who had won the French competition the most . The last Spaniard to win the Tour was Alberto Contador in 2009 .
gold_template: This statistic presents the list of templateTitleSubject[0] templateXLabel[0] who ever won the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[5] the templateTitleDate[0] edition . templateXValue[0] , with templateYValue[max] consecutive templateYLabel[1] between 1991 and 1995 , was the Spaniard who had won the French competition the most . The last Spaniard to win the templateTitle[0] was templateXValue[1] in 2009 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Tour de France Spanish the Number of victories they 've had .  \n It shows Miguel_Induráin_(1991_1992_1993_1994_and_1995) has had 5 victories , Alberto_Contador_(2007_and_2009) has had the Tour at 1 victories , Carlos_Sastre_(2008) has had 1 , Óscar_Pereiro_(2006) has had 1 , Perico_Delgado_(1988) has had the most victories at 5 and Federico_Martín_Bahamontes_(1959) has had 1 victories .

Example 30:
titleEntities: {'Subject': ['Finland'], 'Date': ['2018']}
title: Largest companies in Finland 2018 , by number of employees
X_Axis['Company']: ['Nokia_Oyj', 'KONE_Oyj', 'Stora_Enso_Oyj', 'Helsing_ja_Uudenmaan_Sairaanhoitopiirin_kuntayhtymä', 'Kesko_Oyj', 'PKC_Group_Oyj', 'Posti_Group_Oyj', 'UPM-Kymmene_Oyj', 'Wärtsilä_Oyj_Abp', 'Huhtamäki_Oyj', 'Caverion_Oyj', 'Konecranes_Oyj', 'SLP_Group_Oy', 'Tieto_Oyj', 'Solemo_Oy', 'Staffpoint_Oy', 'Valmet_Oyj', 'Metso_Oyj', 'Cargotec_Oyj', 'Outokumpu_Oyj']
Y_Axis['Number', 'of', 'employees']: ['101731', '53417', '26206', '22970', '22077', '21277', '20632', '19489', '17866', '17361', '16607', '15519', '15015', '13889', '13685', '12641', '12208', '11703', '11128', '10485']

gold: This statistic shows the largest companies in Finland as of November 2018 , by number of employees . At the time , Nokia Oyj was the largest company in Finland , employing a little over 101,700 people . Nokia is a global communications and IT company , largely known of its mobile phones and losing share of the mobile phone market in the beginning of the 21st century .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] as of templateTitleDate[0] , templateTitle[4] templateYLabel[0] of templateYLabel[1] . At the time , templateXValue[0] was the templateTitle[0] templateXLabel[0] in templateTitleSubject[0] , employing a little over 101,700 people . templateXValue[0] is a global communications and IT templateXLabel[0] , largely known of its mobile phones and losing share of the mobile phone market in the beginning of the 21st century .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Largest companies in Finland .  It shows Stora_Enso_Oyj was the Largest at just 10485 degrees and Kesko_Oyj was the warmest at 101731 degrees .  After Stora_Enso_Oyj , the next Largest companies are Nokia_Oyj at 101731 degrees , followed by Outokumpu_Oyj at 18 degrees , KONE_Oyj at 53417 degrees and then Helsing_ja_Uudenmaan_Sairaanhoitopiirin_kuntayhtymä at 22970 degrees .

Example 31:
titleEntities: {'Subject': ['MAU'], 'Date': ['2019']}
title: Facebook : most popular game MAU 2019
X_Axis['Facebook', 'games']: ['Texas_Holdem_Poker', '8_Ball_Pool', 'Candy_Crush_Saga', 'Farm_Heroes_Saga', 'Subway_Surfers', 'Clash_of_Clans', 'Dragon_City', 'Hay_Day', 'Trivia_Crack', 'Coin_Master']
Y_Axis['Monthly', 'active', 'users', 'in', 'millions']: ['10', '10', '10', '10', '5', '5', '5', '5', '5', '5']

gold: This statistic lists the most popular Facebook games , based on monthly active users . As of August 2019 , Candy Crush Saga had approximately ten million monthly active users on Facebook . Fifth-ranked Subway Surfers had five million MAU in the same period .
gold_template: This statistic lists the templateTitle[1] templateTitle[2] templateXLabel[0] templateXLabel[1] , based on templateYLabel[0] templateYLabel[1] templateYLabel[2] . As of templateTitleDate[0] , templateXValue[2] had approximately templateYValue[max] templateScale templateYLabel[0] templateYLabel[1] templateYLabel[2] on templateXLabel[0] . Fifth-ranked templateXValue[4] had templateYValue[min] templateScale templateTitleSubject[0] in the same period .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Facebook most popular game the Monthly of active they 've had .  \n It shows Texas_Holdem_Poker has had 10 active , 8_Ball_Pool has had the Facebook at 5 active , Candy_Crush_Saga has had 10 , Farm_Heroes_Saga has had 10 , Subway_Surfers has had the most active at 10 and Coin_Master has had 5 active .

Example 32:
titleEntities: {'Subject': ['Finland'], 'Date': ['2018']}
title: Density of the population of Finland in 2018 , by region
X_Axis['Finnish', 'Region']: ['Uusimaa', 'Southwest_Finland', 'Pirkanmaa', 'Päijät-Häme', 'Kymenlaakso', 'Kanta-Häme', 'Satakunta', 'South_Karelia', 'Ostrobothnia', 'Åland', 'Central_Finland', 'North_Savo', 'South_Ostrobothnia', 'Central_Ostrobothnia', 'North_Ostrobothnia', 'South_Savo', 'North_Karelia', 'Kainuu', 'Lapland']
Y_Axis['Number', 'of', 'inhabitants', 'per', 'square', 'kilometer']: ['183.7', '44.9', '40.9', '39.2', '33.7', '33.0', '28.0', '24.2', '23.3', '19.2', '16.5', '14.6', '14.1', '13.6', '11.2', '10.1', '9.1', '3.6', '1.9']

gold: The statistic shows the population density of Finland in 2018 , by region . The most densely populated region was Uusimaa with a density of approximately 184 inhabitants per square kilometer . Lapland was the most scarcely populated with roughly two inhabitants per square kilometer .
gold_template: The statistic shows the templateTitle[1] templateTitle[0] of templateXValue[1] in templateTitleDate[0] , templateTitle[4] templateXLabel[1] . The most densely populated templateXLabel[1] was templateXValue[0] with a templateTitle[0] of approximately templateYValue[max] templateYLabel[1] templateYLabel[2] templateYLabel[3] templateYLabel[4] . templateXValue[last] was the most scarcely populated with roughly templateYValue[min] templateYLabel[1] templateYLabel[2] templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Density population in Finland .  It shows Pirkanmaa was the Density at just 1.9 degrees and Kymenlaakso was the warmest at 183.7 degrees .  After Pirkanmaa , the next Density population are Uusimaa at 183.7 degrees , followed by Lapland at 18 degrees , Southwest_Finland at 44.9 degrees and then Päijät-Häme at 39.2 degrees .

Example 33:
titleEntities: {'Subject': ['Iceland'], 'Date': ['2016']}
title: Most common male names in Iceland 2016
X_Axis['Name']: ['Jón', 'Sigurður', 'Guðmundur', 'Gunnar', 'Ólafur/Olav', 'Einar', 'Kristján/Kristian/Christian', 'Magnús', 'Stefán/Stefan', 'Jóhann', 'Björn', 'Arnar', 'Árni', 'Bjarni', 'Helgi', 'Halldór', 'Pétur/Pjetur', 'Daníel', 'Kristinn', 'Ragnar']
Y_Axis['Number', 'of', 'individuals']: ['5224', '4210', '3964', '3134', '2770', '2440', '2420', '2333', '2203', '2022', '1701', '1667', '1582', '1506', '1487', '1426', '1411', '1367', '1309', '1242']

gold: This statistic shows the most common male names in Iceland in 2016 . The most popular name was Jón , with 5224 individuals having the name in 2016 . Sigurður and Guðmundur were the second and third most common male names during the time under consideration .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] in templateTitleSubject[0] in templateTitleDate[0] . The templateTitle[0] popular templateXLabel[0] was templateXValue[0] , with templateYValue[max] templateYLabel[1] having the templateXLabel[0] in templateTitleDate[0] . templateXValue[1] and templateXValue[2] were the second and third templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] during the time under consideration .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most common in Iceland .  It shows Guðmundur was the Most at just 1242 degrees and Ólafur/Olav was the warmest at 5224 degrees .  After Guðmundur , the next Most common are Jón at 5224 degrees , followed by Ragnar at 18 degrees , Sigurður at 4210 degrees and then Gunnar at 3134 degrees .

Example 34:
titleEntities: {'Subject': ['EU'], 'Date': ['2019', '2019']}
title: GDP growth in EU countries compared to same quarter previous year 1st quarter 2019
X_Axis['Country']: ['Croatia', 'Poland', 'Hungary', 'Romania', 'Bulgaria', 'Lithuania', 'Slowakia', 'Cyprus', 'Slovenia', 'Spain', 'Sweden', 'Czech_Republic', 'EU', 'Estonia', 'United_Kingdom', 'Portugal', 'Netherlands', 'Malta', 'Euro_area', 'Germany', 'Austria', 'Belgium', 'Luxembourg', 'France', 'Denmark', 'Greece', 'Finland', 'Ireland', 'Italy', 'Latvia']
Y_Axis['Change', 'compared', 'to', 'the', 'same', 'quarter', 'of', 'the', 'previous', 'year']: ['1.8', '1.5', '1.5', '1.3', '1.2', '1', '0.9', '0.9', '0.8', '0.7', '0.6', '0.6', '0.5', '0.5', '0.5', '0.5', '0.5', '0.5', '0.4', '0.4', '0.4', '0.3', '0.3', '0.3', '0.2', '0.2', '0.2', '0.1', '0.1', '-0.1']

gold: The statistic shows the growth of the real gross domestic product ( GDP ) in the EU member states in the first quarter 2019 compared to the same quarter of the previous year . GDP is the total value of all goods and services produced in a country in a year . It is considered to be a very important indicator of the economic strength of a country and a positive change in it is a sign of economic growth .
gold_template: The statistic shows the templateTitle[1] of the real gross domestic product ( templateTitle[0] ) in the templateXValue[12] member states in the first templateYLabel[3] templateTitleDate[0] templateYLabel[1] to the templateYLabel[2] templateYLabel[3] of the templateYLabel[4] templateYLabel[5] . templateTitle[0] is the total value of all goods and services produced in a templateXLabel[0] in a templateYLabel[5] . It is considered to be a very important indicator of the economic strength of a templateXLabel[0] and a positive templateYLabel[0] in it is a sign of economic templateTitle[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the GDP growth in EU .  It shows Hungary was the GDP at just -0.1 degrees and Bulgaria was the warmest at 1.8 degrees .  After Hungary , the next GDP growth are Croatia at 1.8 degrees , followed by Latvia at 18 degrees , Poland at 1.5 degrees and then Romania at 1.3 degrees .

Example 35:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: State unemployment rate in the U.S. 2018
X_Axis['State']: ['Alaska', 'District_of_Columbia', 'West_Virginia', 'New_Mexico', 'Louisiana', 'Arizona', 'Mississippi', 'Nevada', 'Ohio', 'Washington', 'Illinois', 'Kentucky', 'Pennsylvania', 'Oregon', 'California', 'Connecticut', 'Michigan', 'New_Jersey', 'New_York', 'Rhode_Island', 'Wyoming', 'Maryland', 'Texas', 'Alabama', 'North_Carolina', 'Georgia', 'Delaware', 'Arkansas', 'Montana', 'Florida', 'Tennessee', 'Maine', 'Oklahoma', 'South_Carolina', 'Kansas', 'Indiana', 'Colorado', 'Massachusetts', 'Missouri', 'Utah', 'South_Dakota', 'Virginia', 'Wisconsin', 'Minnesota', 'Idaho', 'Nebraska', 'Vermont', 'North_Dakota', 'New_Hampshire', 'Iowa', 'Hawaii']
Y_Axis['Unemployment', 'rate']: ['6.6', '5.6', '5.3', '4.9', '4.9', '4.8', '4.8', '4.6', '4.6', '4.5', '4.3', '4.3', '4.3', '4.2', '4.2', '4.1', '4.1', '4.1', '4.1', '4.1', '4.1', '3.9', '3.9', '3.9', '3.9', '3.9', '3.8', '3.7', '3.7', '3.6', '3.5', '3.4', '3.4', '3.4', '3.4', '3.4', '3.3', '3.3', '3.2', '3.1', '3', '3', '3', '2.9', '2.8', '2.8', '2.7', '2.6', '2.5', '2.5', '2.4']

gold: This table ranks the 50 states of the United States and the District of Columbia by their unemployment rate in 2018 . In 2018 , Alaska had the highest unemployment rate in the United States with 6.6 percent .
gold_template: This table ranks the 50 states of the templateTitle[3] and the templateXValue[1] of templateXValue[1] by their templateYLabel[0] templateYLabel[1] in templateTitleDate[0] . In templateTitleDate[0] , templateXValue[0] had the highest templateYLabel[0] templateYLabel[1] in the templateTitle[3] with templateYValue[max] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the State unemployment rate in the U.S. competirion .  \\n From the chart we see that the Louisiana State made the State rate by some margin , with only 2.4 District_of_Columbia and Alaska made a respectable 5.6 and 6.6 rate , with Hawaii and New_Mexico not far behind , at 2.4 and 4.9 respectively .

Example 36:
titleEntities: {'Subject': ['Global'], 'Date': []}
title: Global oilseed production 2019/20 , by type
X_Axis['Leading', 'type', 'of', 'Oilseed']: ['Copra', 'Cottonseed', 'Palm_kernel', 'Peanuts', 'Rapeseed', 'Soybeans', 'Sunflowerseed']
Y_Axis['Production', 'in', 'million', 'metric', 'tons']: ['5.81', '44.3', '20.02', '45.52', '68.02', '337.48', '53.48']

gold: In the 2019/2020 crop year , soybeans were the leading type of oilseed in the world . That year , some 337.5 million metric tons of soybeans were produced worldwide . Vegetable oil production Though soybeans are the most produced type of oilseed , the world 's leading vegetable oil is palm oil .
gold_template: In the 2019/2020 crop year , templateXValue[5] were the templateXLabel[0] templateXLabel[1] of templateXLabel[2] in the world . That year , some templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] of templateXValue[5] were produced worldwide . Vegetable oil templateYLabel[0] Though templateXValue[5] are the most produced templateXLabel[1] of templateXLabel[2] , the world 's templateXLabel[0] vegetable oil is templateXValue[2] oil .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Production of million made by production in a 2019/20 by .  \\n From the chart we see that the Palm_kernel Leading was the Global oilseed Leading in the by with 337.48 million .  The next Leading to make the most million was the Peanuts Leading with 45.52 million closely followed by the Sunflowerseed Leading with 53.48 million .

Example 37:
titleEntities: {'Subject': ['England'], 'Date': ['2018']}
title: England : most popular sports in 2018 , by monthly participants
X_Axis['Sport']: ['Running', 'Fitness_class', 'Gym_session', 'Swimming', 'Exercise_machines', 'Climbing_or_Mountaineering', 'Interval_sessions', 'Football', 'Weights_session', 'Generic_fitness_training', 'Golf', 'Tennis', 'Badminton', 'Boxing_(includes_boxing_fitness_classes)', 'Rowing_(includes_indoor_rowing)']
Y_Axis['Number', 'of', 'participants', 'in', 'thousand']: ['6831.6', '6505.1', '5692.7', '4489.7', '3851.0', '2584.6', '2304.4', '2095.9', '2036.6', '1890.2', '945.7', '840.2', '839.7', '771.6', '639.6']

gold: Sports in the United Kingdom ( UK ) is governed by the association UK Sport , which funds and governs various other sport associations , one of which is Sport England , the sports governing body for England . Sport England conducts annual surveys on sports participation throughout England , gathering data on demographics , habits , preferences and more . Running , fitness and gym are most popular When it comes to regular participation , meaning at least twice in the past 28 days of questioning , running is the most popular form of taking part in a sports activity , with approximately 6.8 million people in England running regularly .
gold_template: templateTitle[3] in the United Kingdom ( UK ) is governed templateTitle[5] the association UK templateXLabel[0] , which funds and governs various other templateXLabel[0] associations , one of which is templateXLabel[0] templateTitleSubject[0] , the templateTitle[3] governing body for templateTitleSubject[0] . templateXLabel[0] templateTitleSubject[0] conducts annual surveys on templateTitle[3] participation throughout templateTitleSubject[0] , gathering data on demographics , habits , preferences and more . templateXValue[0] , templateXValue[1] and templateXValue[2] are templateTitle[1] templateTitle[2] When it comes to regular participation , meaning at least twice in the past 28 days of questioning , templateXValue[0] is the templateTitle[1] templateTitle[2] form of taking part in a templateTitle[3] activity , with approximately templateYValue[max] templateScale people in templateTitleSubject[0] templateXValue[0] regularly .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the England most in England .  It shows Gym_session was the England at just 639.6 degrees and Exercise_machines was the warmest at 6831.6 participants .  After Gym_session , the next England most are Running at 6831.6 degrees , followed by Rowing_(includes_indoor_rowing) at 18 degrees , Fitness_class at 6505.1 degrees and then Swimming at 4489.7 degrees .

Example 38:
titleEntities: {'Subject': ['Facebook'], 'Date': ['2018']}
title: Countries with biggest Facebook user share 2018
X_Axis['Country']: ['India', 'United_States', 'Brazil', 'Indonesia', 'Mexico', 'Philippines', 'Vietnam', 'Thailand', 'Turkey', 'United_Kingdom']
Y_Axis['Share', 'of', 'global', 'monthly', 'active', 'Facebook', 'users']: ['12', '11', '6', '6', '4', '3', '3', '2', '2', '2']

gold: The statistic shows a ranking on the leading countries based on their share of Facebook users worldwide as of January 2018 . During the measured period , the United States accounted for 11 percent of the global Facebook population . India accounted for 12 percent of total Facebook users worldwide , having finally overtaken the United States in terms of Facebook user figures .
gold_template: The statistic shows a ranking on the leading templateTitle[0] based on their templateYLabel[0] of templateYLabel[4] templateYLabel[5] worldwide as of templateTitleDate[0] . During the measured period , the templateXValue[1] accounted for templateYValue[1] templateScale of the templateYLabel[1] templateYLabel[4] population . templateXValue[0] accounted for templateYValue[max] templateScale of total templateYLabel[4] templateYLabel[5] worldwide , having finally overtaken the templateXValue[1] in terms of templateYLabel[4] templateTitle[4] figures .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Countries biggest Facebook user the Share of global they 've had .  \n It shows India has had 12 global , United_States has had the Countries at 2 global , Brazil has had 6 , Indonesia has had 6 , Mexico has had the most global at 12 and United_Kingdom has had 2 global .

Example 39:
titleEntities: {'Subject': ['United Kingdom'], 'Date': ['2018']}
title: United Kingdom : largest import commodities 2018
X_Axis['Month']: ['Fuels', 'Animal_and_vegetable_oils_and_fats', 'Crude_materials', 'Marieral_manufactures', 'Chemicals', 'Beverages_and_tobacoo', 'Machinery_and_transport_equipment', 'Food_and_live_animals', 'Miscellaneous_manufactures', 'Unspecified_goods']
Y_Axis['Value', 'of', 'imports', 'in', 'million', 'GBP']: ['152.9', '112.9', '112.6', '107.2', '106.9', '105.9', '104.8', '104.3', '103.8', '95.8']

gold: This statistic shows the 30 largest import commodities of the United Kingdom ( UK ) in 2018 in million GBP . This ranges from machinery and oil to food and chemicals . In this year , the largest imported commodity was fuel , with approximately 152 million British pounds , followed by animal and vegetable oils and crude materials with almost 113 million British pounds each .
gold_template: This statistic shows the 30 templateTitle[2] templateTitle[3] templateTitle[4] of the templateTitleSubject[0] ( UK ) in templateTitleDate[0] in templateScale templateYLabel[3] . This ranges from templateXValue[6] and oil to templateXValue[7] and templateXValue[4] . In this year , the templateTitle[2] imported commodity was fuel , with approximately 152 templateScale British pounds , followed by templateXValue[1] and templateXValue[1] and templateXValue[2] with almost templateYValue[1] templateScale British pounds each .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the United Kingdom largest in the import competirion .  \\n From the chart we see that the Chemicals Month made the United imports by some margin , with only 95.8 Animal_and_vegetable_oils_and_fats and Fuels made a respectable 112.9 and 152.9 imports , with Unspecified_goods and Marieral_manufactures not far behind , at 95.8 and 107.2 respectively .

Example 40:
titleEntities: {'Subject': ['California'], 'Date': ['2019']}
title: Number of active physicians in California 2019 , by specialty area
X_Axis['Specialty', 'area']: ['Psychiatry', 'Surgery', 'Anesthesiologists', 'Emergency_medicine', 'Radiology', 'Cardiology', 'Oncology_(cancer)', 'Endocrinology_diabetes_&_metabolism', 'All_other_specialities', 'Total_specialty']
Y_Axis['Number', 'of', 'physicians']: ['7288', '5367', '6098', '6050', '5012', '3235', '1898', '822', '23001', '58771']

gold: This statistic depicts the number of active physicians in California as of March 2019 , ordered by their specialty area . At that time , there were 6,098 anesthesiologists active in California . There are over 58,000 active physicians in the state .
gold_template: This statistic depicts the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitleSubject[0] as of templateTitleDate[0] , ordered templateTitle[5] their templateXValue[last] templateXLabel[1] . At that time , there were templateYValue[2] templateXValue[2] templateTitle[1] in templateTitleSubject[0] . There are over 58,000 templateTitle[1] templateYLabel[1] in the state .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Number active physicians in the California competirion .  \\n From the chart we see that the Radiology Specialty made the Number physicians by some margin , with only 822 .  Surgery and Psychiatry made a respectable 5367 and 7288 physicians , with Total_specialty and Emergency_medicine not far behind , at 58771 and 6050 respectively .

Example 41:
titleEntities: {'Subject': ['Ireland'], 'Date': ['2019']}
title: Grocery market share in Ireland 2019
X_Axis['Grocery', 'Store']: ['Dunnes', 'SuperValu', 'Tesco', 'Aldi', 'Lidl', 'Other_outlets']
Y_Axis['Market', 'share', 'of', 'total', 'grocers']: ['22.2', '21.4', '21.4', '12.5', '11.9', '10.6']

gold: This statistic illustrates the market share of grocery stores in Ireland for the 12 weeks ending September 8 , 2019 . Dunnes held the highest market share at 22.2 percent , followed by SuperValu at 21.4 percent . The cost of food on the Irish market deflated amid lowering prices .
gold_template: This statistic illustrates the templateYLabel[0] templateYLabel[1] of templateXLabel[0] stores in templateTitleSubject[0] for the templateYValue[4] weeks ending 8 , templateTitleDate[0] . templateXValue[0] held the highest templateYLabel[0] templateYLabel[1] at templateYValue[max] templateScale , followed by templateXValue[1] at templateYValue[1] templateScale . The cost of food on the Irish templateYLabel[0] deflated amid lowering prices .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Market of share made by share in a Ireland 2019 .  \\n From the chart we see that the Tesco Grocery was the Grocery market in the 2019 with 22.2 share .  The next Grocery to make the most share was the Aldi Grocery with 12.5 share closely followed by the Other_outlets Grocery with 10.6 share .

Example 42:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2012']}
title: Survey on amount of money spent on boating in the U.S. 2012
X_Axis['Yearly', 'expenses']: ['under_500$', '$500_to_$999', '$1000_to_$1999', '$2000_to_$4999', 'over_$5000']
Y_Axis['Percentage', 'of', 'boat', 'owners']: ['30.5', '15.5', '18.3', '17.4', '18.3']

gold: The statistic depicts the amount of money boat owners in the U.S. spent on boating in 2012 . 18.3 percent of the respondents stated that they spent between $ 1,000 and $ 1,999 on boating in 2012 .
gold_template: The statistic depicts the templateTitle[1] of templateTitle[2] templateYLabel[1] templateYLabel[2] in the templateTitleSubject[0] templateTitle[3] on templateTitle[4] in templateTitleDate[0] . templateYValue[last] templateScale of the respondents stated that they templateTitle[3] between $ 1,000 and $ 1,999 on templateTitle[4] in templateTitleDate[0] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Percentage of boat owners at the U.S. street .  \\n The highest Percentage was 30.5 in the $2000_to_$4999 Yearly followed by 15.5 percentage in the $500_to_$999 Yearly , 30.5 percentage in $2000_to_$4999 and finally 15.5 percentage in over_$5000 .

Example 43:
titleEntities: {'Subject': ['Facebook'], 'Date': []}
title: Music genres most `` liked `` on Facebook by college students
X_Axis['Music', 'genre']: ['Hip_Hop', 'Country', 'Rock_&_Roll', 'Pop', 'Jazz', 'Classical']
Y_Axis['Number', 'of', '"likes"']: ['314540', '299700', '244840', '224140', '106000', '66380']

gold: This statistic shows the music genres most `` liked `` by U.S. college students on Facebook as of July 2011 . Country music received 299,700 likes from U.S. college students .
gold_template: This statistic shows the templateXLabel[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] templateTitle[3] templateTitle[7] U.S. templateTitle[8] templateTitle[9] on templateTitleSubject[0] as of 2011 . templateXValue[1] templateXLabel[0] received templateYValue[1] likes from U.S. templateTitle[8] templateTitle[9] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Music genres most in the `` competirion .  \\n From the chart we see that the Jazz Music made the Music "likes" by some margin , with only 66380 .  Country and Hip_Hop made a respectable 299700 and 314540 "likes" , with Classical and Pop not far behind , at 66380 and 224140 respectively .

Example 44:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2014']}
title: Leading bar soap brands ranked by sales value in the United Kingdom ( UK ) 2014
X_Axis['Soap', 'Bar', 'Brand']: ['Dove', 'Imperial_Leather', 'Simple']
Y_Axis['Sales', 'in', 'million', 'GBP']: ['26.8', '11.1', '5.8']

gold: This statistic shows the leading 3 brands of bar soap sold in the United Kingdom ( UK ) ranked by their total sales in the year to December 2014 . The ranking reveals that Dove is the top bar soap brand sold in the United Kingdom , generating 26.8 million pounds in sales that year .
gold_template: This statistic shows the templateTitle[0] 3 templateTitle[3] of templateXLabel[1] templateXLabel[0] sold in the templateTitleSubject[0] ( templateTitleSubject[1] ) templateTitle[4] templateTitle[5] their total templateYLabel[0] in the year to templateTitleDate[0] . The ranking reveals that templateXValue[0] is the top templateXLabel[1] templateXLabel[0] templateXLabel[2] sold in the templateTitleSubject[0] , generating templateYValue[max] templateScale pounds in templateYLabel[0] that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Leading bar soap in Dove 2014 compared with that in Imperial_Leather and the Simple .  In Dove there was a 26.8 million difference in the salaries of men and women .  In Imperial_Leather the difference was 5.8 million .

Example 45:
titleEntities: {'Subject': ['ID'], 'Date': ['2016']}
title: Preferred social login ID worldwide 2016
X_Axis['Platform']: ['Facebook', 'GooglePlus', 'Twitter', 'LinkedIn', 'Yahoo', 'Vkontakte', 'Live']
Y_Axis['Share', 'of', 'logins']: ['53.1', '44.8', '1.01', '0.56', '0.29', '0.15', '0.11']

gold: This statistic gives information on the preferred social login ID used by internet users worldwide . During the second quarter of 2016 , data analysis revealed that 53.1 percent of social logins were through a Facebook account . Approximately one percent of internet users used their Twitter account to login to a website .
gold_template: This statistic gives information on the templateTitle[0] templateTitle[1] templateTitle[2] templateTitleSubject[0] used by internet users templateTitle[4] . During the second quarter of templateTitleDate[0] , data analysis revealed that templateYValue[max] templateScale of templateTitle[1] templateYLabel[1] were through a templateXValue[0] account . Approximately templateYValue[2] templateScale of internet users used their templateXValue[2] account to templateTitle[2] to a website .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Share of logins made by login in a ID worldwide .  \\n From the chart we see that the Twitter Platform was the Preferred social Platform in the worldwide with 53.1 logins .  The next Platform to make the most logins was the LinkedIn Platform with 0.56 logins closely followed by the Live Platform with 0.11 logins .

Example 46:
titleEntities: {'Subject': ['North America'], 'Date': ['2019']}
title: The most successful music tours in North America in 2019
X_Axis['Artist', '/', 'Band']: ['The_Rolling_Stones', 'Elton_John', 'Bob_Seger_&_The_Silver_Bullet_Band', 'Pink', 'Ariana_Grande', 'Jonas_Brothers', 'Kiss', 'Fleetwood_Mac', 'Garth_Brooks', 'Justin_Timberlake', 'Billy_Joel', 'Dead_&_Company', 'Eric_Church', 'Michael_Buble', 'Trans-Siberian_Orchesta']
Y_Axis['Gross', 'revenue', 'in', 'million', 'U.S.', 'dollars']: ['177.8', '157.4', '97.0', '87.8', '82.6', '81.7', '81.6', '77.5', '76.1', '75.6', '70.4', '68.6', '68.6', '66.7', '65.7']

gold: In 2019 , the most successful music tour in North America based on gross revenue was that of The Rolling Stones , which generated 177.8 million U.S. dollars . Following closely behind was Elton John 's tour , which made 157.4 million dollars in revenue and sold over 1.15 million tickets .
gold_template: In templateTitleDate[0] , the templateTitle[0] templateTitle[1] templateTitle[2] tour in templateTitleSubject[0] based on templateYLabel[0] templateYLabel[1] was that of The templateXValue[0] , which generated templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . Following closely behind was templateXValue[1] 's tour , which made templateYValue[1] templateScale templateYLabel[4] in templateYLabel[1] and sold over 1.15 templateScale tickets .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the most successful in North America .  It shows Bob_Seger_&_The_Silver_Bullet_Band was the most at just 65.7 degrees and Ariana_Grande was the warmest at 177.8 revenue .  After Bob_Seger_&_The_Silver_Bullet_Band , the next most successful are The_Rolling_Stones at 177.8 degrees , followed by Trans-Siberian_Orchesta at 18 degrees , Elton_John at 157.4 degrees and then Pink at 87.8 degrees .

Example 47:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2005']}
title: Discharge of the largest rivers in the U.S. as of 2005
X_Axis['Us', 'River']: ['Mississippi_(Louisiana)', 'St_Lawrence_(Canada)', 'Ohio_(Illinois-Kentucky)', 'Columbia_(Oregon-Washington)', 'Yukon_(Alaska)', 'Missouri_(Missouri)', 'Tennessee_(Kentucky)', 'Mobile_(Alabama)', 'Kuskokwim_(Alaska)', 'Copper_(Alaska)', 'Atchafalaya_(Louisiana)', 'Snake_(Washington)', 'Stikine_(Alaska)', 'Red_River_(Louisiana)', 'Susitna_(Alaska)', 'Arkansas_(Arkansas)', 'Tanana_(Alaska)', 'Susquehanna_(Maryland)', 'Willamette_(Oregon)', 'Nushagak_(Alaska)', 'Procupine_(Alaska)']
Y_Axis['Discharge', 'in', 'thousand', 'cubic', 'feet', 'per', 'second']: ['593.0', '348.0', '281.0', '265.0', '225.0', '76.2', '68.0', '67.2', '67.0', '59.0', '58.0', '56.9', '56.0', '56.0', '51.0', '41.0', '41.0', '38.2', '37.4', '36.0', '23.0']

gold: This statistic shows the average discharge at mouth of the largest rivers in the U.S. in 2005 . The Missouri river has an average discharge of 76,2 thousand cubic feet per second at its mouth .
gold_template: This statistic shows the average templateYLabel[0] at mouth of the templateTitle[1] templateTitle[2] in the templateTitleSubject[0] in templateTitleDate[0] . The templateXValue[5] templateXValue[13] has an average templateYLabel[0] of 76,2 thousand templateYLabel[2] templateYLabel[3] templateYLabel[4] templateYLabel[5] at its mouth .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Discharge largest in U.S. It shows Ohio_(Illinois-Kentucky) was the Discharge at just 23.0 degrees and Yukon_(Alaska) was the warmest at 593.0 degrees .  After Ohio_(Illinois-Kentucky) , the next Discharge largest are Mississippi_(Louisiana) at 593.0 degrees , followed by Procupine_(Alaska) at 18 degrees , St_Lawrence_(Canada) at 348.0 degrees and then Columbia_(Oregon-Washington) at 265.0 degrees .

Example 48:
titleEntities: {'Subject': ['Twitter'], 'Date': ['2020']}
title: Twitter : distribution of global audiences 2020 , by gender
X_Axis['Sex']: ['Female', 'Male']
Y_Axis['Percentage', 'of', 'users']: ['38', '62']

gold: This statistic gives information on the distribution of Twitter users worldwide as of January 2020 , sorted by gender . During the survey period , 38 percent of Twitter audiences were female and 62 percent were male .
gold_template: This statistic gives information on the templateTitle[1] of templateTitleSubject[0] templateYLabel[1] worldwide as of templateTitleDate[0] , sorted templateTitle[5] templateTitle[6] . During the survey period , templateYValue[min] templateScale of templateTitleSubject[0] templateTitle[3] were templateXValue[0] and templateYValue[max] templateScale were templateXValue[last] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Twitter distribution global in Female 2020 compared with that in Male and the Male .  In Female there was a 62 percentage difference in the salaries of men and women .  In Male the difference was 38 percentage .

Example 49:
titleEntities: {'Subject': ['Number M A'], 'Date': ['2019']}
title: Number of M & A deals in the U.S. 2019 , by deal value
X_Axis['Deal', 'value', 'in', 'million', 'U.S.', 'dollars']: ['More_than_1000', '500_to_999', '250_to_499.9', '100_to_249.9', '50_to_99.9', '25_to_49.9', '10_to_24.9', 'Under_10', 'Undisclosed', 'Total']
Y_Axis['Number', 'of', 'deals']: ['281', '205', '293', '441', '361', '348', '370', '698', '9716', '12713']

gold: The statistic presents the number of M & A deals in the United States as of September 2019 , by deal value . In that year , there were 281 M & A transactions valued at more than one billion U.S. dollars in the United States . The overall number of M & A deals in the 12 months ending September 30 , 2019 amounted to 12,713 .
gold_template: The statistic presents the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] A templateYLabel[1] in the templateTitle[4] as of templateTitleDate[0] , templateTitle[6] templateXLabel[0] templateXLabel[1] . In that year , there were templateYValue[0] templateTitleSubject[0] templateTitle[2] A transactions valued at templateXValue[0] one templateScale templateXLabel[3] templateXLabel[4] in the templateTitle[4] . The overall templateYLabel[0] of templateTitleSubject[0] templateTitle[2] A templateYLabel[1] in the 12 months ending 30 , templateTitleDate[0] amounted to templateYValue[max] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Number M & in the deals competirion .  \\n From the chart we see that the 50_to_99.9 Deal made the Number deals by some margin , with only 205 .  500_to_999 and More_than_1000 made a respectable 205 and 281 deals , with Total and 100_to_249.9 not far behind , at 12713 and 441 respectively .

Example 50:
titleEntities: {'Subject': ['Marathons'], 'Date': ['2016']}
title: Marathons ranked by number of finishers worldwide 2016
X_Axis['Cities']: ['New_York_City_U.S.', 'Paris_FRA', 'Chicago_U.S.', 'London_GBR', 'Tokyo_JPN', 'Berlin_GER', 'Osaka_JPN', 'Boston_MA', 'Yokohama_JPN', 'Los_Angeles_U.S.']
Y_Axis['Number', 'of', 'finishers']: ['51388', '41708', '40608', '39072', '36150', '36054', '29431', '26606', '22594', '20617']

gold: The statistic shows a ranking of marathons worldwide by the total number of finishers in 2016 . In 2016 , the New York Marathon had a total of 51,388 finishers .
gold_template: The statistic shows a ranking of templateTitleSubject[0] templateTitle[5] templateTitle[2] the total templateYLabel[0] of templateYLabel[1] in templateTitleDate[0] . In templateTitleDate[0] , the templateXValue[0] Marathon had a total of templateYValue[max] templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Marathons ranked by in the number competirion .  \\n From the chart we see that the Tokyo_JPN Cities made the Marathons finishers by some margin , with only 20617 .  Paris_FRA and New_York_City_U.S. made a respectable 41708 and 51388 finishers , with Los_Angeles_U.S. and London_GBR not far behind , at 20617 and 39072 respectively .

Example 51:
titleEntities: {'Subject': ['Spotify'], 'Date': ['2019']}
title: Spotify 's premium subscribers 2015 to 2019
X_Axis['Quarter']: ['Q4_2019', 'Q3_2019', 'Q2_2019', 'Q1_2019', 'Q4_2018', 'Q3_2018', 'Q2_2018', 'Q1_2018', 'Q4_2017', 'Q3_2017', 'Q2_2017', 'Q1_2017', 'Q4_2016', 'Q3_2016', 'Q2_2016', 'Q1_2016', 'Q4_2015', 'Q3_2015', 'Q2_2015', 'Q1_2015']
Y_Axis['Paying', 'subscribers', 'in', 'millions']: ['124', '113', '108', '100', '96', '87', '83', '75', '71', '62', '59', '52', '48', '40', '36', '30', '28', '24', '22', '18']

gold: How many paid subscribers does Spotify have ? As of the fourth quarter of 2019 , Spotify had 124 million premium subscribers worldwide , up from 96 million in the corresponding quarter of 2018 . Spotify 's subscriber base has increased dramatically in the last few years , more than doubling in just three years . Spotify and competitors Spotify is a music streaming service originally founded in 2006 in Sweden .
gold_template: How many paid templateYLabel[1] does templateTitleSubject[0] have ? As of the fourth templateXLabel[0] of templateXValue[0] , templateTitleSubject[0] had templateYValue[max] templateScale templateTitle[2] templateYLabel[1] worldwide , up from templateYValue[4] templateScale in the corresponding templateXLabel[0] of templateXValue[4] . templateTitleSubject[0] templateTitle[1] subscriber base has templatePositiveTrend dramatically in the last few years , more than doubling in just three years . templateTitleSubject[0] and competitors templateTitleSubject[0] is a music streaming service originally founded in 2006 in Sweden .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Spotify 's in Spotify .  It shows Q2_2019 was the Spotify at just 18 degrees and Q4_2018 was the warmest at 124 degrees .  After Q2_2019 , the next Spotify 's are Q4_2019 at 124 degrees , followed by Q1_2015 at 18 degrees , Q3_2019 at 113 degrees and then Q1_2019 at 100 degrees .

Example 52:
titleEntities: {'Subject': ['German'], 'Date': ['2019']}
title: German national football team - players with the most goals 2019
X_Axis['Month']: ['Miroslav_Klose', 'Gerd_Müller', 'Joachim_Streich', 'Lukas_Podolski', 'Jürgen_Klinsmann', 'Rudi_Völler', 'Karl-Heinz_Rummenigge', 'Uwe_Seeler', 'Michael_Ballack', 'Thomas_Müller', 'Oliver_Bierhoff', 'Ulf_Kirsten', 'Fritz_Walter', 'Klaus_Fischer', 'Mario_Gomez', 'Ernst_Lehner', 'Andreas_Möller', 'Edmund_Conen', 'Eberhard_Vogel', 'Hans-Jürgen_Kreische', 'Bastian_Schweinsteiger', 'Richard_Hofmann', 'Mesut_Özil', 'Lothar_Matthäus', 'André_Schürrle', 'Helmut_Rahn', 'Max_Morlock', 'Rainer_Ernst', 'Karl_Hohmann', 'Kevin_Kurányi', 'Jürgen_Sparwasser', 'Henning_Frenzel', 'Pierre_Littbarski', 'Andreas_Thom', 'Toni_Kroos', 'Wolfgang_Overath', 'Klaus_Allofs', 'Otto_Siffling', 'Helmut_Schön', 'Martin_Hoffmann', 'Mario_Götze', 'Karl-Heinz_Riedle', 'Willi_Hahnemann', 'Peter_Ducke', 'Jürgen_Nöldner', 'Hans_Schäfer', 'Franz_Beckenbauer', 'Matthias_Sammer', 'Jupp_Heynckes', 'Tull_Harder']
Y_Axis['Number', 'of', 'goals']: ['71', '68', '59', '49', '47', '47', '45', '43', '42', '38', '37', '34', '33', '32', '31', '31', '29', '27', '27', '27', '24', '24', '23', '23', '22', '21', '21', '20', '20', '19', '19', '19', '18', '18', '17', '17', '17', '17', '17', '17', '17', '16', '16', '16', '16', '15', '14', '14', '14', '14']

gold: Miroslav Klose tops the current ranking , having scored 71 goals during his time playing for the German national football team in international matches . Besides playing for Germany , notably in the team that won the title in the FIFA World Cup in 2014 , his career includes such clubs as Bayern Munich and Werder Bremen . German football stars Miroslav Klose is the leading goal scorer of all time , though experts predict the next player to take the crown could be Gerd Müller .
gold_template: templateXValue[0] tops the current ranking , having scored templateYValue[max] templateYLabel[1] during his time playing for the templateTitleSubject[0] templateTitle[1] templateTitle[2] templateTitle[3] in international matches . Besides playing for Germany , notably in the templateTitle[3] that won the title in the FIFA World Cup in 2014 , his career includes such clubs as Bayern Munich and Werder Bremen . templateTitleSubject[0] templateTitle[2] stars templateXValue[0] is the leading goal scorer of all time , though experts predict the next player to take the crown could be templateXValue[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the German national in German .  It shows Joachim_Streich was the German at just 14 degrees and Jürgen_Klinsmann was the warmest at 71 degrees .  After Joachim_Streich , the next German national are Miroslav_Klose at 71 degrees , followed by Tull_Harder at 18 degrees , Gerd_Müller at 68 degrees and then Lukas_Podolski at 49 degrees .

Example 53:
titleEntities: {'Subject': ['United States'], 'Date': ['2019']}
title: Facebook usage reach in the United States 2019 , by education
X_Axis['Response']: ['High_school_or_less', 'Some_college', 'College_+']
Y_Axis['Share', 'of', 'respondents']: ['61', '75', '74']

gold: This statistic shows the share of adults in the United States who were using Facebook as of February 2019 , sorted by educational background . During that period of time , 74 percent of respondents who had attained a college degree used the social networking site .
gold_template: This statistic shows the templateYLabel[0] of adults in the templateTitleSubject[0] who were using templateTitle[0] as of templateTitleDate[0] , sorted templateTitle[6] educational background . During that period of time , templateYValue[last] templateScale of templateYLabel[1] who had attained a templateXValue[1] degree used the social networking site .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Facebook usage reach in High_school_or_less 2019 compared with that in Some_college and the College_+ .  In High_school_or_less there was a 75 % difference in the salaries of men and women .  In Some_college the difference was 61 % .

Example 54:
titleEntities: {'Subject': ['Great Britain'], 'Date': ['2015', '2015']}
title: Asthma prevalence in Great Britain 2015 , by region
X_Axis['Great', 'Britain', 'Regions']: ['North_West', 'South_East', 'London', 'East_of_England', 'Scotland', 'Yorkshire_and_the_Humber', 'South_West', 'West_Midlands', 'East_Midlands', 'Wales', 'North_East']
Y_Axis['Number', 'of', 'individuals']: ['778290', '687892', '588172', '564416', '554306', '535547', '530775', '440651', '385520', '314984', '261352']

gold: This statistic displays the number of individuals with asthma in Great Britain in 2015 . The prevalence of asthma was highest in the North West of England with over 778 thousand individuals having the condition . This was followed by individuals in the South East with approximately 687.9 thousand individuals having asthma .
gold_template: This statistic displays the templateYLabel[0] of templateYLabel[1] with templateTitle[0] in templateXLabel[0] templateXLabel[1] in templateTitleDate[0] . The templateTitle[1] of templateTitle[0] was highest in the templateXValue[0] of templateXValue[3] with over templateYValue[max] thousand templateYLabel[1] having the condition . This was followed templateTitle[5] templateYLabel[1] in the templateXValue[1] with approximately templateYValue[1] thousand templateYLabel[1] having templateTitle[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Asthma prevalence Great in the Britain competirion .  \\n From the chart we see that the Scotland Great made the Asthma individuals by some margin , with only 261352 .  South_East and North_West made a respectable 687892 and 778290 individuals , with North_East and East_of_England not far behind , at 261352 and 564416 respectively .

Example 55:
titleEntities: {'Subject': ['July'], 'Date': ['2019', '2019']}
title: U.S. gasoline motor fuel taxes July 2019
X_Axis['Tax']: ['State_excise_tax', 'Other_state_taxes/fees', 'Total_state_taxes/fees', 'Total_state_plus_federal_excise_taxes']
Y_Axis['Cents', 'per', 'gallon']: ['24.85', '11.32', '36.17', '54.57']

gold: This statistic represents the U.S. gasoline motor fuel taxes as of July 2019 . Consumers in the United States had to pay state and federal gasoline motor fuel taxes of around 54.6 U.S. dollar cents per gallon . In 2018 , the average annual retail price of gasoline in the United States came to around 2.72 U.S. dollars .
gold_template: This statistic represents the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateXValue[last] as of templateTitleSubject[0] templateTitleDate[0] . Consumers in the templateTitle[0] had to pay templateXValue[0] and templateXValue[last] templateTitle[1] templateTitle[2] templateTitle[3] templateXValue[last] of around templateYValue[max] templateTitle[0] dollar templateYLabel[0] templateYLabel[1] templateYLabel[2] . In 2018 , the average annual retail price of templateTitle[1] in the templateTitle[0] came to around 2.72 templateTitle[0] dollars .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the U.S. gasoline on July in the taxes 2019 on different continents .  The most U.S. gasoline was in Total_state_plus_federal_excise_taxes where £ 54.57 % was gasoline .  The amount in Other_state_taxes/fees was a little lower at £ 11.32 ,000,000 .

Example 56:
titleEntities: {'Subject': ['NFL'], 'Date': ['2019']}
title: NFL team ranking by all-time regular season wins 2019
X_Axis['Teams']: ['Chicago_Bears', 'Green_Bay_Packers', 'New_York_Giants', 'Pittsburgh_Steelers', 'Washington_Redskins', 'Philadelphia_Eagles', 'San_Francisco_49ers', 'Los_Angeles_Rams', 'Detroit_Lions', 'Arizona_Cardinals', 'Indianapolis_Colts', 'Cleveland_Browns', 'Dallas_Cowboys', 'New_England_Patriots', 'Minnesota_Vikings', 'Denver_Broncos', 'Kansas_City_Chiefs', 'Oakland_Raiders', 'Miami_Dolphins', 'Los_Angeles_Chargers', 'Tennessee_Titans', 'Buffalo_Bills', 'New_York_Jets', 'New_Orleans_Saints', 'Atlanta_Falcons', 'Cincinnati_Bengals', 'Seattle_Seahawks', 'Tampa_Bay_Buccaneers', 'Baltimore_Ravens', 'Carolina_Panthers', 'Jacksonville_Jaguars', 'Houston_Texans']
Y_Axis['Number', 'of', 'wins']: ['761', '743', '692', '628', '600', '577', '570', '568', '559', '553', '516', '516', '512', '500', '478', '476', '469', '466', '452', '447', '431', '415', '401', '362', '358', '357', '344', '260', '200', '190', '170', '121']

gold: At the start of the 2019 National Football League ( NFL ) season , the Chicago Bears had won the most regular-season games in the history of the competition . The Bears have made two Super Bowl appearances and were crowned champions for the only time in the 1985 season . How is an NFL season structured ? Each NFL season is split into two distinct competition formats : regular season and postseason .
gold_template: At the start of the templateTitleDate[0] National Football League ( templateTitleSubject[0] ) templateTitle[6] , the templateXValue[0] had won the most regular-season games in the history of the competition . The templateXValue[0] have made two Super Bowl appearances and were crowned champions for the only time in the 1985 templateTitle[6] . How is an templateTitleSubject[0] templateTitle[6] structured ? Each templateTitleSubject[0] templateTitle[6] is split into two distinct competition formats : templateTitle[5] templateTitle[6] and postseason .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the NFL team in NFL .  It shows New_York_Giants was the NFL at just 121 degrees and Washington_Redskins was the warmest at 761 degrees .  After New_York_Giants , the next NFL team are Chicago_Bears at 761 degrees , followed by Houston_Texans at 18 degrees , Green_Bay_Packers at 743 degrees and then Pittsburgh_Steelers at 628 degrees .

Example 57:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Sales of the leading 15 optical retailers in the U.S. 2018
X_Axis['Optical', 'retailer']: ['Vision_Source', 'Luxottica_retail', 'Walmart_stores', 'National_Vision', 'Costco_Wholesale', 'Visionworks_of_America', 'MyEyeDr/Capital_Vision_Services_LLC', 'Eyecare_Partners', 'Warby_Parker', 'Refac_Optical_Group', 'Eyemart_Express', 'Now_Optics_LLC', "Cohen's_Fashion_Optical", 'Texas_State_Optical', 'Emerging_Vision_Inc.']
Y_Axis['Sales', 'in', 'million', 'U.S.', 'dollars']: ['2840.0', '2470.0', '1762.0', '1537.0', '1129.8', '947.4', '602.0', '420.0', '315.0', '275.5', '263.0', '155.0', '152.0', '120.0', '110.4']

gold: This statistic depicts the sales of the leading 15 optical retailers in the United States in 2018 . In that year , Visionworks of America was the sixth ranked optical retailer in the United States , with sales that amounted to about 947.4 million U.S. dollars .
gold_template: This statistic depicts the templateYLabel[0] of the templateTitle[1] templateTitle[2] templateXValue[9] templateTitle[4] in the templateTitle[5] in templateTitleDate[0] . In that year , templateXValue[5] of templateXValue[5] was the sixth ranked templateXValue[9] templateXLabel[1] in the templateTitle[5] , with templateYLabel[0] that amounted to about templateYValue[5] templateScale templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Sales leading in U.S. It shows Walmart_stores was the Sales at just 110.4 degrees and Costco_Wholesale was the warmest at 2840.0 million .  After Walmart_stores , the next Sales leading are Vision_Source at 2840.0 degrees , followed by Emerging_Vision_Inc. at 18 degrees , Luxottica_retail at 2470.0 degrees and then National_Vision at 1537.0 degrees .

Example 58:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Number of U.S. minimum wage workers , by education 2018
X_Axis['Educational', 'attainment']: ['Less_than_a_high_school_diploma', 'High_school_graduates_no_college', 'Some_college_no_degree', 'Associate_degree', "Bachelor's_degree_and_higher"]
Y_Axis['Number', 'of', 'workers', 'in', 'thousands']: ['330', '538', '606', '137', '237']

gold: This statistic shows the number of workers paid hourly rates at or below the prevailing federal minimum wage in the United States in 2018 , by educational attainment . In 2018 , around 330,000 people without a high school diploma earned the minimum wage or below .
gold_template: This statistic shows the templateYLabel[0] of templateYLabel[1] paid hourly rates at or below the prevailing federal templateTitle[2] templateTitle[3] in the templateTitle[1] in templateTitleDate[0] , templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , around templateYValue[0] people without a templateXValue[0] earned the templateTitle[2] templateTitle[3] or below .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Number of workers thousands at the U.S. street .  \\n The highest Number was 606 in the Associate_degree Educational followed by 538 thousands in the High_school_graduates_no_college Educational , 330 thousands in Associate_degree and finally 137 thousands in Bachelor's_degree_and_higher .

Example 59:
titleEntities: {'Subject': ['February'], 'Date': ['2020', '2020']}
title: Twitter : most popular tweets as of February 2020
X_Axis['Popular', 'Tweet']: ["Yusaku_Maezawa:_offering_1M_yen_each_to_100_randomly_selected_people_who_retweeted_the_message_and_followed_him_(Jan_'19)", "Yusaku_Maezawa:_giveaway_with_1bn_yen_being_promises_to_1000_people_(Dec_'19)", "Carter_Wilkerson:_Wendys_free_chicken_nuggets_(Apr_'17)", "Ellen_DeGeneres:_2014_Oscars_photo_(Mar_'14)", "Louis_Tomlinson:_Always_in_my_heart_@Harry_Styles_._Yours_sincerely_Louis_(Oct_'11)", "El_Rubius:_LIMONADA_(Aug_'16)", 'Barack_Obama:_"No_one_is_born_hating_another_person_because_of_the_color_of_his_skin..."_(Aug_\'17)', "El_Rubius:_LIMONADA_2.0_(Sep_'18)", "Jimmy_Donaldson_(MrBeast):_$10k_giveaway_based_on_retweet_on_the_occasion_of_his_birthday_(May_'19)", 'BTS:_Duh_(emoji)_(Jungkook_dancing_to_Billie_Eilish’s_hit_“Bad_Guy”)']
Y_Axis['Number', 'of', 'retweets']: ['4.2', '3.9', '3.4', '3.1', '2.5', '1.6', '1.5', '1.3', '1.1', '1.0']

gold: This statistic presents the most retweeted Twitter posts of all time . The most re-tweeted tweet of all time was posted by Japanese billionaire Yusaku Maezawa on January 5 , 2019 . The entrepreneur offered one million yen each to 100 randomly selected people who retweeted the message and followed his account .
gold_template: This statistic presents the templateTitle[1] templateXValue[0] templateTitle[0] posts of all time . The templateTitle[1] re-tweeted templateXLabel[1] of all time was posted by Japanese billionaire templateXValue[0] Maezawa on 5 , 2019 . The entrepreneur offered templateXValue[6] templateScale templateXValue[0] to templateXValue[0] the templateXValue[0] and templateXValue[0] templateXValue[6] account .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Twitter most popular in the tweets competirion .  \\n From the chart we see that the Louis_Tomlinson:_Always_in_my_heart_@Harry_Styles_._Yours_sincerely_Louis_(Oct_'11) Popular made the Twitter retweets by some margin , with only 1.0 Yusaku_Maezawa:_giveaway_with_1bn_yen_being_promises_to_1000_people_(Dec_'19) and Yusaku_Maezawa:_offering_1M_yen_each_to_100_randomly_selected_people_who_retweeted_the_message_and_followed_him_(Jan_'19) made a respectable 3.9 and 4.2 retweets , with BTS:_Duh_(emoji)_(Jungkook_dancing_to_Billie_Eilish’s_hit_“Bad_Guy”) and Ellen_DeGeneres:_2014_Oscars_photo_(Mar_'14) not far behind , at 1.0 and 3.1 respectively .

Example 60:
titleEntities: {'Subject': ['UEFA Champions League'], 'Date': ['2019']}
title: UEFA Champions League most appearances by club 2019
X_Axis['Football', 'Club']: ['Real_Madrid', 'SL_Benfica', 'AFC_Ajax', 'FC_Bayern_München', 'FC_Dynamo_Kyiv', 'RSC_Anderlecht', 'Juventus', 'Celtic_FC', 'FC_Porto', 'Olympiacos_FC', 'Rangers_FC', 'FC_Barcelona', 'Manchester_United_FC', 'AC_Milan', 'Panathinaikos_FC', 'Linfield_FC', 'AC_Sparta_Praha', 'PSV_Eindhoven', 'FC_Steaua_Bucuresti', 'Fenerbahce_SK', 'Galatasaray_AS', 'PFC_CSKA_Sofia', 'FK_Crvena_zvezda', 'Rosenborg_BK', 'Liverpool_FC', 'FK_Partizan', 'AS_Jeunesse_Esch', 'Arsenal_FC', 'Sporting_Clube_de_Portugal']
Y_Axis['Appearances', 'by', 'club']: ['49', '38', '35', '35', '35', '34', '33', '33', '33', '31', '30', '29', '28', '28', '28', '28', '27', '27', '26', '26', '25', '25', '24', '24', '23', '22', '22', '21', '21']

gold: Real Madrid is the football club in Europe with the most appearances in the UEFA Champions League , taking part in the tournament 49 times with 431 matches played since 1955 . The club also shares the record for final match appearances alongside AC Milan and Juventus , of which every club made it to the finals six times so far . However , Real Madrid won the most Champions League titles by far , trailing with 13 titles , followed by AC Milan with 7 titles .
gold_template: templateXValue[0] is the templateXLabel[0] templateXLabel[1] in Europe with the templateTitle[3] templateYLabel[0] in the templateTitleSubject[0] , taking part in the tournament templateYValue[max] times with 431 matches played since 1955 . The templateXLabel[1] also shares the record for final match templateYLabel[0] alongside templateXValue[13] and templateXValue[6] , of which every templateXLabel[1] made it to the finals six times so far . However , templateXValue[0] won the templateTitle[3] templateTitleSubject[0] titles templateYLabel[1] far , trailing with 13 titles , followed templateYLabel[1] templateXValue[13] with 7 titles .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the UEFA Champions in UEFA Champions League .  It shows AFC_Ajax was the UEFA at just 21 degrees and FC_Dynamo_Kyiv was the warmest at 49 degrees .  After AFC_Ajax , the next UEFA Champions are Real_Madrid at 49 degrees , followed by Sporting_Clube_de_Portugal at 18 degrees , SL_Benfica at 38 degrees and then FC_Bayern_München at 35 degrees .

Example 61:
titleEntities: {'Subject': ['Canada'], 'Date': ['2019']}
title: Unemployment rate in Canada , by industry 2019
X_Axis['Industry']: ['Forestry_fishing_mining_quarrying_oil_and_gas', 'Construction', 'Business_building_and_other_support_services', 'Accommodation_and_food_services', 'Information_culture_and_recreation', 'Agriculture', 'Wholesale_and_retail_trade', 'Educational_services', 'Manufacturing', 'Transportation_and_warehousing', 'Other_services_(except_public_administration)', 'Professional_scientific_and_technical_services', 'Public_administration', 'Utilities', 'Finance_insurance_real_estate_rental_and_leasing', 'Health_care_and_social_assistance']
Y_Axis['Unemployment', 'rate']: ['7.3', '6.7', '6.1', '5.5', '5.4', '4.4', '3.7', '3.7', '3.6', '3.2', '2.8', '2.7', '2', '1.7', '1.6', '1.5']

gold: This statistic shows the rate of unemployment in Canada in 2019 , by industry . In 2019 , the agricultural industry in Canada had an unemployment rate of 4.4 percent . The health care and social assistance industry had the lowest unemployment rate , at 1.5 percent .
gold_template: This statistic shows the templateYLabel[1] of templateYLabel[0] in templateTitleSubject[0] in templateTitleDate[0] , templateTitle[3] templateXLabel[0] . In templateTitleDate[0] , the agricultural templateXLabel[0] in templateTitleSubject[0] had an templateYLabel[0] templateYLabel[1] of templateYValue[5] templateScale . The templateXValue[last] and templateXValue[last] templateXLabel[0] had the lowest templateYLabel[0] templateYLabel[1] , at templateYValue[min] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Unemployment rate Canada in the by competirion .  \\n From the chart we see that the Information_culture_and_recreation Industry made the Unemployment rate by some margin , with only 1.5 Construction and Forestry_fishing_mining_quarrying_oil_and_gas made a respectable 6.7 and 7.3 rate , with Health_care_and_social_assistance and Accommodation_and_food_services not far behind , at 1.5 and 5.5 respectively .

Example 62:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Top 50 metropolitan areas with the highest violent crime rate in the U.S. 2018
X_Axis['Metropolitan', 'Statistical', 'Area']: ['Anchorage_AK', 'Farmington_NM', 'Memphis_TN-MS-AR', 'Albuquerque_NM', 'Detroit-Dearborn-Livonia_MI', 'Danville_IL', 'Pine_Bluff_AR', 'Hammond_LA', 'Lubbock_TX', 'Wichita_KS', 'Stockton_CA', 'Alexandria_LA', 'Philadelphia_PA', 'Odessa_TX', 'Florence_SC', 'Rockford_IL', 'Little_Rock-North_Little_Rock-Conway_AR', 'Albany_GA', 'Anniston-Oxford_AL', 'Monroe_LA', 'Baltimore-Columbia-Towson_MD', 'Gainesville_FL', 'Corpus_Christi_TX', 'Lawton_OK', 'Pueblo_CO', 'Flint_MI', 'Sumter_SC', 'Battle_Creek_MI', 'Saginaw_MI', 'Amarillo_TX2', 'Redding_CA', 'Indianapolis-Carmel-Anderson_IN', 'Fairbanks_AK', 'Milwaukee-Waukesha_WI', 'Jackson_TN', 'Shreveport-Bossier_City_LA', 'Dothan_AL', 'Nashville-Davidson–Murfreesboro–Franklin_TN', 'Springfield_IL', 'Fresno_CA', 'Kalamazoo-Portage_MI', 'Bakersfield_CA', 'Los_Angeles-Long_Beach-Glendale_CA', 'Modesto_CA', 'Madera_CA', 'Columbia_SC', 'Merced_CA', 'Tulsa_OK', 'New_Orleans-Metairie_LA', 'Springfield_MO']
Y_Axis['Violent', 'crime', 'rate', 'per', '100,000', 'inhabitnats']: ['1263.6', '1199.8', '1142.5', '1084.7', '1001.8', '931.9', '880.4', '849.1', '829.3', '826.0', '795.1', '775.3', '763.7', '760.6', '748.2', '742.6', '738.1', '728.5', '726.0', '724.6', '720.8', '713.3', '699.3', '695.1', '693.4', '683.2', '679.0', '666.5', '661.0', '660.4', '650.1', '641.5', '625.5', '609.7', '608.6', '602.8', '602.0', '599.1', '596.0', '595.3', '592.5', '591.7', '577.9', '576.2', '572.4', '567.9', '567.2', '564.8', '563.8', '562.6']

gold: This statistic shows the top 50 metropolitan areas with the highest violent crime rate in the United States in 2018 . In 2018 , Anchorage in Alaska reported 1,263.6 violent crimes per 100,000 inhabitants .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateXLabel[0] templateTitle[3] templateTitle[4] the templateTitle[5] templateYLabel[0] templateYLabel[1] templateYLabel[2] in the templateTitle[9] in templateTitleDate[0] . In templateTitleDate[0] , templateXValue[0] in Alaska reported templateYValue[max] templateYLabel[0] crimes templateYLabel[3] 100,000 inhabitants .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Top 50 metropolitan in the areas competirion .  \\n From the chart we see that the Detroit-Dearborn-Livonia_MI Metropolitan made the Top crime by some margin , with only 562.6 Farmington_NM and Anchorage_AK made a respectable 1199.8 and 1263.6 crime , with Springfield_MO and Albuquerque_NM not far behind , at 562.6 and 1084.7 respectively .

Example 63:
titleEntities: {'Subject': ['UK'], 'Date': ['2019']}
title: Reach of social media used by UK teens and young adults 2019
X_Axis['Platform']: ['YouTube', 'Facebook', 'Instagram', 'LinkedIn', 'Snapchat', 'WhatsApp', 'Twitter', 'Pinterest', 'Tumblr', 'Reddit', 'Periscope', 'Other', 'Don’t_know', 'None']
Y_Axis['Share', 'of', 'respondents']: ['80.9', '77.3', '71.9', '30', '57.5', '76', '48.6', '25.8', '16', '22.5', '0', '1.6', '0.6', '2.1']

gold: The statistic illustrates findings of a survey among the residents aged 15 - 25 regarding the use of social media in the United Kingdom ( UK ) in 2019 . During the survey period , it was found that 80.9 percent of respondents that go online were YouTube users .
gold_template: The statistic illustrates findings of a survey among the residents aged 15 - 25 regarding the use of templateTitle[1] templateTitle[2] in the United Kingdom ( templateTitleSubject[0] ) in templateTitleDate[0] . During the survey period , it was found that templateYValue[max] templateScale of templateYLabel[1] that go online were templateXValue[0] users .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Reach social media in the used competirion .  \\n From the chart we see that the Snapchat Platform made the Reach respondents by some margin , with only 0 .  Facebook and YouTube made a respectable 77.3 and 80.9 respondents , with None and LinkedIn not far behind , at 2.1 and 30 respectively .

Example 64:
titleEntities: {'Subject': ['France'], 'Date': ['2019']}
title: Leisure activities penetration rate in France 2019
X_Axis['Response']: ['Listen_to_music', 'Go_out_with_friends', 'Keep_in_touch_with_the_people_around_you_(phone_SMS_e-mail)', 'Watch_television', 'Read_a_magazine_or_a_journal', 'Listen_to_radio', 'Go_online', 'Watch_a_video', 'Go_to_the_cinema', 'Go_on_a_cultural_outing', 'Go_shopping', 'Go_on_social_networks', 'Play_video_games', 'None_of_these_activities']
Y_Axis['Share', 'of', 'respondents']: ['88', '82', '82', '79', '75', '74', '69', '66', '63', '58', '51', '37', '27', '1']

gold: This statistic shows the results of a survey about the penetration rate of several individual leisure activities in France in 2015 , phrased with the question : `` except reading books , which of the following leisure activities do you do in your free time ? `` . It was found that listening to music was the most practiced leisure activity with a penetration rate of 88 percent of respondents , followed very closely by 82 percent of respondents who stated that they go out with friends in their free time with . Even though music is a very popular activity , it seems that French people would probably not choose to listen to music if they had more free time .
gold_template: This statistic shows the results of a survey about the templateTitle[2] templateTitle[3] of several individual templateTitle[0] templateXValue[last] in templateTitleSubject[0] in 2015 , phrased templateXValue[1] the question : `` except reading books , which of the following templateTitle[0] templateXValue[last] do templateXValue[2] do in your free time ? `` . It was found that listening to templateXValue[0] was the most practiced templateTitle[0] activity templateXValue[1] a templateTitle[2] templateTitle[3] of templateYValue[max] templateScale of templateYLabel[1] , followed very closely by templateYValue[1] templateScale of templateYLabel[1] who stated that they templateXValue[1] in their free time templateXValue[1] . Even though templateXValue[0] is a very popular activity , it seems that French templateXValue[2] would probably not choose to templateXValue[0] to templateXValue[0] if they had more free time .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leisure activities in France .  It shows Keep_in_touch_with_the_people_around_you_(phone_SMS_e-mail) was the Leisure at just 1 degrees and Read_a_magazine_or_a_journal was the warmest at 88 respondents .  After Keep_in_touch_with_the_people_around_you_(phone_SMS_e-mail) , the next Leisure activities are Listen_to_music at 88 degrees , followed by None_of_these_activities at 18 degrees , Go_out_with_friends at 82 degrees and then Watch_television at 79 degrees .

Example 65:
titleEntities: {'Subject': ['Manchester United Facebook'], 'Date': ['2019']}
title: Manchester United Facebook fans 2019
X_Axis['Month']: ["Jul_'10", "Jan_'11", "Jul_'11", "Jan_'12", "Jul_'12", "Jan_'13", "Jul_'13", "Jan_'14", "Jul_'14", "Feb_'15", "Aug_'15", "Feb_'16", "Jul_'16", "Feb_'17", "Jul_'17", "Feb_'18", "Aug_'18", "Feb_'19", "Aug_'19"]
Y_Axis['Facebook', 'fans', 'in', 'millions']: ['0.8', '8.1', '17.2', '21.5', '26.7', '31.0', '34.2', '40.7', '55.0', '65.0', '65.9', '68.21', '69.99', '72.62', '73.79', '73.78', '73.43', '73.36', '73.34']

gold: This statistic shows the number of fans on the official Manchester United Facebook page from July 2010 to August 2019 . The page had a total of 73.34 million fans in August 2019 .
gold_template: This statistic shows the number of templateYLabel[1] on the official templateTitleSubject[0] templateYLabel[0] page from 2010 to templateTitleDate[0] . The page had a total of templateYValue[last] templateScale templateYLabel[1] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Manchester United in Manchester United Facebook .  It shows Jul_'11 was the Manchester at just 0.8 degrees and Jul_'12 was the warmest at 73.79 degrees .  After Jul_'11 , the next Manchester United are Jul_'10 at 0.8 degrees , followed by Aug_'19 at 18 degrees , Jan_'11 at 8.1 degrees and then Jan_'12 at 21.5 degrees .

Example 66:
titleEntities: {'Subject': ['Ducati'], 'Date': ['2018']}
title: Motorcycle manufacturer Ducati - key figures 2018
X_Axis['Motorcycle', 'Details']: ['Number_of_employees', 'Revenue_(in_million_euros)', 'Motorcycle_production_(in_1000_units)', 'Motorcycle_sales_(in_1000_units)']
Y_Axis['Unnamed:', '1']: ['1278.0', '595.0', '53.32', '53.0']

gold: This statistic illustrates selected key figures for the motorcycle manufacturer Ducati in the fiscal year of 2018 . The Volkswagen-owned motorcycle manufacturer reported sales of around 53,000 units in 2018 .
gold_template: This statistic illustrates selected templateTitle[3] templateTitle[4] for the templateXValue[2] templateTitle[1] templateTitleSubject[0] in the fiscal year of templateTitleDate[0] . The Volkswagen-owned templateXValue[2] templateTitle[1] reported templateXValue[last] of around 53,000 units in templateTitleDate[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Motorcycle manufacturer on Ducati in the figures 2018 on different continents .  The most Motorcycle manufacturer was in Motorcycle_sales_(in_1000_units) where £ 1278.0 million was manufacturer .  The amount in Revenue_(in_million_euros) was a little lower at £ 595.0 ,000,000 .

Example 67:
titleEntities: {'Subject': ['Netherlands'], 'Date': ['10', '10']}
title: Netherlands : top 10 online stores
X_Axis['Online', 'Store']: ['bol.com', 'coolblue.nl', 'wehkamp.nl', 'ah.nl', 'apple.com', 'mediamarkt.nl', 'zalando.nl', 'amazon.com', 'vente-exclusive.com', 'alternate.nl']
Y_Axis['E-commerce', 'revenue', 'in', 'million', 'U.S.', 'dollars']: ['1410.2', '1110.7', '705.3', '485.8', '390.1', '322.8', '275.0', '199.6', '182.5', '168.9']

gold: The biggest online stores in the Netherlands include domestic players like online hypermarket bol.com , electronics retailer coolblue.nl and fashion store wehkamp.nl , sometimes outperforming major e-commerce companies such as Amazon or Zalando . With a revenue of US $ 1 , 410.2m bol.com is leading the Dutch e-commerce market directly followed by coolblue.nl with US $ 1 , 110.7m.bol.com survives the Amazon threadThe Dutch internet bookstore bol.com achieved net sales of around US $ 1.8 billion in 2018 with a growth of 30 % . Sales of up to US $ 2.3 billion are expected for 2019 .
gold_template: The biggest templateXLabel[0] templateTitle[4] in the templateTitleSubject[0] include domestic players like templateXLabel[0] hypermarket templateXValue[0] , electronics retailer templateXValue[1] and fashion templateXLabel[1] templateXValue[2] , sometimes outperforming major templateYLabel[0] companies such as Amazon or Zalando . With a templateYLabel[1] of US $ 1 , 410.2m templateXValue[0] is leading the Dutch templateYLabel[0] market directly followed by templateXValue[1] with US $ 1 , 110.7m.bol.com survives the Amazon threadThe Dutch internet bookstore templateXValue[0] achieved net sales of around US $ 1.8 templateScale in 2018 with a growth of 30 templateScale . Sales of up to US $ 2.3 templateScale are expected for 2019 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Netherlands top 10 in the online competirion .  \\n From the chart we see that the apple.com Online made the Netherlands revenue by some margin , with only 168.9 coolblue.nl and bol.com made a respectable 1110.7 and 1410.2 revenue , with alternate.nl and ah.nl not far behind , at 168.9 and 485.8 respectively .

Example 68:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Ranking of languages spoken at home in the U.S. 2018
X_Axis['Language']: ['Spanish', 'Chinese_(incl._Mandarin_Cantonese)', 'Tagalog_(incl._Filipino)', 'Vietnamese', 'Arabic', 'French_(incl._Cajun)', 'Korean', 'Russian', 'German', 'Hindi']
Y_Axis['Number', 'of', 'speakers']: ['41460427', '3471604', '1760468', '1542473', '1259118', '1232173', '1086335', '919279', '889651', '874314']

gold: This graph shows the top 10 spoken languages other than English in the United States . In 2018 , around 41.5 million people in the U.S. spoke Spanish at home . The distribution of the U.S. population by ethnicity can be accessed here .
gold_template: This graph shows the top 10 templateTitle[2] templateTitle[1] other than English in the templateTitle[4] . In templateTitleDate[0] , around templateYValue[max] templateScale people in the templateTitleSubject[0] spoke templateXValue[0] at templateTitle[3] . The distribution of the templateTitleSubject[0] population by ethnicity can be accessed here .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Ranking languages spoken in the home competirion .  \\n From the chart we see that the Arabic Language made the Ranking speakers by some margin , with only 874314 .  Chinese_(incl._Mandarin_Cantonese) and Spanish made a respectable 3471604 and 41460427 speakers , with Hindi and Vietnamese not far behind , at 874314 and 1542473 respectively .

Example 69:
titleEntities: {'Subject': ['Google'], 'Date': ['2003']}
title: Google : quarterly net income 2003 to 2015
X_Axis['Financial', 'Quarter/Year']: ["Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11", "Q4_'10", "Q3_'10", "Q2_'10", "Q1_'10", "Q4_'09", "Q3_'09", "Q2_'09", "Q1_'09", "Q4_'08", "Q3_'08", "Q2_'08", "Q1_'08", "Q4_'07", "Q3_'07", "Q2_'07", "Q1_'07", "Q4_'06", "Q3_'06", "Q2_'06", "Q1_'06", "Q4_'05", "Q3_'05", "Q2_'05", "Q1_'05", "Q4_'04", "Q3_'04", "Q2_'04", "Q1_'04", "Q4_'03", "Q3_'03", "Q2_'03", "Q1_'03"]
Y_Axis['Net', 'income', 'in', 'million', 'U.S.', 'dollars']: ['3979.0', '3931.0', '3515.0', '4675.0', '2739.0', '3351.0', '3371.0', '3324.0', '2921.0', '3376.0', '2970.0', '2886.0', '2176.0', '2785.0', '2890.0', '2705.0', '2729.0', '2505.0', '1798.0', '2543.0', '2167.0', '1840.0', '1955.0', '1974.0', '1439.0', '1485.0', '1423.0', '382.4', '1289.9', '1247.5', '1307.1', '1206.4', '1070.0', '925.1', '1002.2', '1030.72', '733.36', '721.08', '592.29', '372.21', '381.18', '342.81', '369.19', '204.1', '51.98', '79.06', '63.97', '27.25', '20.43', '32.17', '25.8']

gold: This timeline shows Google 's quarterly net income from 2003 to 2015 . In the third quarter of 2015 , the California-based web company earned 3.98 billion US dollars , an increase from the 3.93 billion in the previous quarter . Due to restructuring under new parent company Alphabet , Google net income is not longer reported separately .
gold_template: This timeline shows templateTitleSubject[0] 's templateTitle[1] templateYLabel[0] templateYLabel[1] from templateTitleDate[min] to templateTitleDate[max] . In the third quarter of templateTitleDate[max] , the California-based web company earned templateYValue[0] templateScale US templateYLabel[4] , an templatePositiveTrend from the templateYValue[1] templateScale in the previous quarter . Due to restructuring under new parent company Alphabet , templateTitleSubject[0] templateYLabel[0] templateYLabel[1] is not longer reported separately .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Google quarterly net in the income competirion .  \\n From the chart we see that the Q3_'14 Financial made the Google income by some margin , with only 20.43 .  Q2_'15 and Q3_'15 made a respectable 3931.0 and 3979.0 income , with Q1_'03 and Q4_'14 not far behind , at 25.8 and 4675.0 respectively .

Example 70:
titleEntities: {'Subject': ['Italy'], 'Date': ['2017']}
title: Total area of Italy 2017 , by region
X_Axis['Month']: ['Sicily', 'Piedmont', 'Sardinia', 'Lombardy', 'Tuscany', 'Emilia-Romagna', 'Apulia', 'Veneto', 'Lazio', 'Calabria', 'Campania', 'Trentino-South_Tyrol', 'Abruzzo', 'Basilicata', 'Marche', 'Umbria', 'Friuli-Venezia_Giulia', 'Liguria', 'Molise', 'Aosta_Valley']
Y_Axis['Area', 'in', 'square', 'kilometers']: ['25832', '25387', '24100', '23864', '22987', '22453', '19541', '18345', '17232', '15222', '13671', '13606', '10832', '10073', '9401', '8464', '7924', '5416', '4461', '3261']

gold: In 2017 , the largest among the 20 administrative regions of Italy was Sicily , which at same time was also the biggest island in the country . On the other hand , the smallest region of Belpaese was Aosta Valley , located in the north on the border with Switzerland and France . The island of volcanoes The symbol of Sicily , Mount Etna , is one of the most active volcanos on the planet .
gold_template: In templateTitleDate[0] , the largest among the 20 administrative regions of templateTitleSubject[0] was templateXValue[0] , which at same time was also the biggest island in the country . On the other hand , the smallest templateTitle[5] of Belpaese was templateXValue[last] , located in the north on the border with Switzerland and France . The island of volcanoes The symbol of templateXValue[0] , Mount Etna , is one of the most active volcanos on the planet .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Total area in Italy .  It shows Sardinia was the Total at just 3261 degrees and Tuscany was the warmest at 25832 degrees .  After Sardinia , the next Total area are Sicily at 25832 degrees , followed by Aosta_Valley at 18 degrees , Piedmont at 25387 degrees and then Lombardy at 23864 degrees .

Example 71:
titleEntities: {'Subject': ['Lexus', 'United Kingdom', 'UK'], 'Date': ['2016', '2019']}
title: Lexus car sales in the United Kingdom ( UK ) 2016 to 2019
X_Axis['Month']: ['Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18', 'Jul_18', 'Jun_18', 'May_18', 'Apr_18', 'Mar_18', 'Feb_18', 'Jan_18', 'Dec_17', 'Nov_17', 'Oct_17', 'Sep_17', 'Aug_17', 'Jul_17', 'Jun_17', 'May_17', 'Apr_17', 'Mar_17', 'Feb_17', 'Jan_17', 'Dec_16', 'Nov_16', 'Oct_16', 'Sep_16', 'Aug_16', 'Jul_16']
Y_Axis['Units', 'sold']: ['745', '1044', '1098', '3852', '424', '1118', '1199', '943', '884', '3137', '262', '1007', '420', '663', '674', '2686', '270', '784', '1306', '851', '678', '3006', '180', '887', '772', '775', '725', '2908', '205', '843', '1161', '715', '672', '2888', '206', '800', '750', '931', '812', '2998', '234', '774']

gold: This statistic shows the monthly amount of cars sold by Lexus in the United Kingdom ( UK ) between July 2016 and December 2019 . Peaks in registration numbers were recorded in March and September of each year , which was due to the issuing of license plates by the Driver & Vehicle Licensing Agency ( DVLA ) in those months . In September 2019 , 3,852 new Lexus cars were sold in the UK
gold_template: This statistic shows the monthly amount of cars templateYLabel[1] by templateTitleSubject[0] in the templateTitleSubject[1] ( templateTitleSubject[2] ) between templateTitleDate[min] and templateTitleDate[max] . Peaks in registration numbers were recorded in and of each year , which was due to the issuing of license plates by the Driver & Vehicle Licensing Agency ( DVLA ) in those months . In templateTitleDate[max] , templateYValue[max] new templateTitleSubject[0] cars were templateYLabel[1] in the templateTitleSubject[2]

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Lexus car in Lexus .  It shows Oct_19 was the Lexus at just 180 degrees and Aug_19 was the warmest at 3852 degrees .  After Oct_19 , the next Lexus car are Dec_19 at 745 degrees , followed by Jul_16 at 18 degrees , Nov_19 at 1044 degrees and then Sep_19 at 3852 degrees .

Example 72:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2013']}
title: Most popular crisps and savoury snack brands in the United Kingdom ( UK ) 2013
X_Axis['Snack', 'Brand']: ['Walkers', 'Doritos', 'Hula_Hoops', 'Pringles', 'McCoys', 'Own_brand_crisps', 'KP_nuts']
Y_Axis['Share', 'of', 'respondents', 'currently', 'purchasing']: ['42', '32', '26', '26', '25', '24', '22']

gold: This statistic displays the leading crisp and savory snack brands in the United Kingdom ( UK ) , ranked by most purchased . According to the survey conducted in November 2013 , the leading six products were all crisps . Walkers ranked highest with 42 percent of respondents purchasing their crisps at the time of survey , followed by Doritos at 32 percent .
gold_template: This statistic displays the leading crisp and savory templateXLabel[0] templateTitle[5] in the templateTitleSubject[0] ( templateTitleSubject[1] ) , ranked by templateTitle[0] purchased . According to the survey conducted in templateTitleDate[0] , the leading six products were all templateXValue[5] . templateXValue[0] ranked highest with templateYValue[max] templateScale of templateYLabel[1] templateYLabel[3] their templateXValue[5] at the time of survey , followed by templateXValue[1] at templateYValue[1] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most popular crisps in the savoury competirion .  \\n From the chart we see that the McCoys Snack made the Most respondents by some margin , with only 22 .  Doritos and Walkers made a respectable 32 and 42 respondents , with KP_nuts and Pringles not far behind , at 22 and 26 respectively .

Example 73:
titleEntities: {'Subject': ['Canada'], 'Date': ['2018']}
title: Canada 's chocolate market share by company 2018
X_Axis['Month']: ['Nestlé', 'Hershey', 'Mondelez', 'Lindt', 'Mars', 'Ferrero', 'Private_label', 'All_other']
Y_Axis['Market', 'share']: ['18.6', '16.7', '14.8', '11.8', '11.7', '8.1', '6.4', '11.9']

gold: Nestlé was the leading chocolate company in Canada in 2018 , holding a share of around 18.6 percent of all chocolate sales in Canada in the 52 weeks ending July 21 , 2018 . Hershey and Mondelez were in second and third place , with market shares of 16.7 and 14.8 percent respectively . The growth of Nestlé Nestlé is a Swiss food and drink company which was formed through a merger in 1905 .
gold_template: templateXValue[0] was the leading templateTitle[2] templateTitle[6] in templateTitleSubject[0] in templateTitleDate[0] , holding a templateYLabel[1] of around templateYValue[max] templateScale of templateXValue[last] templateTitle[2] sales in templateTitleSubject[0] in the 52 weeks ending 21 , templateTitleDate[0] . templateXValue[1] and templateXValue[2] were in second and third place , with templateYLabel[0] shares of templateYValue[1] and templateYValue[2] templateScale respectively . The growth of templateXValue[0] is a Swiss food and drink templateTitle[6] which was formed through a merger in 1905 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Canada 's chocolate in the market competirion .  \\n From the chart we see that the Mars Month made the Canada share by some margin , with only 6.4 Hershey and Nestlé made a respectable 16.7 and 18.6 share , with All_other and Lindt not far behind , at 11.9 and 11.8 respectively .

Example 74:
titleEntities: {'Subject': ['Netflix'], 'Date': ['2017']}
title: Consumers with a Netflix subscription in the U.S. 2017 , by age group
X_Axis['Response']: ['Total', 'Millennials', 'Gen_X', 'Boomers', 'Retirees']
Y_Axis['Share', 'of', 'respondents']: ['70', '72', '73', '67', '56']

gold: At the beginning of 2017 , 70 percent of consumers with an online video or music subscription confirmed that they had an active Netflix subscription at the time of survey . Millennials and Gen-Xers were more likely to have a Netflix subscription than their older peers , which comes as no surprise given that Netflix is considered the most indispensable TV and video source among consumers aged between 16 to 34 years old . One of the most appealing aspects of Netflix for viewers is the availability of original content , which has fast become one of the keys to the company 's success .
gold_template: At the beginning of templateTitleDate[0] , templateYValue[0] templateScale of templateTitle[0] templateTitle[1] an online video or music templateTitle[3] confirmed that they had an active templateTitleSubject[0] templateTitle[3] at the time of survey . templateXValue[1] and Gen-Xers were more likely to have a templateTitleSubject[0] templateTitle[3] than their older peers , which comes as no surprise given that templateTitleSubject[0] is considered the most indispensable TV and video source among templateTitle[0] aged between 16 to 34 years old . One of the most appealing aspects of templateTitleSubject[0] for viewers is the availability of original content , which has fast become one of the keys to the company 's success .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] from templateXValue[0] - templateXValue[last] . \\n In templateXValue[0] the templateTitleSubject[0] saw templateYValue[0] templateYLabel[1] , in templateXValue[1] there were templateYValue[max] templateTitleSubject[0] , templateXValue[2] saw at least templateYValue[2] , templateYValue[min] .
generated: This chart shows the Share of respondents at the Netflix from Total - Retirees .  \\n In Total the Netflix saw 70 respondents , in Millennials there were 73 Netflix , Gen_X saw at least 73 , 56 .

Example 75:
titleEntities: {'Subject': ['Rome', 'Italy'], 'Date': ['2019']}
title: Average price for properties for sale in Rome , Italy 2019 , by area
X_Axis['Area']: ['Centro_Storico', 'Aventino_San_Saba_Caracalla', 'Parioli_Flaminio', 'Testaccio_Trastevere', 'Prati_Borgo_Mazzini_Delle_Vittorie', 'Salario_Trieste', 'Bologna_Policlinico', 'Corso_Francia_Vigna_Clara_Fleming_Ponte_Milvio', 'Termini_Repubblica', "Camilluccia_Cortina_d'Ampezzo", "Balduina_Medaglie_d'Oro_Degli_Eroi", 'Gregorio_VII_Baldo_degli_Ubaldi']
Y_Axis['Price', 'in', 'euros', 'per', 'square', 'meter']: ['7817', '6910', '5622', '5435', '5137', '4884', '4531', '4289', '4107', '4099', '4000', '3972']

gold: The statistic shows the average price for houses , apartments and residential real estate for sale in selected areas of the Italian city of Rome as of December 2019 . According to the data , the sale price in the historic city center ( Centro Storico ) amounted to over 7.8 thousand euros per square meter .
gold_template: The statistic shows the templateTitle[0] templateYLabel[0] templateTitle[2] houses , apartments and residential real estate templateTitle[2] templateTitle[5] in selected areas of the Italian city of templateTitleSubject[0] as of templateTitleDate[0] . According to the data , the templateTitle[5] templateYLabel[0] in the historic city center ( templateXValue[0] ) amounted to over templateYValue[max] thousand templateYLabel[1] templateYLabel[2] templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average price in Rome .  It shows Parioli_Flaminio was the Average at just 3972 degrees and Prati_Borgo_Mazzini_Delle_Vittorie was the warmest at 7817 euros .  After Parioli_Flaminio , the next Average price are Centro_Storico at 7817 degrees , followed by Gregorio_VII_Baldo_degli_Ubaldi at 18 degrees , Aventino_San_Saba_Caracalla at 6910 degrees and then Testaccio_Trastevere at 5435 degrees .

Example 76:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Leading mobile messengers in the U.S. 2019 , by users
X_Axis['Platform']: ['Facebook_Messenger', 'Snapchat', 'WhatsApp', 'Messenger_by_Google', 'Discord_-_Chat_for_Games', 'Google_Hangouts_(main)', 'GroupMe', 'Kik', 'Skype_(main)', 'Telegram', 'LINE', 'WeChat']
Y_Axis['Number', 'of', 'monthly', 'unique', 'users', 'in', 'millions']: ['106.4', '45.98', '25.58', '17.46', '15.01', '14.19', '10.75', '7.72', '5.53', '3.47', '3.15', '1.48']

gold: As of September 2019 , Facebook Messenger was the most popular mobile messenger app in the United States with 106.4 million unique U.S. users . Snapchat ranked second with an audience of almost 45.98 million users . As of that period , Facebook Messenger had a 57 percent mobile audience reach in the United States .
gold_template: As of templateTitleDate[0] , templateXValue[0] was the most popular templateTitle[1] templateXValue[0] app in the templateTitle[3] with templateYValue[max] templateScale templateYLabel[2] templateTitleSubject[0] templateYLabel[3] . templateXValue[1] ranked second with an audience of almost templateYValue[1] templateScale templateYLabel[3] . As of that period , templateXValue[0] had a 57 templateScale templateTitle[1] audience reach in the templateTitle[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading mobile in U.S. It shows WhatsApp was the Leading at just 1.48 degrees and Discord_-_Chat_for_Games was the warmest at 106.4 monthly .  After WhatsApp , the next Leading mobile are Facebook_Messenger at 106.4 degrees , followed by WeChat at 18 degrees , Snapchat at 45.98 degrees and then Messenger_by_Google at 17.46 degrees .

Example 77:
titleEntities: {'Subject': ['Thrones'], 'Date': ['2019', '2019']}
title: `` Game of Thrones `` deadliest seasons 2019 , by number of deaths
X_Axis['Season']: ['Season_1', 'Season_2', 'Season_3', 'Season_4', 'Season_5', 'Season_6', 'Season_7', 'Season_8']
Y_Axis['Number', 'of', 'deaths']: ['59', '130', '87', '182', '246', '540', '1096', '3523']

gold: Season 8 of HBO 's ‘ Game of Thrones ' was its deadliest season of all time , with a total of around 3,523 deaths compared to just 59 in the first season . Season 8 , the show 's final season , accounted for significantly more deaths than the first seven seasons combined.The deadliest location in the Game of Thrones series was ‘ Winterfell ' _ , which hosted one of the show 's final battles . Game of Thrones ‘ Game of Thrones ' is arguably one of the most successful television shows of all time , with millions of viewers from around the world tuning in to view each of its eight seasons and dozens of Primetime Emmy Awards recognizing its success .
gold_template: templateXValue[0] templateXValue[last] of HBO 's ‘ templateTitle[1] of templateTitleSubject[0] ' was its templateTitle[4] templateXValue[0] of all time , with a total of around templateYValue[max] templateYLabel[1] compared to just templateYValue[min] in the first templateXValue[0] . templateXValue[0] templateXValue[last] , the show 's final templateXValue[0] , accounted for significantly more templateYLabel[1] than the first templateXValue[6] templateTitle[5] combined.The templateTitle[4] location in the templateTitle[1] of templateTitleSubject[0] series was ‘ Winterfell ' _ , which hosted templateXValue[0] of the show 's final battles . templateTitle[1] of templateTitleSubject[0] ‘ templateTitle[1] of templateTitleSubject[0] ' is arguably templateXValue[0] of the most successful television shows of all time , with templateScale of viewers from around the world tuning in to view each of its templateXValue[last] templateTitle[5] and dozens of Primetime Emmy Awards recognizing its success .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the `` Game Thrones in the `` competirion .  \\n From the chart we see that the Season_5 Season made the `` deaths by some margin , with only 59 .  Season_2 and Season_1 made a respectable 130 and 59 deaths , with Season_8 and Season_4 not far behind , at 3523 and 182 respectively .

Example 78:
titleEntities: {'Subject': ['Instagram'], 'Date': ['2019']}
title: Instagram : most-followed beauty brands 2019
X_Axis['Month']: ['MAC_Cosmetics', 'Kylie_Cosmetics', 'Anastasia_Beverly_Hills', 'Calvin_Klein', 'Sephora', 'NYX_Professional_Makeup', 'Too_Faced_Cosmetics', 'Urban_Decay_Cosmetics', 'Morphe', 'Tarte_Cosmetics', 'Benefit_Cosmetics']
Y_Axis['Number', 'of', 'Instagram', 'followers', 'in', 'millions']: ['22.61', '21.81', '19.71', '18.73', '18.38', '14.14', '12.97', '11.12', '9.84', '9.78', '9.64']

gold: As of September 2019 , MAC Cosmetics was ranked first as the most popular beauty brand on Instagram with 22.6 million followers , and Kylie Cosmetics ranked second with 21.8 million . Instagram is a popular social network for brands to connect with digital audiences , and beauty brands have been making inroads on the platform due to its visual focus and strong presence of social media influencers . Beauty content on social media A picture says more than a thousand words , and millions of pictures are shared on Instagram every day .
gold_template: As of templateTitleDate[0] , templateXValue[0] was ranked first as the most popular templateTitle[2] brand on templateYLabel[1] with templateYValue[max] templateScale templateYLabel[2] , and templateXValue[1] templateXValue[0] ranked second with templateYValue[1] templateScale . templateYLabel[1] is a popular social network for templateTitle[3] to connect with digital audiences , and templateTitle[2] templateTitle[3] have been making inroads on the platform due to its visual focus and strong presence of social media influencers . templateTitle[2] content on social media A picture says more than a thousand words , and templateScale of pictures are shared on templateYLabel[1] every day .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Instagram most-followed beauty in the brands competirion .  \\n From the chart we see that the Sephora Month made the Instagram by some margin , with only 9.64 .  Kylie_Cosmetics and MAC_Cosmetics made a respectable 21.81 and 22.61 Instagram , with Benefit_Cosmetics and Calvin_Klein not far behind , at 9.64 and 18.73 respectively .

Example 79:
titleEntities: {'Subject': ['October'], 'Date': ['2016', '2016']}
title: Most popular global ads shared in October 2016
X_Axis['Online', 'Advertisements', '']: ['Shell_–_Best_Day_Of_My_Life_#makethefuture', 'Nintendo_–_First_Look_at_Nintendo_Switch', 'Microsoft_–_Introducing_Surface_Studio', 'Adidas_–_Football_needs_creators_feat._Pogba', 'Dior_–_Dior_J’adore_–_The_Absolute_Femininity', 'Emirates_–_Jennifer_Aniston', 'Louis_Vuitton_–_The_Louis_Vuitton_Cruise_2017_Collection_with_Alicia_Vikander', 'LG_Mobile_–_Everyday_Spectacular', 'HP_–_HP_Sprocket', 'Google_–_Pixel_Phone_by_Google']
Y_Axis['Number', 'of', 'shares', 'in', 'thousands']: ['1017.53', '498.04', '387.03', '345.39', '165.55', '152.19', '145.4', '125.47', '125.01', '104.52']

gold: This statistic shows most shared global online ads in October 2016 . The Shell commercial ‘ Best Day of my Life ' ranked first with over 1 million shares in October 2016 .
gold_template: This statistic shows templateTitle[0] templateTitle[4] templateTitle[2] templateXLabel[0] templateTitle[3] in templateTitleSubject[0] templateTitleDate[0] . The templateXValue[0] commercial ‘ templateXValue[0] of templateXValue[0] ' ranked templateXValue[1] templateXValue[6] over templateYValue[max] templateScale templateYLabel[1] in templateTitleSubject[0] templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most popular global in the ads competirion .  \\n From the chart we see that the Dior_–_Dior_J’adore_–_The_Absolute_Femininity Online made the Most shares by some margin , with only 104.52 .  Nintendo_–_First_Look_at_Nintendo_Switch and Shell_–_Best_Day_Of_My_Life_#makethefuture made a respectable 498.04 and 1017.53 shares , with Google_–_Pixel_Phone_by_Google and Adidas_–_Football_needs_creators_feat._Pogba not far behind , at 104.52 and 345.39 respectively .

Example 80:
titleEntities: {'Subject': ['United States'], 'Date': ['2018']}
title: Luxury vehicles : United States premium vehicle market share 2018
X_Axis['Marque', '(owner)']: ['Mercedes-Benz_(Daimler)', 'BMW_(BMW)', 'Lexus_(Toyota)', 'Audi_(VW)', 'Tesla_(Tesla_Inc.)', 'Acura_(Honda)', 'Cadillac_(GM)']
Y_Axis['Market', 'share']: ['15.8', '15.55', '14.92', '11.17', '9.12', '7.95', '7.74']

gold: This graph illustrates the market share of luxury car brands in the United States in 2018 , when Mercedes-Benz reached a market share of almost 16 percent . U.S. luxury car market share in 2018 , by key marque There is something majestic about luxury vehicles . From the glass panel roofs and the LED headlights to the leather-trimmed seats and powerful engines , these automobiles are built with the finest of materials , giving each driver the feeling of uniqueness .
gold_template: This graph illustrates the templateYLabel[0] templateYLabel[1] of templateTitle[0] car brands in the templateTitleSubject[0] in templateTitleDate[0] , when templateXValue[0] reached a templateYLabel[0] templateYLabel[1] of almost templateYValue[max] templateScale . templateTitle[3] templateTitle[0] car templateYLabel[0] templateYLabel[1] in templateTitleDate[0] , by key templateXLabel[0] There is something majestic about templateTitle[0] templateTitle[1] . From the glass panel roofs and the LED headlights to the leather-trimmed seats and powerful engines , these automobiles are built with the finest of materials , giving each driver the feeling of uniqueness .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Market of share made by United in a States premium .  \\n From the chart we see that the Lexus_(Toyota) Marque was the Luxury vehicles Marque in the premium with 15.8 share .  The next Marque to make the most share was the Audi_(VW) Marque with 11.17 share closely followed by the Cadillac_(GM) Marque with 7.74 share .

Example 81:
titleEntities: {'Subject': ['Brussels', 'Belgium'], 'Date': ['2019']}
title: Biggest electricity suppliers in Brussels ( Belgium ) 2019 , by market share
X_Axis['Month']: ['Engie_Electrabel', 'Lampiris', 'EDF_Luminus', 'Octa+', 'Mega', 'Eneco', 'Poweo', 'Social_suppliers', 'Energie_2030', 'Essent', 'Other']
Y_Axis['Market', 'share']: ['64.29', '18.54', '9.59', '3.09', '2.5', '0.92', '0.35', '0.25', '0.21', '0.08', '0.18']

gold: With 60 percent of the market share , Engie Electrabel reached the highest market share of electricity supply in the Brussels-Capital Region . The Belgian daughter of the French multinational Engie was , therefore , leading the market in this region of Belgium in 2019 . Lampiris was the second-largest supplier , holding a market share of 19 percent .
gold_template: With 60 templateScale of the templateYLabel[0] templateYLabel[1] , templateXValue[0] reached the highest templateYLabel[0] templateYLabel[1] of templateTitle[1] supply in the Brussels-Capital Region . The Belgian daughter of the French multinational templateXValue[0] was , therefore , leading the templateYLabel[0] in this region of templateTitleSubject[1] in templateTitleDate[0] . templateXValue[1] was the second-largest supplier , holding a templateYLabel[0] templateYLabel[1] of templateYValue[1] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Biggest electricity suppliers in the Brussels competirion .  \\n From the chart we see that the Mega Month made the Biggest share by some margin , with only 0.08 .  Lampiris and Engie_Electrabel made a respectable 18.54 and 64.29 share , with Other and Octa+ not far behind , at 0.18 and 3.09 respectively .

Example 82:
titleEntities: {'Subject': ['Tire'], 'Date': ['2018']}
title: Tire producers - based on global revenue 2018
X_Axis['Company']: ['Bridgestone_(Japan)', 'Michelin_(France)', 'Goodyear_(U.S.)', 'Continental_(Germany)', 'Sumitomo_Rubber_Industries_(Japan)']
Y_Axis['Revenue', 'in', 'billion', 'U.S.', 'dollars']: ['28', '26', '15', '13', '7']

gold: This statistic shows the world 's largest tire manufacturers in 2018 , based on tire-related revenue . Continental 's revenue from its tire division amounted to around 13 billion U.S. dollars in 2018 . The world 's largest tire makers The ranking of the world 's largest tire manufacturers is dominated by European and Asian manufacturers .
gold_template: This statistic shows the world 's largest templateTitleSubject[0] manufacturers in templateTitleDate[0] , templateTitle[2] on tire-related templateYLabel[0] . templateXValue[3] 's templateYLabel[0] from its templateTitleSubject[0] division amounted to around templateYValue[3] templateScale templateYLabel[2] templateYLabel[3] in templateTitleDate[0] . The world 's largest templateTitleSubject[0] makers The ranking of the world 's largest templateTitleSubject[0] manufacturers is dominated by European and Asian manufacturers .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Revenue of billion U.S. at the Tire street .  \\n The highest Revenue was 28 in the Continental_(Germany) Company followed by 26 billion in the Michelin_(France) Company , 28 billion in Continental_(Germany) and finally 7 billion in Sumitomo_Rubber_Industries_(Japan) .

Example 83:
titleEntities: {'Subject': ['Zalando'], 'Date': ['2012', '2019']}
title: Zalando : quarterly revenue 2012 to 2019
X_Axis['Quarter']: ["Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12"]
Y_Axis['Quarterly', 'revenue', 'in', 'million', 'euros']: ['1597.3', '1378.2', '1661.6', '1200.2', '1330.0', '1196.0', '1333.7', '1074.7', '1100.5', '980.2', '1091.6', '834.8', '916.4', '796.1', '868.5', '713.1', '733.0', '643.6', '665.6', '501.4', '546.4', '500.7', '549.6', '403.8', '436.6', '372.0', '404.0', '284.0', '257.0', '214.0']

gold: This statistic presents information on the quarterly revenue of Zalando from the first quarter of 2012 to second quarter of 2019 . As of the second quarter of 2019 , the Germany-based fashion retailer 's revenue amounted to approximately 1.6 billion euros , which marked an increase on the previous quarter . Over the period in question , Zalando 's quarterly revenue increased from 214 million to approximately 1.4 billion euros , exceeding the one billion euro level for the first time in 2016 .
gold_template: This statistic presents information on the templateYLabel[0] templateYLabel[1] of templateTitleSubject[0] from the first templateXLabel[0] of templateTitleDate[min] to second templateXLabel[0] of templateTitleDate[max] . As of the second templateXLabel[0] of templateTitleDate[max] , the Germany-based fashion retailer 's templateYLabel[1] amounted to approximately templateYValue[0] templateScale templateYLabel[3] , which marked an templatePositiveTrend on the previous templateXLabel[0] . Over the period in question , templateTitleSubject[0] 's templateYLabel[0] templateYLabel[1] templatePositiveTrend from templateYValue[min] templateScale to approximately templateYValue[1] templateScale templateYLabel[3] , exceeding the templateYValue[1] templateScale euro level for the first time in 2016 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Zalando quarterly in Zalando .  It shows Q4_'18 was the Zalando at just 214.0 degrees and Q2_'18 was the warmest at 1661.6 degrees .  After Q4_'18 , the next Zalando quarterly are Q2_'19 at 1597.3 degrees , followed by Q1_'12 at 18 degrees , Q1_'19 at 1378.2 degrees and then Q3_'18 at 1200.2 degrees .

Example 84:
titleEntities: {'Subject': ['American Airlines', 'US Airways'], 'Date': ['2015', '2015']}
title: American Airlines and US Airways - key figures 2015
X_Axis['Key', 'area']: ['Number_of_countries_served', 'Number_of_daily_departures', 'Number_of_aircraft_in_fleet', 'Number_of_passengers_(in_millions)', 'Revenue_passenger_kilometers_(in_millions)', 'Available_seat_kilometres_(in_millions)', 'Passenger_load_factor_(in_percent)']
Y_Axis['Unnamed:', '1']: ['55.0', '6985.0', '1549.0', '197.3', '350627.0', '427533.0', '82.0']

gold: This statistic represents combined key figures for American Airlines and US Airways ( as of June 2015 ) . American Airlines and US Airways had passenger traffic amounting to around 351 billion revenue passenger kilometers .
gold_template: This statistic represents combined templateXLabel[0] templateTitle[5] for templateTitleSubject[0] and templateTitleSubject[1] ( as of templateTitleDate[0] ) . templateTitleSubject[0] and templateTitleSubject[1] had templateXValue[4] traffic amounting to around 351 templateScale templateXValue[4] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Unnamed: of 1 made by US in a Airways key .  \\n From the chart we see that the Number_of_aircraft_in_fleet Key was the American Airlines Key in the key with 427533.0 1 .  The next Key to make the most 1 was the Number_of_passengers_(in_millions) Key with 197.3 1 closely followed by the Passenger_load_factor_(in_percent) Key with 82.0 1 .

Example 85:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': []}
title: Kidney transplants in the United Kingdom ( UK ) 2018/19
X_Axis['Country', 'of', 'residence']: ['England', 'Wales', 'Scotland', 'Northern_Ireland']
Y_Axis['Number', 'of', 'transplants']: ['2058', '109', '171', '48']

gold: 2,058 of the total 2,399 kidney transplant procedures in the United Kingdom in 2018/19 were carried out on patients living in England . Followed by 171 transplants in Scotland , while there were 109 and 48 procedures in Wales and Northern Ireland respectively . Still not enough to meet demand ? At the end of the period 2018/19 , there were still almost five thousand patients on the kidney transplant waiting list in the UK , 4.2 thousand of which were in England .
gold_template: templateYValue[max] of the total 2,399 templateTitle[0] transplant procedures in the templateTitleSubject[0] in templateTitle[5] were carried out on patients living in templateXValue[0] . Followed by templateYValue[2] templateYLabel[1] in templateXValue[2] , while there were templateYValue[1] and templateYValue[min] procedures in templateXValue[1] and templateXValue[last] respectively . Still not enough to meet demand ? At the end of the period templateTitle[5] , there were still almost five thousand patients on the templateTitle[0] transplant waiting list in the templateTitleSubject[1] , 4.2 thousand of which were in templateXValue[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Kidney transplants on United Kingdom in the UK on different continents .  The most Kidney transplants was in Northern_Ireland where £ 2058 million was transplants .  The amount in Wales was a little lower at £ 109 ,000,000 .

Example 86:
titleEntities: {'Subject': ['United Kingdom'], 'Date': ['2017']}
title: Soft drinks : market share of carbonates in the United Kingdom 2017 , by flavor
X_Axis['Flavor']: ['Cola', 'Lemonade', 'Orange', 'Tonic_mixers_and_bitters', 'Lemon/lime', 'Others']
Y_Axis['Market', 'share']: ['58', '8', '6', '5', '4', '19']

gold: Which carbonated soft drinks flavor is the most popular in the United Kingdom ? Cola flavored drinks held by far the biggest share of the UK carbonated soft drinks market in 2017 . Cola flavored drinks were so popular among consumers that there was a 50 percent market share gap between cola flavored drinks and the second most popular choice , lemonade . Brands on the market Among fizzy drinks that were not cola , Fanta had the largest number of consumers with 9.2 million in 2018 .
gold_template: Which carbonated templateTitle[0] templateTitle[1] templateXLabel[0] is the most popular in the templateTitleSubject[0] ? templateXValue[0] flavored templateTitle[1] held templateTitle[8] far the biggest templateYLabel[1] of the UK carbonated templateTitle[0] templateTitle[1] templateYLabel[0] in templateTitleDate[0] . templateXValue[0] flavored templateTitle[1] were so popular among consumers that there was a 50 templateScale templateYLabel[0] templateYLabel[1] gap between templateXValue[0] flavored templateTitle[1] and the second most popular choice , templateXValue[1] . Brands on the templateYLabel[0] Among fizzy templateTitle[1] that were not templateXValue[0] , Fanta had the largest number of consumers with 9.2 templateScale in 2018 .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .
generated: This chart shows the Market of share made by the market .  \\n In the share , the Soft share were made by Orange , with 58 share .  \\n The Soft drinks market were Lemonade and Lemon/lime .

Example 87:
titleEntities: {'Subject': ['Germany'], 'Date': ['2016']}
title: Market share of leading companies in the coffee market in Germany 2016
X_Axis['Coffee', 'Company']: ['Jacobs_Douwe_Egberts', 'Tchibo', 'Nestlé']
Y_Axis['Market', 'share']: ['23.2', '12', '10.3']

gold: This statistic illustrates the market share of leading companies in the German coffee market in 2016 . In the period of consideration , Tchibo had a market share of 12 percent .
gold_template: This statistic illustrates the templateYLabel[0] templateYLabel[1] of templateTitle[2] templateTitle[3] in the German templateXLabel[0] templateYLabel[0] in templateTitleDate[0] . In the period of consideration , templateXValue[1] had a templateYLabel[0] templateYLabel[1] of templateYValue[1] templateScale .

generated_template: This graph shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] . It shows that templateXValue[0] had just over 20 templateScale , templateXValue[1] templateYValue[min] templateScale and the templateXValue[last] a similar templateScale to templateXValue[0] .
generated: This graph shows the Market share leading in Jacobs_Douwe_Egberts 2016 .  It shows that Jacobs_Douwe_Egberts had just over 20 % , Tchibo 10.3 % and the Nestlé a similar percentage to Jacobs_Douwe_Egberts .

Example 88:
titleEntities: {'Subject': ['Europe'], 'Date': ['2019']}
title: Europe : number of people who ski as of 2019 , by country
X_Axis['Country']: ['Germany', 'France', 'United_Kingdom', 'Poland', 'Italy', 'Russia', 'Austria', 'Switzerland', 'Spain', 'Czech_Republic', 'Sweden', 'Finland', 'Belgium', 'Norway', 'Ukraine', 'Slovakia', 'Turkey', 'Denmark', 'Romania', 'Hungary', 'Bulgaria', 'Slovenia', 'Kazakhstan', 'Croatia', 'Greece', 'Serbia', 'Portugal', 'Latvia', 'Belarus', 'Bosnia_and_Herzegovina', 'Macedonia', 'Lithuania', 'Georgia', 'Azerbaijan', 'Estonia', 'Iceland', 'Armenia', 'Albania', 'Andorra', 'Liechtenstein']
Y_Axis['Number', 'of', 'skiers', 'in', 'thousands']: ['14607', '8574', '6340', '4937', '4844', '4275', '2960', '2959', '2329', '2236', '1824', '1264', '1253', '1181', '1114', '979', '807', '667', '588', '587', '349', '299', '266', '227', '215', '211', '206', '194', '190', '175', '156', '141', '93', '72', '63', '63', '59', '29', '15', '14']

gold: Germany was , just like in 2018 , also in 2019 the European country with the highest number of skiing participants , with approximately 14.6 million Germans skiing . When considering the total population , the share of people who ski in European countries was the highest in Liechtenstein and Austria with 36 percent of population taking part in the sport . The UK : A tradition of snowsport Established in 1903 and with over 28,000 members on the books , The Ski Club is the largest and oldest snowsports membership organisation in the UK .
gold_template: templateXValue[0] was , just like in 2018 , also in templateTitleDate[0] the European templateXLabel[0] with the highest templateYLabel[0] of skiing participants , with approximately templateYValue[max] templateScale Germans skiing . When considering the total population , the share of templateTitle[2] templateTitle[3] templateTitle[4] in European countries was the highest in templateXValue[last] and templateXValue[6] with 36 templateScale of population taking part in the sport . The UK : A tradition of snowsport Established in 1903 and with over 28,000 members on the books , The templateTitle[4] Club is the largest and oldest snowsports membership organisation in the UK .

generated_template: This chart shows the templateYLabel[0] of the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . The templateTitle[0] templateXLabel[0] in templateTitleSubject[0] is templateXValue[2] at templateYValue[min] degrees , followed by templateXValue[0] at templateYValue[0] degrees , templateXValue[last] at templateYValue[last] degrees , templateXValue[1] at templateYValue[1] degrees and templateXValue[3] at 28 degrees , while the warmest of the displayed templateTitle[1] is templateXValue[4] at templateYValue[max] degrees .
generated: This chart shows the Number of the Europe number in Europe .  The Europe Country in Europe is United_Kingdom at 14 degrees , followed by Germany at 14607 degrees , Liechtenstein at 14 degrees , France at 8574 degrees and Poland at 28 degrees , while the warmest of the displayed number is Italy at 14607 degrees .

Example 89:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: Number of women murdered by men in the U.S. by state 2017
X_Axis['U.S.', 'states']: ['California', 'Texas', 'Georgia', 'Pennsylvania', 'Ohio', 'New_York', 'Virginia', 'Tennessee', 'Arizona', 'North_Carolina', 'Louisiana', 'Michigan', 'South_Carolina', 'Missouri', 'Illinois', 'Washington', 'New_Jersey', 'Kentucky', 'Maryland', 'Indiana', 'Arkansas', 'Colorado', 'Nevada', 'Wisconsin', 'Oklahoma', 'Massachusetts', 'Mississippi', 'Oregon', 'Minnesota', 'Kansas', 'West_Virginia', 'New_Mexico', 'Connecticut', 'Alaska', 'Idaho', 'Iowa', 'Utah', 'Montana', 'Delaware', 'Nebraska', 'Hawaii', 'Vermont', 'South_Dakota', 'Rhode_Island', 'Maine', 'North_Dakoda', 'New_Hampshire', 'Wyoming']
Y_Axis['Number', 'of', 'homicide', 'victims']: ['232', '221', '96', '82', '78', '74', '73', '69', '68', '65', '63', '58', '52', '51', '49', '42', '41', '40', '39', '38', '34', '32', '30', '30', '28', '23', '22', '21', '21', '16', '15', '15', '15', '14', '13', '12', '12', '10', '7', '7', '6', '6', '6', '5', '5', '4', '4', '4']

gold: This statistic shows the number of female homicide victims in single offender homicides per state in the United States in 2017 . In 2017 , there were 221 women killed by male single offenders in the state of Texas . Texas was the state with the highest number of women murdered by men in single offender homicides .
gold_template: This statistic shows the templateYLabel[0] of female templateYLabel[1] templateYLabel[2] in single offender homicides per templateTitle[7] in the templateTitle[5] in templateTitleDate[0] . In templateTitleDate[0] , there were templateYValue[1] templateTitle[1] killed templateTitle[3] male single offenders in the templateTitle[7] of templateXValue[1] . templateXValue[1] was the templateTitle[7] with the highest templateYLabel[0] of templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] in single offender homicides .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale .
generated: This chart shows the Number women in U.S. It shows Georgia was the Number at just 4 degrees and Ohio was the warmest at 232 % .  After Georgia , the next Number women are California at 232 % , followed by Wyoming at 18 % .

Example 90:
titleEntities: {'Subject': ['US'], 'Date': ['2018']}
title: Murder in the US - number of victims by weapon 2018
X_Axis['Weapon', 'Used']: ['Handguns', 'Firearms_type_not_stated', 'Knives_or_cutting_instruments', 'Other_weapons_or_weapons_not_stated', 'Personal_weapons_(hands_fists_feet_etc.)', 'Blunt_objects_(clubs_hammers_etc.)', 'Rifles', 'Shotguns', 'Other_guns', 'Asphyxiation', 'Narcotics', 'Fire', 'Strangulation', 'Drowning', 'Poison', 'Explosives']
Y_Axis['Number', 'of', 'murder', 'victims']: ['6603', '2963', '1515', '900', '672', '443', '297', '235', '167', '90', '78', '72', '70', '9', '5', '4']

gold: Which weapon is predominantly used in murder cases ? In the United States , handguns are predominantly used in murder cases , with 6,603 cases in 2018 alone . This is followed by firearms ( type not stated ) and knives or cutting instruments with 2,963 and 1,515 cases respectively in 2018 . Murder in the U.S .
gold_template: Which templateXLabel[0] is predominantly templateXLabel[1] in templateYLabel[1] cases ? In the country , templateXValue[0] are predominantly templateXLabel[1] in templateYLabel[1] cases , with templateYValue[max] cases in templateTitleDate[0] alone . This is followed templateTitle[4] templateXValue[1] ( templateXValue[1] ) and templateXValue[2] or templateXValue[2] with templateYValue[1] and templateYValue[2] cases respectively in templateTitleDate[0] . templateYLabel[1] in the U.S .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Murder US in .  It shows Knives_or_cutting_instruments was the Murder at just 4 degrees and Personal_weapons_(hands_fists_feet_etc.) was the warmest at 6603 murder .  After Knives_or_cutting_instruments , the next Murder US are Handguns at 6603 degrees , followed by Explosives at 18 degrees , Firearms_type_not_stated at 2963 degrees and then Other_weapons_or_weapons_not_stated at 900 degrees .

Example 91:
titleEntities: {'Subject': ['Q4 Q3'], 'Date': ['2019']}
title: Zynga games monthly active users Q4 2012 - Q3 2019
X_Axis['Quarter']: ["Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12"]
Y_Axis['Average', 'monthly', 'active', 'users', 'in', 'millions']: ['67', '70', '72', '76', '78', '78', '82', '86', '80', '80', '72', '63', '66', '61', '68', '68', '75', '83', '100', '108', '103', '121', '119', '112', '133', '187', '253', '298']

gold: This statistic contains data on Zynga 's monthly active users . In the third quarter of 2019 , the social network game developer based in San Franscisco , California , reached an average of 67 million monthly active users . At the same time , Zynga reported daily active user numbers reaching 20 million .
gold_template: This statistic contains data on templateTitleSubject[0] 's templateYLabel[1] templateYLabel[2] templateYLabel[3] . In the third templateXLabel[0] of templateTitleDate[max] , the social network game developer based in San Franscisco , California , reached an templateYLabel[0] of templateYValue[0] templateScale templateYLabel[1] templateYLabel[2] templateYLabel[3] . At the same time , templateTitleSubject[0] reported daily templateYLabel[2] user numbers reaching 20 templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Zynga games monthly in the active competirion .  \\n From the chart we see that the Q3_'18 Quarter made the Zynga monthly by some margin , with only 61 .  Q2_'19 and Q3_'19 made a respectable 70 and 67 monthly , with Q4_'12 and Q4_'18 not far behind , at 298 and 76 respectively .

Example 92:
titleEntities: {'Subject': ['Vegetables'], 'Date': ['2017']}
title: Vegetables production worldwide by type 2017
X_Axis['Vegetable']: ['Tomatoes', 'Onions_dry', 'Cucumbers_and_gherkins', 'Cabbages_and_other_brassicas', 'Eggplants_(aubergines)', 'Carrots_and_turnips', 'Chillies_and_peppers_green', 'Garlic', 'Spinach', 'Pumpkins_squash_and_gourds', 'Lettuce_and_chicory', 'Cauliflowers_and_broccoli', 'Beans_green', 'Peas_green', 'Maize_green', 'Mushrooms_and_truffles', 'Okra', 'Asparagus', 'Onions_shallots_green', 'Cassava_leaves', 'Leeks_other_alliaceous_vegetables', 'String_beans', 'Vegetables_leguminous_nes', 'Artichokes']
Y_Axis['Amount', 'in', 'million', 'metric', 'tons']: ['182.3', '97.86', '83.75', '71.45', '52.31', '42.83', '36.1', '28.16', '27.88', '27.44', '26.86', '26.0', '24.22', '20.7', '11.73', '10.24', '9.64', '8.95', '5.13', '2.35', '2.17', '1.87', '1.51', '1.5']

gold: This graph shows the global vegetable production in 2017 , broken down by type . In that year , approximately 182 million metric tons of tomatoes were produced worldwide . Vegetable production The term vegetable refers to an edible part of a plant which can be consumed raw or cooked .
gold_template: This graph shows the global templateXLabel[0] templateTitle[1] in templateTitleDate[0] , broken down templateTitle[3] templateTitle[4] . In that year , approximately templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] of templateXValue[0] were produced templateTitle[2] . templateXLabel[0] templateTitle[1] The term templateXLabel[0] refers to an edible part of a plant which can be consumed raw or cooked .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Vegetables production in Vegetables .  It shows Cucumbers_and_gherkins was the Vegetables at just 1.5 degrees and Eggplants_(aubergines) was the warmest at 182.3 degrees .  After Cucumbers_and_gherkins , the next Vegetables production are Tomatoes at 182.3 degrees , followed by Artichokes at 18 degrees , Onions_dry at 97.86 degrees and then Cabbages_and_other_brassicas at 71.45 degrees .

Example 93:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2019']}
title: Wholesale price of cherry tomatoes in the United Kingdom ( UK ) 2019
X_Axis['Month']: ["Nov_'19", "Oct_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Dec_'17", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Apr_'17", "Dec_'16", "Nov_'16", "Oct_'16", "Sep_'16", "Aug_'16", "Jul_'16", "Jun_'16", "May_'16", "Apr_'16", "Nov_'15", "Oct_'15", "Sep_'15", "Aug_'15", "Jul_'15", "Jun_'15", "May_'15", "Apr_'15"]
Y_Axis['Price', 'in', 'GBP', 'per', 'kilogram']: ['2.34', '2.61', '1.8', '1.67', '1.54', '1.65', '0.93', '1.24', '1.55', '1.0', '1.15', '1.43', '2.09', '3.24', '1.05', '0.84', '2.49', '2.19', '2.31', '1.92', '2.31', '2.97', '3.68', '1.9', '2.43', '2.3', '2.39', '2.26', '2.13', '1.65', '2.15', '2.17', '2.31', '2.81', '2.11', '1.84', '2.04', '2.02', '2.57', '2.91']

gold: This statistic displays the wholesale price of cherry tomatoes in the United Kingdom ( UK ) from 2015 to 2019 . The wholesale price of cherry tomatoes was valued at 2.34 British pounds per kilogram in November 2019 , an increase compared to a year before .
gold_template: This statistic displays the templateTitle[0] templateYLabel[0] of templateTitle[2] templateTitle[3] in the templateTitleSubject[0] ( templateTitleSubject[1] ) from 2015 to templateTitleDate[0] . The templateTitle[0] templateYLabel[0] of templateTitle[2] templateTitle[3] was valued at templateYValue[0] British pounds templateYLabel[2] templateYLabel[3] in templateTitleDate[0] , an templatePositiveTrend compared to a year before .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Wholesale price in United Kingdom .  It shows Aug_'19 was the Wholesale at just 0.84 degrees and Jun_'19 was the warmest at 3.68 degrees .  After Aug_'19 , the next Wholesale price are Nov_'19 at 2.34 degrees , followed by Apr_'15 at 18 degrees , Oct_'19 at 2.61 degrees and then Jul_'19 at 1.67 degrees .

Example 94:
titleEntities: {'Subject': ['Americans'], 'Date': ['2018']}
title: Americans ' moral stance towards abortion in 2018
X_Axis['Response']: ['Morally_acceptable', 'Morally_wrong', 'Depends_on_situation', 'No_opinion']
Y_Axis['Share', 'of', 'respondents']: ['43', '49', '7', '1']

gold: This statistic shows the results of a survey among Americans regarding their moral stance towards abortion in 2018 . In 2018 , 43 percent of respondents stated that they think having an abortion is morally acceptable , while 48 percent considered it morally wrong .
gold_template: This statistic shows the results of a survey among templateTitleSubject[0] regarding their templateTitle[2] templateTitle[3] templateTitle[4] templateTitle[5] in templateTitleDate[0] . In templateTitleDate[0] , templateYValue[0] templateScale of templateYLabel[1] stated that they think having an templateTitle[5] is templateXValue[0] , while 48 templateScale considered it templateXValue[0] templateXValue[1] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Americans ' on Americans in the towards 2018 on different continents .  The most Americans ' was in No_opinion where £ 49 million was ' .  The amount in Morally_wrong was a little lower at £ 49 ,000,000 .

Example 95:
titleEntities: {'Subject': ['Ecuadorian-American U.S.'], 'Date': ['2010']}
title: Largest Ecuadorian-American population groups in the U.S. , by county 2010
X_Axis['Population', 'Group']: ['Queens_County_NY', 'Kings_County_NJ', 'Hudson_County_NJ', 'Essex_County_NJ', 'Bronx_County_NY', 'Westchester_County_NY', 'Miami-Dade_County_FL', 'Los_Angeles_County_CA', 'Cook_County_IL', 'Suffolk_County_NY']
Y_Axis['Population', 'number']: ['98512', '28684', '26650', '25169', '23206', '22460', '19832', '19588', '19450', '17638']

gold: This statistic depicts the largest Ecuadorian-American population groups living in different counties across the United States as of 2010 . At this time there were 98,512 people of Ecuadorian origin living in Queens County in New York .
gold_template: This statistic depicts the templateTitleSubject[0] templateTitle[1] templateXLabel[0] templateTitle[3] living in different counties across the templateTitle[4] as of templateTitleDate[0] . At this time there were templateYValue[max] people of Ecuadorian origin living in templateXValue[0] in New York .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Largest Ecuadorian-American population in the groups competirion .  \\n From the chart we see that the Bronx_County_NY Population made the Largest number by some margin , with only 17638 .  Kings_County_NJ and Queens_County_NY made a respectable 28684 and 98512 number , with Suffolk_County_NY and Essex_County_NJ not far behind , at 17638 and 25169 respectively .

Example 96:
titleEntities: {'Subject': ['Fastest'], 'Date': ['2020']}
title: Fastest growing internet populations 2020
X_Axis['Country']: ['Rep._of_the_Congo', 'Dem._Rep._of_the_Congo', 'Samoa', 'Iraq', 'Kiribati', 'Guinea-Bissau', 'India', 'Egypt', 'Burundi', 'Central_Africal_Rep.', 'Oman', 'Pakistan', 'Indonesia', 'Kenya', 'Zambia', 'Saudi_Arabia', 'Cambodia', 'Tajikistan', 'Haiti', 'Libya']
Y_Axis['Year-on-year', 'growth']: ['126', '122', '86', '55', '39', '26', '23', '22', '21', '20', '18', '17', '17', '16', '16', '15', '15', '15', '13', '13']

gold: This statistic presents the fastest growing online populations based on relative year-on-year user growth as of January 2020 . During the measured period , it was found that online audiences in the Republic of the Congo grew 126 percent in total .
gold_template: This statistic presents the templateTitleSubject[0] templateTitle[1] online templateTitle[3] based on relative templateYLabel[0] user templateYLabel[1] as of templateTitleDate[0] . During the measured period , it was found that online audiences in the Republic of the templateXValue[0] templatePositiveTrend templateYValue[max] templateScale in total .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Fastest growing in Fastest .  It shows Samoa was the Fastest at just 13 degrees and Kiribati was the warmest at 126 degrees .  After Samoa , the next Fastest growing are Rep._of_the_Congo at 126 degrees , followed by Libya at 18 degrees , Dem._Rep._of_the_Congo at 122 degrees and then Iraq at 55 degrees .

Example 97:
titleEntities: {'Subject': ['Oil'], 'Date': []}
title: Oil spills - worldwide
X_Axis['Oil', 'Spill', 'Event']: ['Itox_Uno_(Gulf_of_Mexico_1979_oil_rig)', 'Gulf_War_(Persian_Gulf_1991_oil_platform)', 'Amoco_Cadiz_(Atlantic_1978_tanker)', 'Pipeline_(Komi_1994_pipeline)_', 'Sea_Empress_(Atlantic_1996_tanker)', 'Torrey_Canyon_(Atlantic_1967_tanker)', 'Urquijo_(Atlantic_1976_tanker)', 'Prestige_(Atlantic_2002_tanker)_', 'Aegean_Sea_(Atlantic_1992_tanker)', 'Andros_Patria_(Atlantic_1978_tanker)', 'Exxon_Valdez_(Pacific_1989_tanker)', 'Erika_(Atlantic_1999_tanker)']
Y_Axis['Amount', 'of', 'leaked', 'oil', '(in', 'tons)']: ['1000000', '1000000', '230000', '200000', '147000', '120000', '100000', '77000', '70000', '50000', '45000', '20000']

gold: The statistic depicts the world 's worst oil spills based on the amount of leaked oil from 1967 to 2002 . During the Prestige oil spill in 2002 , 77.000 tons of oil leaked into the Atlantic .
gold_template: The statistic depicts the world 's worst templateXValue[0] templateTitle[1] based on the templateYLabel[0] of templateYLabel[1] templateXValue[0] from templateXValue[5] to templateXValue[7] . During the templateXValue[7] templateXValue[0] templateXLabel[1] in templateXValue[7] , 77.000 tons of templateXValue[0] templateYLabel[1] into the Atlantic .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Oil spills in Oil .  It shows Amoco_Cadiz_(Atlantic_1978_tanker) was the Oil at just 20000 degrees and Sea_Empress_(Atlantic_1996_tanker) was the warmest at 1000000 leaked .  After Amoco_Cadiz_(Atlantic_1978_tanker) , the next Oil spills are Itox_Uno_(Gulf_of_Mexico_1979_oil_rig) at 1000000 degrees , followed by Erika_(Atlantic_1999_tanker) at 18 degrees , Gulf_War_(Persian_Gulf_1991_oil_platform) at 1000000 degrees and then Pipeline_(Komi_1994_pipeline)_ at 200000 degrees .

Example 98:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Average annual consumer spending , by type U.S. 2018
X_Axis['Spending', 'Type']: ['Housing', 'Transportation', 'Food', 'Personal_insurance_and_pensions', 'Healthcare', 'Entertainment', 'All_other_expenditures', 'Cash_contributions', 'Apparel_and_services']
Y_Axis['Spending', 'in', 'U.S.', 'dollars']: ['20091', '9761', '7923', '7296', '4968', '3226', '2030', '1888', '1866']

gold: This statistic shows the average annual expenditures of consumer units in the United States in 2018 , by type . In 2018 , the average U.S. consumer unit spent about 7,923 U.S. dollars on food . The total average U.S. consumer spending amounted to 61,224 U.S. dollars .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateXValue[6] of templateTitle[2] units in the templateTitle[6] in templateTitleDate[0] , templateTitle[4] templateXLabel[1] . In templateTitleDate[0] , the templateTitle[0] templateYLabel[1] templateTitle[2] unit spent about templateYValue[2] templateYLabel[1] templateYLabel[2] on templateXValue[2] . The total templateTitle[0] templateYLabel[1] templateTitle[2] templateXLabel[0] amounted to 61,224 templateYLabel[1] templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Average annual consumer in the spending competirion .  \\n From the chart we see that the Healthcare Spending made the Average U.S. by some margin , with only 1866 .  Transportation and Housing made a respectable 9761 and 20091 U.S. , with Apparel_and_services and Personal_insurance_and_pensions not far behind , at 1866 and 7296 respectively .

Example 99:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Leading insurance brokers U.S. 2018 , by revenue
X_Axis['Month']: ['Marsh_&_McLennan_Cos._Inc.', 'Aon_P.L.C.', 'Willis_Towers_Watson_P.L.C.', 'Arthur_J._Gallagher_&_Co.', 'BB&T_Insurance_Holdings_Inc.', 'Brown_&_Brown_Inc.', 'USI_Insurance_Services_L.L.C.', 'Hub_International_Ltd.', 'Alliant_Insurance_Services_Inc.', 'Acrisure_LLC']
Y_Axis['Revenue', 'in', 'billion', 'U.S.', 'dollars']: ['7.52', '4.65', '3.95', '3.57', '2.02', '2.01', '1.67', '1.67', '1.35', '1.32']

gold: With revenue amounting to over seven billion U.S. dollars in 2018 , Marsh & McLennan Cos. Inc. topped the list of leading insurance brokers in the country . In that year , they were followed by Aon P.L.C . , Willis Towers Watson P.L.C .
gold_template: With templateYLabel[0] amounting to over seven templateScale templateYLabel[2] templateYLabel[3] in templateTitleDate[0] , templateXValue[0] topped the list of templateTitle[0] templateXValue[4] templateTitle[2] in the country . In that year , they were followed templateTitle[5] templateXValue[1] P.L.C . , templateXValue[2] P.L.C .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading insurance brokers in the U.S. competirion .  \\n From the chart we see that the BB&T_Insurance_Holdings_Inc. Month made the Leading billion by some margin , with only 1.32 .  Aon_P.L.C. and Marsh_&_McLennan_Cos._Inc. made a respectable 4.65 and 7.52 billion , with Acrisure_LLC and Arthur_J._Gallagher_&_Co. not far behind , at 1.32 and 3.57 respectively .

Example 100:
titleEntities: {'Subject': ['Mexico'], 'Date': ['2018']}
title: Mexico : religion affiliation share 2018 , by type
X_Axis['Response']: ['Catholic', 'Evangelist_(unspecified)', "Jehova's_witness", 'Pentecostal_evangelist', 'Adventist', 'Mormon', 'Baptist_evangelist', 'None', 'Believer_without_formal_affiliation_to_any_religion', 'Other', 'Do_not_know', 'Do_not_answer', 'Agnostic', 'Atheist']
Y_Axis['Share', 'of', 'respondents']: ['80.8', '1.3', '1.2', '0.8', '0.2', '0.2', '0.1', '10.6', '2.8', '0.8', '0.5', '0.3', '0.2', '0.2']

gold: Roman Catholic was the most common religion affiliation in Mexico in 2018 . In a survey carried out between July and August of 2018 , almost 81 percent of Mexican respondents claimed to be of catholic faith , whereas the second most chosen religion was evangelism , with only 1.3 percent of the people interviewed . More than 10 percent of respondents answered they did n't profess any religion and a total of 0.4 percent defined themselves either as atheists or agnostics .
gold_template: Roman templateXValue[0] was the most common templateXValue[8] in templateTitleSubject[0] in templateTitleDate[0] . In a survey carried out between and of templateTitleDate[0] , almost templateYValue[max] templateScale of Mexican templateYLabel[1] claimed to be of templateXValue[0] faith , whereas the second most chosen templateXValue[8] was evangelism , with only templateYValue[1] templateScale of the people interviewed . More than 10 templateScale of templateYLabel[1] answered they did n't profess templateXValue[8] and a total of 0.4 templateScale defined themselves either as atheists or agnostics .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Mexico religion in Mexico .  It shows Jehova's_witness was the Mexico at just 0.1 degrees and Adventist was the warmest at 80.8 respondents .  After Jehova's_witness , the next Mexico religion are Catholic at 80.8 degrees , followed by Atheist at 18 degrees , Evangelist_(unspecified) at 1.3 degrees and then Pentecostal_evangelist at 0.8 degrees .

Example 101:
titleEntities: {'Subject': ['Most'], 'Date': ['2019']}
title: Most significant natural disasters worldwide by death toll up to 2019
X_Axis['Natural', 'Disasters']: ['Earthquake_tsunami(Thailand_December_26_2004)', 'Earthquake(Haiti_January_12_2010)', 'Cyclone_Nargis_storm_surge(Myanmar_May_2-5_2008)', 'Tropical_cyclone_storm_surge(Bangladesh_April_29-30_1991)', 'Earthquake(Pakistan_October_8_2005)', 'Earthquake(China_May_12_2008)', 'Heat_wave_drought(Central_Europe_July-August_2003)', 'Heat_wave(Russia_July-September_2010)', 'Earthquake(Iran_June_20_1990)', 'Earthquake(Iran_December_26_2003)']
Y_Axis['Death', 'toll']: ['220000', '159000', '140000', '139000', '88000', '84000', '70000', '56000', '40000', '26200']

gold: The statistic shows the most significant natural disasters by death toll from 1980 to 2019 . In 2010 , the earthquake in Haiti killed 159,000 people . Ten deadliest natural disasters worldwide since 1980 According to data published by Münchener Rückversicherungs-Gesellschaft ( or Munich Re ) , the second-largest global reinsurance group as of 2017 , the tsunami struck in 2004 was the deadliest natural disaster to occur worldwide between the years 1980 and 2019 .
gold_template: The statistic shows the templateTitleSubject[0] templateTitle[1] templateXLabel[0] templateXLabel[1] templateTitle[5] templateYLabel[0] templateYLabel[1] from 1980 to templateTitleDate[0] . In 2010 , the templateXValue[0] in Haiti killed templateYValue[1] people . Ten deadliest templateXLabel[0] templateXLabel[1] templateTitle[4] since 1980 According to data published templateTitle[5] Münchener Rückversicherungs-Gesellschaft ( or Munich Re ) , the second-largest global reinsurance group as of 2017 , the tsunami struck in 2004 was the deadliest templateXLabel[0] disaster to occur templateTitle[4] between the years 1980 and templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most significant natural in the disasters competirion .  \\n From the chart we see that the Earthquake(Pakistan_October_8_2005) Natural made the Most toll by some margin , with only 26200 .  Earthquake(Haiti_January_12_2010) and Earthquake_tsunami(Thailand_December_26_2004) made a respectable 159000 and 220000 toll , with Earthquake(Iran_December_26_2003) and Tropical_cyclone_storm_surge(Bangladesh_April_29-30_1991) not far behind , at 26200 and 139000 respectively .

Example 102:
titleEntities: {'Subject': ['German', 'Bundesliga'], 'Date': []}
title: German soccer Bundesliga clubs average attendance 2018/19
X_Axis['Soccer', 'Club']: ['Borussia_Dortmund', 'FC_Bayern_München', 'FC_Schalke_04', 'VfB_Stuttgart', 'Eintracht_Frankfurt', 'Borussia_Mönchengladbach', 'Hertha_BSC', 'Fortuna_Düsseldorf', 'Werder_Bremen', '1._FC_Nürnberg', 'RB_Leipzig', 'Hannover_96', 'FC_Augsburg', 'TSG_1899_Hoffenheim', 'Bayer_04_Leverkusen', '1._FSV_Mainz_05', 'VfL_Wolfsburg', 'SC_Freiburg']
Y_Axis['Average', 'attendance']: ['80820', '75000', '60941', '54551', '49765', '49668', '49259', '43857', '41415', '40372', '38380', '38365', '28623', '28456', '27990', '26246', '24481', '23894']

gold: Borussia Dortmund had an average of 80,820 spectators attend their home league games during the 2018/19 season , the largest average attendance in the Bundesliga . At the other end of the rankings , Freiburg averaged the lowest attendance with 23,894 fans attending their home matches.Dortmund 's 12th man Borussia Dortmund play their home games at Germany 's largest soccer stadium : Signal Iduna Park . The venue is known by soccer fans worldwide for its south stand ( Die Südtribüne ) , referred to colloquially as the ‘ Yellow Wall ' ( Die gelbe Wand ) , due to it being packed on matchdays with almost 25,000 supporters all wearing the club 's famous yellow .
gold_template: templateXValue[0] had an templateYLabel[0] of templateYValue[max] spectators attend their home league games during the templateTitle[6] season , the largest templateYLabel[0] templateYLabel[1] in the templateTitleSubject[1] . At the other end of the rankings , templateXValue[last] averaged the lowest templateYLabel[1] with templateYValue[min] fans attending their home matches.Dortmund 's 12th man templateXValue[0] play their home games at Germany 's largest templateXLabel[0] stadium : Signal Iduna Park . The venue is known by templateXLabel[0] fans worldwide for its south stand ( Die Südtribüne ) , referred to colloquially as the ‘ Yellow Wall ' ( Die gelbe Wand ) , due to it being packed on matchdays with almost 25,000 supporters all wearing the templateXLabel[1] 's famous yellow .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the German soccer in German .  It shows FC_Schalke_04 was the German at just 23894 degrees and Eintracht_Frankfurt was the warmest at 80820 attendance .  After FC_Schalke_04 , the next German soccer are Borussia_Dortmund at 80820 degrees , followed by SC_Freiburg at 18 degrees , FC_Bayern_München at 75000 degrees and then VfB_Stuttgart at 54551 degrees .

Example 103:
titleEntities: {'Subject': ['Countries'], 'Date': ['2017']}
title: Countries with the highest population decline rate 2017
X_Axis['Country']: ['Cook_Islands', 'Puerto_Rico', 'American_Samoa', 'Lebanon', 'Saint_Pierre_and_Miquelon', 'Latvia', 'Lithuania', 'Moldova', 'Bulgaria', 'Estonia', 'Federated_States_of_Micronesia', 'Northern_Mariana_Islands', 'Croatia', 'Serbia', 'Ukraine', 'Romania', 'Slovenia', 'Cuba', 'Montenegro', 'Virgin_Islands']
Y_Axis['Population', 'decline', 'compared', 'to', 'the', 'previous', 'year']: ['2.79', '1.74', '1.3', '1.1', '1.08', '1.08', '1.08', '1.05', '0.61', '0.57', '0.52', '0.51', '0.5', '0.46', '0.41', '0.33', '0.31', '0.29', '0.28', '0.25']

gold: This statistic shows the 20 countries with the highest population decline rate in 2017 . In the Cook Islands , the population decreased by about 2.8 percent compared to the previous year , making it the country with the highest population decline rate in 2017 . The population decline of Syria Due to the conflicts and instability in Syria in 2014 , thousands of people have fled have fled the country to cross into surrounding countries such as Turkey .
gold_template: This statistic shows the 20 templateTitleSubject[0] templateTitle[1] the templateTitle[2] templateYLabel[0] templateYLabel[1] templateTitle[5] in templateTitleDate[0] . In the templateXValue[0] , the templateYLabel[0] templateNegativeTrend by about templateYValue[max] templateScale templateYLabel[2] to the templateYLabel[3] templateYLabel[4] , making it the templateXLabel[0] templateTitle[1] the templateTitle[2] templateYLabel[0] templateYLabel[1] templateTitle[5] in templateTitleDate[0] . The templateYLabel[0] templateYLabel[1] of Syria Due to the conflicts and instability in Syria in 2014 , thousands of people have fled have fled the templateXLabel[0] to cross into surrounding templateTitleSubject[0] such as Turkey .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Countries highest in Countries .  It shows American_Samoa was the Countries at just 0.25 degrees and Saint_Pierre_and_Miquelon was the warmest at 2.79 degrees .  After American_Samoa , the next Countries highest are Cook_Islands at 2.79 degrees , followed by Virgin_Islands at 18 degrees , Puerto_Rico at 1.74 degrees and then Lebanon at 1.1 degrees .

Example 104:
titleEntities: {'Subject': ['Alabama'], 'Date': ['2019']}
title: Number of active physicians in Alabama 2019 , by specialty area
X_Axis['Specialty', 'area']: ['Psychiatry', 'Surgery', 'Anesthesiologists', 'Emergency_medicine', 'Radiology', 'Cardiology', 'Oncology_(cancer)', 'Endocrinology_diabetes_&_metabolism', 'All_other_specialities', 'Total_specialty']
Y_Axis['Number', 'of', 'physicians']: ['506', '754', '602', '465', '674', '410', '241', '71', '2619', '6342']

gold: This statistic depicts the number of active physicians in Alabama as of March 2019 , sorted by specialty area . In that year , there were 602 anesthesiologists active in Alabama . Thus , this was one of the three largest specialty groups in Alabama .
gold_template: This statistic depicts the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitleSubject[0] as of templateTitleDate[0] , sorted templateTitle[5] templateXValue[last] templateXLabel[1] . In that year , there were templateYValue[2] templateXValue[2] templateTitle[1] in templateTitleSubject[0] . Thus , this was one of the three largest templateXValue[last] groups in templateTitleSubject[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Number active physicians in the Alabama competirion .  \\n From the chart we see that the Radiology Specialty made the Number physicians by some margin , with only 71 .  Surgery and Psychiatry made a respectable 754 and 506 physicians , with Total_specialty and Emergency_medicine not far behind , at 6342 and 465 respectively .

Example 105:
titleEntities: {'Subject': ['Oscar'], 'Date': ['2019']}
title: Shortest Oscar acceptance speeches 2019
X_Axis['Actor']: ['Patty_Duke_(1963)', 'Louie_Psihoyos_(2010)', 'Alfred_Newman_(1953)', 'Gloria_Graham_(1953)', 'William_Holden_(1954)', 'Alfred_Hitchcock_(1968)', 'Joe_Pesci_(1991)', 'Dimitri_Tiomkin_(1953)', 'Delbert_Mann_(1956)', 'Billy_Willder_(1961)']
Y_Axis['Number', 'of', 'words']: ['2', '2', '4', '4', '4', '5', '5', '6', '8', '10']

gold: This statistic presents data on the shortest Academy Awards acceptance speeches of all time as of 2019 . According to the source , the record for the shortest speech is held by Patty Duke , who simply said `` thank you `` when accepting her Best Supporting Actress award in 1963 .
gold_template: This statistic presents data on the templateTitle[0] Academy Awards templateTitle[2] templateTitle[3] of all time as of templateTitleDate[0] . According to the source , the record for the templateTitle[0] speech is held by templateXValue[0] , who simply said `` thank you `` when accepting her Best Supporting Actress award in 1963 .

generated_template: The graph shows the templateTitle[0] templateTitle[1] templateTitle[3] templateYLabel[0] of templateYLabel[1] . The templateTitle[0] templateTitle[1] templateXLabel[0] is templateXValue[1] with only templateYValue[min] templateYLabel[1] , followed templateTitle[3] templateXValue[0] with templateYValue[0] templateYLabel[1] , then templateXValue[last] with templateYValue[last] templateYLabel[1] . templateXValue[3] has been visited on templateYValue[3] templateYLabel[1] , while templateXValue[2] and templateXValue[4] have been visited on templateYValue[2] and templateYValue[max] templateYLabel[1] respectively .
generated: The graph shows the Shortest Oscar speeches Number of words .  The Shortest Oscar Actor is Louie_Psihoyos_(2010) with only 2 words , followed speeches Patty_Duke_(1963) with 2 words , then Billy_Willder_(1961) with 10 words .  Gloria_Graham_(1953) has been visited on 4 words , while Alfred_Newman_(1953) and William_Holden_(1954) have been visited on 4 and 10 words respectively .

Example 106:
titleEntities: {'Subject': ['Netherlands'], 'Date': ['2019']}
title: Total number of households in the Netherlands 2019 , by type
X_Axis['Type', 'Of', 'Household']: ['Total_private_households', 'One-person_households', 'Multi-person_households_with_children', 'Multi-person_households_without_children']
Y_Axis['Number', 'of', 'households']: ['7924691', '3037622', '2604772', '2282297']

gold: This statistic shows the total number of households in the Netherlands in 2019 , by type . The majority of the households ( approximately three million ) are composed of single men and women . Roughly 2.3 million households are formed by couples without children , whereas approximately 2.6 million households are multi-person households with one or more children .
gold_template: This statistic shows the templateXValue[0] templateYLabel[0] of templateXValue[0] in the templateTitleSubject[0] in templateTitleDate[0] , templateTitle[5] templateXLabel[0] . The majority of the templateXValue[0] ( approximately templateYValue[1] templateScale ) are composed of single men and women . Roughly templateYValue[min] templateScale templateXValue[0] are formed templateTitle[5] couples templateXValue[last] templateXValue[2] , whereas approximately templateYValue[2] templateScale templateXValue[0] are templateXValue[2] templateXValue[0] templateXValue[2] one or more templateXValue[2] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Total number on Netherlands in the 2019 on different continents .  The most Total number was in Multi-person_households_without_children where £ 7924691 % was number .  The amount in One-person_households was a little lower at £ 3037622 ,000,000 .

Example 107:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017', '2019']}
title: Twitter : number of monetizable daily active U.S. users 2017 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17"]
Y_Axis['Number', 'of', 'monetizable', 'daily', 'active', 'users', 'in', 'millions']: ['31', '30', '29', '28', '27', '26', '26', '26', '25', '26', '25', '26']

gold: This statistic shows a timeline with the amount of monetizable daily active Twitter users in the United States as of the fourth quarter of 2019 . In the last reported quarter , the number of mDAU in the U.S. amounted to 31 million users . Total monthly active Twitter users in the United States amounted to 68 million .
gold_template: This statistic shows a timeline with the amount of templateYLabel[1] templateYLabel[2] templateYLabel[3] templateTitle[0] templateYLabel[4] in the templateTitle[5] as of the fourth templateXLabel[0] of templateTitleDate[max] . In the last reported templateXLabel[0] , the templateYLabel[0] of mDAU in the templateTitleSubject[0] amounted to templateYValue[max] templateScale templateYLabel[4] . Total monthly templateYLabel[3] templateTitle[0] templateYLabel[4] in the templateTitle[5] amounted to 68 templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Twitter number in U.S. \n It demonstrates that Q4_'18 is the Twitter , with a Number of 31 monetizable , while Q2_'19 is the coldest , with a Number of 25 monetizable .

Example 108:
titleEntities: {'Subject': ['Premier League'], 'Date': []}
title: Premier League clubs by cheapest seasons ticket 2019/20
X_Axis['Club']: ['West_Ham_United', 'Manchester_City', 'Aston_Villa', 'Leicester_City', 'Burnley', 'Southampton', 'Sheffield_United', 'Newcastle_United', 'Everton', 'Wolves', 'Watford', 'Manchester_United', 'Brighton', 'Bournemouth', 'Norwich_City', 'Chelsea', 'Crystal_Palace', 'Liverpool', 'Tottenham', 'Arsenal']
Y_Axis['Season', 'ticket', 'price', 'in', 'GBP']: ['320.0', '325.0', '350.0', '365.0', '390.0', '399.0', '402.5', '417.0', '420.0', '493.0', '496.0', '532.0', '535.0', '550.0', '569.5', '595.0', '600.0', '685.0', '795.0', '891.0']

gold: For the 2019/20 Premier League season , West Ham United sells the least expensive seasonal ticket at 320 British pounds , followed by Manchester City for 325 British pounds . Every team 's seasonal cards ranged in pricing , some more than others , as for example Tottenham 's cheapest season ticket cost 795 British pounds , their most expensive season ticket would cost 1,995 British pounds , which is still over 200 British pounds less than the previous season , yet still represents the most expensive season ticket pricing in the Premier League . Match-day tickets When it comes to match-day ticket prices , clubs show a slightly lower range .
gold_template: For the templateTitle[7] templateTitleSubject[0] templateYLabel[0] , templateXValue[0] sells the least expensive seasonal templateYLabel[1] at templateYValue[min] British pounds , followed templateTitle[3] templateXValue[1] for templateYValue[1] British pounds . Every team 's seasonal cards ranged in pricing , some more than others , as for example templateXValue[18] 's templateTitle[4] templateYLabel[0] templateYLabel[1] cost templateYValue[18] British pounds , their most expensive templateYLabel[0] templateYLabel[1] would cost 1,995 British pounds , which is still over 200 British pounds less than the previous templateYLabel[0] , yet still represents the most expensive templateYLabel[0] templateYLabel[1] pricing in the templateTitleSubject[0] . Match-day tickets When it comes to match-day templateYLabel[1] prices , templateTitle[2] show a slightly lower range .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Premier League in Premier League .  It shows Aston_Villa was the Premier at just 320.0 degrees and Burnley was the warmest at 891.0 degrees .  After Aston_Villa , the next Premier League are West_Ham_United at 320.0 degrees , followed by Arsenal at 18 degrees , Manchester_City at 325.0 degrees and then Leicester_City at 365.0 degrees .

Example 109:
titleEntities: {'Subject': ['HPE'], 'Date': ['2011', '2019']}
title: HPE : net revenue 2011 to 2019
X_Axis['Fiscal', 'year']: ['2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011']
Y_Axis['Net', 'revenue', 'in', 'billion', 'U.S.', 'dollars']: ['29.14', '30.85', '28.87', '30.28', '52.11', '55.12', '57.37', '51.04', '62.51']

gold: This statistic shows Hewlett Packard Enterprise 's ( previously a part of Hewlett-Packard Company ) net revenue for each fiscal year from 2011 to 2019 . In 2019 , the company brought in revenues of 29.14 billion U.S. dollars.Hewlett Packard Enterprise - additional information Hewlett Packard Enterprise ( HPE ) is an American technology company , formed on November 1 , 2015 . It 's predecessor , Hewlett-Packard Company , started in 1935 in the garage of William Hewlett and David Packard .
gold_template: This statistic shows Hewlett Packard Enterprise 's ( previously a part of Hewlett-Packard Company ) templateYLabel[0] templateYLabel[1] for each templateXLabel[0] templateXLabel[1] from templateXValue[last] to templateXValue[0] . In templateXValue[0] , the company brought in revenues of templateYValue[0] templateScale templateYLabel[3] dollars.Hewlett Packard Enterprise - additional information Hewlett Packard Enterprise ( templateTitleSubject[0] ) is an American technology company , formed on 1 , templateXValue[4] . It 's predecessor , Hewlett-Packard Company , started in 1935 in the garage of William Hewlett and David Packard .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the HPE net revenue in the 2011 competirion .  \\n From the chart we see that the 2015 Fiscal made the HPE revenue by some margin , with only 28.87 .  2018 and 2019 made a respectable 30.85 and 29.14 revenue , with 2011 and 2016 not far behind , at 62.51 and 30.28 respectively .

Example 110:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Top U.S. hospital operators based on number of hospitals 2019
X_Axis['Operator', '(City,', 'State)']: ['Hospital_Corporation_of_America_(Nashville_Tenn.)', 'Ascension_Health_(St._Louis)', 'CommonSpirit_Health_(Chicago_Ill.)', 'Community_Health_Systems_(Franklin_Tenn.)', 'Trinity_Health_(Livonia_Mich.)', 'LifePoint_Hospitals_(Brentwood_Tenn.)', 'Tenet_Healthcare_Corp._(Dallas_Tex.)', 'Vibra_Healthcare_(Mechanicsburg_Pa.)', 'Providence_Health_&_Services_(Renton_Wash.)', 'Atrium_Health_(Charlotte_N.C.)']
Y_Axis['Number', 'of', 'hospitals']: ['185', '151', '142', '105', '92', '86', '65', '65', '51', '50']

gold: This statistic depicts a ranking of the top U.S. for-profit hospital operators based on number of hospitals as of July 2019 . At this point , the Hospital Corporation of America , based in Nashville , Tennessee , was ranked first in the United States , with a total of 185 hospitals . Hospitals in the United States Currently , there are approximately 6,210 hospitals in the United States .
gold_template: This statistic depicts a ranking of the templateTitle[0] templateTitleSubject[0] for-profit templateXValue[0] templateTitle[3] templateTitle[4] on templateYLabel[0] of templateXValue[5] as of templateTitleDate[0] . At this point , the templateXValue[0] of templateXValue[0] , templateTitle[4] in Nashville , Tennessee , was ranked first in the templateTitle[1] , with a total of templateYValue[max] templateXValue[5] . templateXValue[5] in the templateTitle[1] Currently , there are approximately 6,210 templateXValue[5] in the templateTitle[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Top U.S. hospital in the operators competirion .  \\n From the chart we see that the Trinity_Health_(Livonia_Mich.) Operator made the Top hospitals by some margin , with only 50 .  Ascension_Health_(St._Louis) and Hospital_Corporation_of_America_(Nashville_Tenn.) made a respectable 151 and 185 hospitals , with Atrium_Health_(Charlotte_N.C.) and Community_Health_Systems_(Franklin_Tenn.) not far behind , at 50 and 105 respectively .

Example 111:
titleEntities: {'Subject': ['Italy', 'Italian', 'Instagram'], 'Date': []}
title: Italy : most-followed Italian influencers on Instagram 2019
X_Axis['Month']: ['Chiara_Ferragni', 'Gianluca_Vacchi', 'Mariano_Di_Vaio', 'Giorgia_Gabriele', 'Lorenzo_Ostuni', 'Lodovica_Comello', 'St3pny', 'IPantellas', 'Greta', 'Clio_Zamatteo']
Y_Axis['Number', 'of', 'Instagram', 'followers', 'in', 'thousands']: ['12524', '11499', '6283', '2620', '2435', '2294', '1953', '1955', '1877', '1863']

gold: The statistic illustrates the leading Italian influencers ranked by number of Instagram followers in Italy as of 2019 . Influencers ( social influencers ) might include journalists , subject experts , celebrities and other individuals with large followings . They typically have established online presences through multiple channels and large followings on social media platforms such as Facebook and Twitter and are widely considered authorities among their follower base .
gold_template: The statistic illustrates the leading templateTitleSubject[1] templateTitle[3] ranked by templateYLabel[0] of templateYLabel[1] templateYLabel[2] in templateTitleSubject[0] as of templateTitleDate[0] . templateTitle[3] ( social templateTitle[3] ) might include journalists , subject experts , celebrities and other individuals with large followings . They typically have established online presences through multiple channels and large followings on social media platforms such as Facebook and Twitter and are widely considered authorities among their follower base .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Italy most-followed Italian in the influencers competirion .  \\n From the chart we see that the Lorenzo_Ostuni Month made the Italy Instagram by some margin , with only 1863 .  Gianluca_Vacchi and Chiara_Ferragni made a respectable 11499 and 12524 Instagram , with Clio_Zamatteo and Giorgia_Gabriele not far behind , at 1863 and 2620 respectively .

Example 112:
titleEntities: {'Subject': ['Luxury'], 'Date': ['2017']}
title: Luxury brand social media engagement generated by top influencers 2017
X_Axis['Brand', '(top', 'influencer)']: ['Valentino_(Demi_Lovato)', 'Tory_Burch_(Shay_Mitchell)', "Tod's_(Naomi_Campbell)", 'Tiffany_&_Co._(Reese_Witherspoon)', 'Salvatore_Ferragamo_(Nina_Dobrev)', 'Saint_Laurent_(J_Balvin)', 'Prada_(Chiara_Ferragni)', 'Michael_Kors_(Blake_Lively)', 'Louis_Vuitton_(Kevin_Ma)', 'Hugo_Boss_(Mariano_Di_Vaio)', 'Hermes_(Xenia_Tchoumi)', 'Gucci_(Nina_Dobrev)', 'Givenchy_(Nicki_Minaj)', 'Fendi_(Gigi_Hadid)', 'Dolce_&_Gabbana_(Cameron_Dallas)', 'Dior_(Rihanna)', 'Chanel_(Cara_Delevigne)', 'Celine_(Kim_Kardashian)', 'Cartier_(Nikkie_Tutorials)', 'Burberry_(Dove_Cameron)', 'Bulgari_(Bella_Hadid)', 'Bottega_Veneta_(Kris_Jenner)', 'Balenciaga_(Nicki_Minaj)', 'Average']
Y_Axis['Number', 'of', 'social', 'media', 'actions', 'per', 'post']: ['1385467', '134751', '40647', '77643', '601316', '181475', '116169', '759670', '26689', '91041', '27692', '458444', '629753', '653272', '742342', '629179', '662894', '1182087', '290287', '447287', '591423', '102457', '341862', '442341']

gold: This statistic presents the number of social media actions generated per post by top luxury brand influencer . During the first quarter of 2017 , an average social media post by Kim Kardashian generated 1.2 million social media actions . Kardashian is the top influencer for luxury brand Celine .
gold_template: This statistic presents the templateYLabel[0] of templateYLabel[1] templateYLabel[2] templateYLabel[3] templateTitle[5] templateYLabel[4] templateYLabel[5] templateTitle[6] templateTitle[7] templateTitleSubject[0] templateXLabel[0] influencer . During the first quarter of templateTitleDate[0] , an templateXValue[last] templateYLabel[1] templateYLabel[2] templateYLabel[5] templateTitle[6] Kim Kardashian templateTitle[5] templateYValue[17] templateScale templateYLabel[1] templateYLabel[2] templateYLabel[3] . Kardashian is the templateTitle[7] influencer for templateTitleSubject[0] templateXLabel[0] templateXValue[17] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Luxury brand in Luxury .  It shows Tod's_(Naomi_Campbell) was the Luxury at just 26689 degrees and Salvatore_Ferragamo_(Nina_Dobrev) was the warmest at 1385467 degrees .  After Tod's_(Naomi_Campbell) , the next Luxury brand are Valentino_(Demi_Lovato) at 1385467 degrees , followed by Average at 18 degrees , Tory_Burch_(Shay_Mitchell) at 134751 degrees and then Tiffany_&_Co._(Reese_Witherspoon) at 77643 degrees .

Example 113:
titleEntities: {'Subject': ['England', 'Wales'], 'Date': ['2014']}
title: Reasons for unreported vandalism against businesses in England and Wales 2014
X_Axis['Response']: ['Trivial/no_loss', 'Lack_of_police_engagement', 'Private/dealt_with_ourselves', 'Lack_of_evidence', 'Reported_to_other_authorities', 'Inconvenient_to_report', 'Police_came', 'Common_occurrence', 'Fear_of_reprisal', 'Other']
Y_Axis['Share', 'of', 'respondents']: ['43', '40', '13', '3', '3', '3', '3', '2', '1', '6']

gold: This survey shows the reasons businesses gave for not reporting cases of vandalism on their premises to the police in England and Wales in 2014 . Of respondents , 43 percent claimed they did not report the incident as there was no loss or damage or the crime was too trivial to report to the police .
gold_template: This survey shows the templateTitle[0] templateTitle[5] gave templateTitle[1] not reporting cases of templateTitle[3] on their premises to the templateXValue[1] in templateTitleSubject[0] and templateTitleSubject[1] in templateTitleDate[0] . Of templateYLabel[1] , templateYValue[max] templateScale claimed they did not templateXValue[5] the incident as there was no templateXValue[0] or damage or the crime was too trivial to templateXValue[5] to the templateXValue[1] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .
generated: This chart shows the Share of respondents made by the unreported .  \\n In the vandalism , the Reasons respondents were made by Private/dealt_with_ourselves , with 43 respondents .  \\n The Reasons for unreported were Lack_of_police_engagement and Reported_to_other_authorities .

Example 114:
titleEntities: {'Subject': ['Boeing'], 'Date': ['2019']}
title: Prices of Boeing aircraft in 2019
X_Axis['Aircraft', 'type']: ['777-9', '747-8_Freighter', '747-8', '777-8', '777-300ER', '777_Freighter', '777-200LR', '787-10', '777-200ER', '787-9', '787-8', '767-300_Freighter', '767-300ER', '737_MAX_10', '737_MAX_9', '737_MAX_200', '737_MAX_8', '737-900ER', '737-800', '737_MAX_7', '737-700']
Y_Axis['Price', 'in', 'million', 'U.S.', 'dollars']: ['442.2', '419.2', '418.4', '410.2', '375.5', '352.3', '346.9', '338.4', '306.6', '292.5', '248.3', '220.3', '217.9', '134.9', '128.9', '124.8', '121.6', '112.6', '106.1', '99.7', '89.1']

gold: The statistic shows the average prices for Boeing aircraft as of January 2019 , by type . The 737 - 800 model had a list price of 106.1 million U.S. dollars . The Boeing 777 - 9 is the company 's most expensive model Along with Airbus , Embraer , and Bombardier Aerospace , Boeing is one of the world 's four largest aircraft manufacturers .
gold_template: The statistic shows the average templateTitle[0] for templateTitleSubject[0] templateXLabel[0] as of templateTitleDate[0] , by templateXLabel[1] . The templateXValue[13] - 800 model had a list templateYLabel[0] of templateYValue[18] templateScale templateYLabel[2] templateYLabel[3] . The templateTitleSubject[0] templateXValue[5] - templateXValue[14] is the company 's most expensive model Along with Airbus , Embraer , and Bombardier Aerospace , templateTitleSubject[0] is one of the world 's four largest templateXLabel[0] manufacturers .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Prices Boeing in .  It shows 747-8 was the Prices at just 89.1 degrees and 777-300ER was the warmest at 442.2 degrees .  After 747-8 , the next Prices Boeing are 777-9 at 442.2 degrees , followed by 737-700 at 18 degrees , 747-8_Freighter at 419.2 degrees and then 777-8 at 410.2 degrees .

Example 115:
titleEntities: {'Subject': ['H2'], 'Date': ['2017']}
title: Leading social media traffic referral sources H2 2017
X_Axis['Platform']: ['Facebook', 'Pinterest', 'Twitter', 'Instagram', 'YouTube', 'Flipboard', 'StumbleUpon', 'Buzzfeed', 'Reddit', 'LinkedIn', 'Yummly', 'Google+', 'Tumblr']
Y_Axis['Share', 'of', 'traffic']: ['18.16', '7.53', '0.74', '0.73', '0.17', '0.13', '0.1', '0.07', '0.07', '0.05', '0.04', '0.03', '0']

gold: This statistic gives information on the leading sources of internet referral traffic , based on Shareaholic 's global publisher network . In the second half of 2017 , it was found that social network Pinterest generated 7.53 percent of global referral traffic . Facebook was ranked first with a 18.16 percent traffic share .
gold_template: This statistic gives information on the templateTitle[0] templateTitle[5] of internet templateTitle[4] templateYLabel[1] , based on Shareaholic 's global publisher network . In the second half of templateTitleDate[0] , it was found that templateTitle[1] network templateXValue[1] generated templateYValue[1] templateScale of global templateTitle[4] templateYLabel[1] . templateXValue[0] was ranked first with a templateYValue[max] templateScale templateYLabel[1] templateYLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading social in H2 .  It shows Twitter was the Leading at just 0 degrees and YouTube was the warmest at 18.16 traffic .  After Twitter , the next Leading social are Facebook at 18.16 degrees , followed by Tumblr at 18 degrees , Pinterest at 7.53 degrees and then Instagram at 0.73 degrees .

Example 116:
titleEntities: {'Subject': ['Vodafone Germany'], 'Date': ['2019']}
title: Revenue of Vodafone Germany 2008 to 2019
X_Axis['financial', 'years']: ['2018/19', '2017/18', '2016/17', '2015/16', '2014/15', '2013/14', '2012/13', '2011/12', '2010/11', '2009/10', '2008/09']
Y_Axis['Revenue', 'in', 'billion', 'euros']: ['10.31', '10.26', '10.01', '10.63', '10.68', '9.82', '9.64', '9.55', '9.29', '9.04', '9.41']

gold: This statistic shows the revenue development of Vodafone in Germany from the financial year 2008/09 to 2018/19 . In the financial year 2018/19 , Vodafone Germany generated revenues of roughly 10.31 billion euros .
gold_template: This statistic shows the templateYLabel[0] development of templateTitleSubject[0] in templateTitleSubject[0] from the templateXLabel[0] year templateXValue[last] to templateXValue[0] . In the templateXLabel[0] year templateXValue[0] , templateTitleSubject[0] generated revenues of roughly templateYValue[0] templateScale templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Revenue Vodafone Germany in the 2008 competirion .  \\n From the chart we see that the 2014/15 financial made the Revenue billion by some margin , with only 9.04 .  2017/18 and 2018/19 made a respectable 10.26 and 10.31 billion , with 2008/09 and 2015/16 not far behind , at 9.41 and 10.63 respectively .

Example 117:
titleEntities: {'Subject': ['UK'], 'Date': ['2018']}
title: Most valuable telecommunications brands in the UK in 2018
X_Axis['Brand']: ['Vodafone', 'BT', 'Sky', 'O2', '3', 'EE']
Y_Axis['Brand', 'value', 'in', 'million', 'U.S.', 'dollars']: ['18744', '11494', '10162', '8637', '7347', '4686']

gold: This statistic displays a ranking of the most valuable telecommunications brands in the United Kingdom ( UK ) as of 2018 . Vodafone ranked first with a brand value of 18.7 billion U.S. dollars . O2 had a brand value of 8.6 billion U.S. dollars .
gold_template: This statistic displays a ranking of the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] in the United Kingdom ( templateTitleSubject[0] ) as of templateTitleDate[0] . templateXValue[0] ranked first with a templateXLabel[0] templateYLabel[1] of templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . templateXValue[3] had a templateXLabel[0] templateYLabel[1] of templateYValue[3] templateScale templateYLabel[3] templateYLabel[4] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] made per templateXLabel[0] in a templateTitle[3] so that the highest bar shows the templateTitle[0] templateTitle[1] - templateXLabel[0] templateXValue[2] with templateYValue[max] templateYLabel[1] , templateXValue[3] with templateYValue[3] , templateXValue[last] with templateYValue[last] , templateXValue[0] with templateYValue[0] , templateXValue[1] with templateYValue[1] and the only templateYValue[min] mistake made by templateXValue[4] .
generated: The chart shows the Brand of value made per Brand in a brands so that the highest bar shows the Most valuable - Brand Sky with 18744 value , O2 with 8637 , EE with 4686 , Vodafone with 18744 , BT with 11494 and the only 4686 mistake made by 3 .

Example 118:
titleEntities: {'Subject': ['Cat'], 'Date': ['2015']}
title: Cat litter : market volume worldwide 2015
X_Axis['Regions', 'Of', 'The', 'World']: ['US_and_Canada', 'Europe']
Y_Axis['Market', 'volume', 'in', 'thousand', 'tonnes']: ['2172', '1909']

gold: This statistic shows the market volume of the cat litter market in North America and Europe in 2015 . The United States and Canada was the largest market in terms of volume measured at 2,172 tonnes .
gold_template: This statistic shows the templateYLabel[0] templateYLabel[1] of the templateTitleSubject[0] templateTitle[1] templateYLabel[0] in North America and templateXValue[last] in templateTitleDate[0] . The country and templateXValue[0] was the largest templateYLabel[0] in terms of templateYLabel[1] measured at templateYValue[max] templateYLabel[3] .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the Cat litter market , expressed in thousand three different countries .  The Europe and US_and_Canada have similar Cat litter gaps at around 20 thousand whilst Europe is doing a little better at 1909 thousand .

Example 119:
titleEntities: {'Subject': ['NFL', 'MLB', 'NBA NHL'], 'Date': ['2013']}
title: Average brand value major sports leagues ( NFL , MLB , NBA & NHL ) 2013
X_Axis['American', 'Sports', 'Leagues']: ['National_Football_League', 'Major_League_Baseball', 'National_Basketball_Association', 'National_Hockey_League']
Y_Axis['Brand', 'value', '(in', 'million', 'U.S.', 'dollars)']: ['285.4', '147.0', '91.1', '52.0']

gold: The statistic compares the average brand value of North American sports leagues in 2013 . The average brand value of teams of the National Football League was at 285.4 million U.S. dollars . A brand is defined here as the trademark and associated intellectual property .
gold_template: The statistic compares the templateTitle[0] templateYLabel[0] templateYLabel[1] of North templateXLabel[0] templateXLabel[1] templateXLabel[2] in templateTitleDate[0] . The templateTitle[0] templateYLabel[0] templateYLabel[1] of teams of the templateXValue[0] was at templateYValue[max] templateScale templateYLabel[4] dollars . A templateYLabel[0] is defined here as the trademark and associated intellectual property .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Average brand on NFL in the sports 2013 on different continents .  The most Average brand was in National_Hockey_League where £ 285.4 million was brand .  The amount in Major_League_Baseball was a little lower at £ 147.0 ,000,000 .

Example 120:
titleEntities: {'Subject': ['Netherlands'], 'Date': ['2011']}
title: Largest cities in the Netherlands 2011
X_Axis['Urban', 'Settlement']: ['Amsterdam', 'Rotterdam', "'s-Gravenhage", 'Utrecht', 'Eindhoven', 'Leiden', 'Dordrecht', 'Tilburg', 'Groningen']
Y_Axis['Number', 'of', 'residents']: ['1.03', '0.8', '0.8', '0.34', '0.29', '0.26', '0.22', '0.2', '0.2']

gold: This statistic shows the largest urban settlements in the Netherlands in 2011 . In 2011 , around 1 million people lived in Amsterdam , making it the largest city in the Netherlands . Population of the Netherlands With the global financial crisis in 2008 as well as the Euro zone crisis , many countries in Europe suffered a great economic impact .
gold_template: This statistic shows the templateTitle[0] templateXLabel[0] settlements in the templateTitleSubject[0] in templateTitleDate[0] . In templateTitleDate[0] , around templateYValue[max] templateScale people lived in templateXValue[0] , making it the templateTitle[0] city in the templateTitleSubject[0] . Population of the templateTitleSubject[0] With the global financial crisis in 2008 as well as the Euro zone crisis , many countries in Europe suffered a great economic impact .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Largest cities Netherlands in the 2011 competirion .  \\n From the chart we see that the Eindhoven Urban made the Largest residents by some margin , with only 0.2 Rotterdam and Amsterdam made a respectable 0.8 and 1.03 residents , with Groningen and Utrecht not far behind , at 0.2 and 0.34 respectively .

Example 121:
titleEntities: {'Subject': ['Inflation'], 'Date': ['2019']}
title: Inflation rate of the main industrialized and emerging countries 2019
X_Axis['Country']: ['Russia', 'Brazil', 'India', 'China', 'USA', 'United_Kingdom', 'Germany', 'France', 'Japan']
Y_Axis['Inflation', 'rate', 'compared', 'to', 'previous', 'year']: ['4.68', '3.79', '3.44', '2.31', '1.82', '1.81', '1.49', '1.17', '0.99']

gold: This statistic shows the inflation rate of the main industrialized and emerging countries in 2019 . In 2019 , the inflation rate in China was estimated to amount to approximately 2.31 percent compared to the previous year .
gold_template: This statistic shows the templateYLabel[0] templateYLabel[1] of the templateTitle[2] templateTitle[3] and templateTitle[4] templateTitle[5] in templateTitleDate[0] . In templateTitleDate[0] , the templateYLabel[0] templateYLabel[1] in templateXValue[3] was estimated to amount to approximately templateYValue[3] templateScale templateYLabel[2] to the templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Inflation rate main industrialized the Inflation of rate they 've had .  \n It shows Russia has had 4.68 rate , Brazil has had the Inflation at 0.99 rate , India has had 3.44 , China has had 2.31 , USA has had the most rate at 4.68 and Japan has had 0.99 rate .

Example 122:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: U.S. tart cherry production 2018 , by state
X_Axis['State']: ['Michigan', 'Utah', 'Wisconsin']
Y_Axis['Production', 'in', 'million', 'pounds']: ['201.0', '45.0', '10.9']

gold: This statistic highlights the tart cherry production in the United States in 2018 , by state . In Michigan , some 201 million pounds of tart cherries were produced in that year .
gold_template: This statistic highlights the templateTitle[1] templateTitle[2] templateYLabel[0] in the templateTitle[0] in templateTitleDate[0] , templateTitle[5] templateXLabel[0] . In templateXValue[0] , some templateYValue[max] templateScale templateYLabel[2] of templateTitle[1] cherries were produced in that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the U.S. tart cherry in Michigan 2018 compared with that in Utah and the Wisconsin .  In Michigan there was a 201.0 million difference in the salaries of men and women .  In Utah the difference was 10.9 million .

Example 123:
titleEntities: {'Subject': ['Germany'], 'Date': ['2020']}
title: Average monthly temperature Germany January 2019 to 2020
X_Axis['Month']: ["Jan'20", "Dez'19", "Nov'19", "Okt'19", "Sep'19", "Aug'19", "Jul'19", "Jun'19", "Mai'19", "Apr'19", "Mär'19", "Feb'19", "Jan'19"]
Y_Axis['Average', 'temperature', 'in', 'degrees', 'Celsius']: ['3.3', '3.7', '5.2', '10.9', '14.1', '19.0', '18.9', '19.8', '10.9', '9.6', '6.6', '3.9', '0.6']

gold: This statistic shows the average monthly temperature in Germany from January 2019 to January 2020 . In January 2020 , the average temperature was 3.3 degrees Celsius .
gold_template: This statistic shows the templateYLabel[0] templateTitle[1] templateYLabel[1] in templateTitleSubject[0] from templateTitle[4] templateTitleDate[min] to templateTitle[4] templateTitleDate[max] . In templateTitle[4] templateTitleDate[max] , the templateYLabel[0] templateYLabel[1] was templateYValue[0] templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average monthly in Germany .  It shows Nov'19 was the Average at just 0.6 degrees and Sep'19 was the warmest at 19.8 temperature .  After Nov'19 , the next Average monthly are Jan'20 at 3.3 degrees , followed by Jan'19 at 18 degrees , Dez'19 at 3.7 degrees and then Okt'19 at 10.9 degrees .

Example 124:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: U.S. consumers who use marijuana 2017 , by household income
X_Axis['Response']: ['<$30000', '$30000-$74999', '$75000+']
Y_Axis['Share', 'of', 'respondents']: ['13', '10', '9']

gold: This statistic shows the share of consumers in the United States that currently smoke marijuana as of July 2017 , by household income . During the survey , 13 percent of respondents earning 30 thousand U.S. dollars per year or less said that they smoke marijuana .
gold_template: This statistic shows the templateYLabel[0] of templateTitle[1] in the templateTitle[0] that currently smoke templateTitle[4] as of templateTitleDate[0] , templateTitle[6] templateTitle[7] templateTitle[8] . During the survey , templateYValue[max] templateScale of templateYLabel[1] earning 30 thousand templateTitleSubject[0] dollars per year or less said that they smoke templateTitle[4] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] templateTitle[2] in some European countries , measured by templateScale disparity . templateXValue[1] has the smallest templateTitle[2] at templateYValue[min] templateScale , followed by templateXValue[0] at templateYValue[0] templateScale and lastly templateXValue[last] at templateYValue[min] templateScale .
generated: This graph shows the U.S. consumers who in some European countries , measured by percentage disparity .  $30000-$74999 has the smallest who at 9 % , followed by <$30000 at 13 % and lastly $75000+ at 9 % .

Example 125:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Leading men 's hair coloring brands in the U.S. 2019
X_Axis['Brand']: ['Just_For_Men', 'Just_For_Men_Autostop', 'Just_For_Men_Control_GX', 'Just_For_Men_Touch_of_Gray', 'Softsheen-Carson_Dark_&_Natural', 'Private_label', 'Grecian_Formula_16', 'Just_For_Men_Original_Formula', 'Creme_of_Nature', 'Grecian_5']
Y_Axis['Sales', 'in', 'million', 'U.S.', 'dollars']: ['138.0', '27.2', '18.2', '9.7', '5.7', '2.8', '2.3', '0.5', '0.3', '0.1']

gold: In 2019 , Just For Men was the leading men 's hair coloring brand in the United States with sales of approximately 138 million U.S. dollars . Ranked second , the Just For Men Autostop brand generated sales of around 27.2 million U.S. dollars that year .
gold_template: In templateTitleDate[0] , templateXValue[0] was the templateTitle[0] templateXValue[0] templateTitle[2] templateTitle[3] templateTitle[4] templateXLabel[0] in the templateTitle[6] with templateYLabel[0] of approximately templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] . Ranked second , the templateXValue[0] templateXValue[1] templateXLabel[0] generated templateYLabel[0] of around templateYValue[1] templateScale templateYLabel[2] templateYLabel[3] that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading men 's in the hair competirion .  \\n From the chart we see that the Softsheen-Carson_Dark_&_Natural Brand made the Leading million by some margin , with only 0.1 Just_For_Men_Autostop and Just_For_Men made a respectable 27.2 and 138.0 million , with Grecian_5 and Just_For_Men_Touch_of_Gray not far behind , at 0.1 and 9.7 respectively .

Example 126:
titleEntities: {'Subject': ['Cyber'], 'Date': ['2017']}
title: Cyber attacks on industries worldwide 2017
X_Axis['Month']: ['Energy', 'Healthcare', 'Retail_and_wholesale', 'Manufacturing', 'Infrastructure', 'Financial_institutions', 'Automotive', 'Professional_services', 'Power_and_utilities', 'Marine', 'Communications_media_and_technology', 'Aviation_and_aerospace']
Y_Axis['Share', 'of', 'respondents']: ['26', '25', '25', '22', '19', '17', '15', '15', '14', '14', '13', '9']

gold: This statistic presents a ranking of the industries most commonly impacted by cyber attacks worldwide as of September 2017 . During the survey , 26 percent of respondents from the energy sector stated that their company had been victim of cyber attacks in the past 12 months .
gold_template: This statistic presents a ranking of the templateTitle[2] most commonly impacted by templateTitleSubject[0] templateTitle[1] templateTitle[3] as of templateTitleDate[0] . During the survey , templateYValue[max] templateScale of templateYLabel[1] from the templateXValue[0] sector stated that their company had been victim of templateTitleSubject[0] templateTitle[1] in the past 12 months .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Cyber attacks industries in the worldwide competirion .  \\n From the chart we see that the Infrastructure Month made the Cyber respondents by some margin , with only 9 .  Healthcare and Energy made a respectable 25 and 26 respondents , with Aviation_and_aerospace and Manufacturing not far behind , at 9 and 22 respectively .

Example 127:
titleEntities: {'Subject': ['Swiss'], 'Date': ['2014', '2020']}
title: Euro to Swiss franc monthly exchange rate 2014 to 2020
X_Axis['Month']: ["Feb_'20", "Jan_'20", "Dec_'19", "Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Mar_'18", "Feb_'18", "Jan_'18", "Dec_'17", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Apr_'17", "Mar_'17", "Feb_'17", "Jan_'17", "Dec_'16", "Nov_'16", "Oct_'16", "Sep_'16", "Aug_'16", "Jul_'16", "Jun_'16", "May_'16", "Apr_'16", "Mar_'16", "Feb_'16", "Jan_'16", "Dec_'15", "Nov_'15", "Oct_'15", "Sep_'15", "Aug_'15", "Jul_'15", "Jun_'15", "May_'15", "Apr_'15", "Mar_'15", "Feb_'15", "Jan_'15", "Dec_'14", "Nov_'14", "Oct_'14", "Sep_'14", "Aug_'14", "Jul_'14", "Jun_'14", "May_'14", "Apr_'14", "Mar_'14", "Feb_'14", "Jan_'14"]
Y_Axis['Exchange', 'rate']: ['1.06', '1.07', '1.09', '1.1', '1.1', '1.08', '1.09', '1.1', '1.11', '1.12', '1.14', '1.12', '1.13', '1.14', '1.13', '1.13', '1.14', '1.13', '1.13', '1.16', '1.16', '1.15', '1.2', '1.18', '1.15', '1.16', '1.17', '1.17', '1.16', '1.15', '1.14', '1.14', '1.09', '1.09', '1.08', '1.07', '1.06', '1.07', '1.08', '1.08', '1.09', '1.09', '1.1', '1.08', '1.09', '1.1', '1.1', '1.09', '1.09', '1.11', '1.08', '1.09', '1.09', '1.09', '1.08', '1.06', '1.04', '1.03', '1.05', '1.05', '1.06', '1.05', '1.2', '1.2', '1.21', '1.21', '1.21', '1.22', '1.22', '1.22', '1.22', '1.22', '1.22', '1.22']

gold: This statistic displays the monthly exchange rate ( as of the end of each month ) of the euro to the Swiss franc ( EURCHF ) , according to data from the European Central Bank , from January 2014 to February 2020 . The concrete , or point in time , measure shows the exchange rate as of the last day of each month , which is different to the standardized measure ; calculation of average based on observations throughout the period in question . Between the months of December 2016 to December 2017 , the monthly exchange rate of the euro to the Swiss franc noted an increase with some fluctuation .
gold_template: This statistic displays the templateTitle[3] templateYLabel[0] templateYLabel[1] ( as of the end of each templateXLabel[0] ) of the templateTitle[0] to the templateTitleSubject[0] templateTitle[2] ( EURCHF ) , according to data from the European Central Bank , from templateTitleDate[min] to templateTitleDate[max] . The concrete , or point in time , measure shows the templateYLabel[0] templateYLabel[1] as of the last day of each templateXLabel[0] , which is different to the standardized measure ; calculation of average based on observations throughout the period in question . Between the months of 2016 to 2017 , the templateTitle[3] templateYLabel[0] templateYLabel[1] of the templateTitle[0] to the templateTitleSubject[0] templateTitle[2] noted an templatePositiveTrend with some fluctuation .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale , templateXValue[1] at templateYValue[1] templateScale .
generated: This chart shows the Euro Swiss in .  It shows Dec_'19 was the Euro at just 1.03 degrees and Oct_'19 was the warmest at 1.22 % .  After Dec_'19 , the next Euro Swiss are Feb_'20 at 1.06 million , followed by Jan_'14 at 18 million , Jan_'20 at 1.07 million .

Example 128:
titleEntities: {'Subject': ['Google'], 'Date': ['2017', '2017']}
title: Price of selected acquisitions by Google 2017
X_Axis['Company']: ['Motorola_Mobility_(2012)', 'Nest_Labs_(2014)', 'DoubleClick_(2008)', 'YouTube_(2006)', 'Part_of_HTC_mobile_division_and_licenses_(2017)', 'Waze_(2013)', 'AdMob_(2009)', 'ITA_Software_(2012)', 'Postini_(2007)', 'Apigee_(2016)', 'DeepMind_(2014)', 'Skybox_Imaging_(2014)', 'Admeld_(2011)', 'Bebop_(2015)', 'Wildfire_(2012)', 'Slide_(2010)', 'Widevine_Technologies_(2010)', 'Zagat_(2011)', 'On2_Technologies_(2010)', 'Channel_Intelligence_(2013)', 'Divide_(2014)', 'dMarc_Broadcasting_(2006)', 'Applied_Semantics_(2003)', 'Meebo_(2012)', 'FeedBurner_(2007)', 'Invite_Media_(2010)', 'Global_IP_Solutions_(2010)', 'Android_(2012)']
Y_Axis['Price', 'in', 'million', 'U.S.', 'dollars']: ['12500.0', '3200.0', '3100.0', '1650.0', '1100.0', '1100.0', '750.0', '700.0', '625.0', '625.0', '500.0', '500.0', '391.08', '380.2', '350.0', '182.0', '160.0', '151.0', '130.0', '125.0', '120.0', '102.0', '102.0', '100.0', '100.0', '80.0', '68.2', '50.0']

gold: This statistic shows a selection of companies Google , Inc. has acquired since 2003 , and their respective price . In June 2013 , Google acquired social traffic app Waze for 1.1 billion U.S. dollars . The internet company 's most expensive acquisition was Motorola Mobility in August 2011 , tallying 12.5 billion U.S. dollars .
gold_template: This statistic shows a selection of companies templateTitleSubject[0] , Inc. has acquired since 2003 , and their respective templateYLabel[0] . In 2013 , templateTitleSubject[0] acquired social traffic app templateXValue[5] for templateYValue[4] templateScale templateYLabel[2] templateYLabel[3] . The internet templateXLabel[0] 's most expensive acquisition was templateXValue[0] in 2011 , tallying templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Price selected in Google .  It shows DoubleClick_(2008) was the Price at just 50.0 degrees and Part_of_HTC_mobile_division_and_licenses_(2017) was the warmest at 12500.0 degrees .  After DoubleClick_(2008) , the next Price selected are Motorola_Mobility_(2012) at 12500.0 degrees , followed by Android_(2012) at 18 degrees , Nest_Labs_(2014) at 3200.0 degrees and then YouTube_(2006) at 1650.0 degrees .

Example 129:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2008', '2019']}
title: Desktop/laptop ownership among U.S. adults 2008 to 2019
X_Axis['Month']: ['February_2019', 'January_2018', 'November_2016', 'April_2016', 'April_2015', 'January_2012', 'December_2011', 'June_2010', 'January_2008']
Y_Axis['Share', 'of', 'U.S.', 'adults']: ['74', '73', '78', '74', '73', '78', '75', '78', '74']

gold: The statistic shows the penetration rate of desktop and laptop computers among adults in the United States between 2008 and 2019 . As of February 2019 , 74 percent of Americans owned a desktop or laptop computer .
gold_template: The statistic shows the penetration rate of desktop and laptop computers templateTitle[2] templateYLabel[2] in the templateTitle[3] between templateXValue[last] and templateXValue[0] . As of templateXValue[0] , templateYValue[last] templateScale of Americans owned a desktop or laptop computer .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Desktop/laptop ownership among in the U.S. competirion .  \\n From the chart we see that the April_2015 Month made the Desktop/laptop U.S. by some margin , with only 73 .  January_2018 and February_2019 made a respectable 73 and 74 U.S. , with January_2008 and April_2016 not far behind , at 74 and respectively .

Example 130:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2012']}
title: College majors with the highest unemployment rates in the U.S. 2012
X_Axis['College', 'Mayor']: ['International_Business', 'Computer_and_Information_Systems', 'Miscellaneous_Computer', 'Anthropology_and_Archeology', 'Political_Science_and_Government', 'Architecture', 'Philosophy_and_Religious_Studies', 'Fine_Arts', 'Commercial_Art_and_Graphic_Design', 'Economics']
Y_Axis['Share', 'of', 'unemployed', 'U.S.', 'students']: ['12.3', '12.1', '11.3', '10.9', '10.9', '10.3', '10.3', '10.2', '9.9', '9.8']

gold: This statistic shows college majors with the highest unemployment rates in the United States between 2009 and 2012 . The rate of unemployment for students with an international business major stood at 12.3 percent in 2012 .
gold_template: This statistic shows templateXLabel[0] templateTitle[1] templateTitle[2] the templateTitle[3] templateTitle[4] templateTitle[5] in the templateTitle[6] between 2009 and templateTitleDate[0] . The rate of templateTitle[4] for templateYLabel[3] templateTitle[2] an templateXValue[0] major stood at templateYValue[max] templateScale in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the College majors highest in the unemployment competirion .  \\n From the chart we see that the Political_Science_and_Government College made the College unemployed by some margin , with only 9.8 Computer_and_Information_Systems and International_Business made a respectable 12.1 and 12.3 unemployed , with Economics and Anthropology_and_Archeology not far behind , at 9.8 and 10.9 respectively .

Example 131:
titleEntities: {'Subject': ['Leading'], 'Date': ['2012', '2017']}
title: Leading car brands : compound annual production growth rates 2012 to 2017
X_Axis['Car', 'Brand']: ['Buick', 'Citroen', 'Mazda', 'Mitsubishi', 'Audi', 'Honda', 'Ford', 'Mercedes-Benz', 'Chevrolet', 'Renault', 'Fiat', 'Hyundai', 'BMW', 'Volkswagen', 'Peugeot', 'Nissan', 'Kia', 'Wuling', 'Suzuki', 'Toyota']
Y_Axis['Compound', 'annual', 'growth', 'rate']: ['12.1', '6.8', '6.6', '6.4', '6.4', '5.8', '5.7', '5.7', '5.5', '5.2', '5', '4.3', '4.2', '4.1', '4.1', '3.5', '3.3', '1.9', '1.9', '1.3']

gold: The statistic shows assembly compound annual growth rates of the world 's leading car brands between 2012 and 2017 . The production volume of Audi vehicles is expected to grow at a compound annual growth rate of 6.4 percent between 2012 and 2017 . The Audi brand is the premium marque within the Volkswagen Group .
gold_template: The statistic shows assembly templateYLabel[0] templateYLabel[1] templateYLabel[2] templateTitle[7] of the world 's templateTitleSubject[0] templateXLabel[0] templateTitle[2] between templateTitleDate[min] and templateTitleDate[max] . The templateTitle[5] volume of templateXValue[4] vehicles is expected to grow at a templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] of templateYValue[3] templateScale between templateTitleDate[min] and templateTitleDate[max] . The templateXValue[4] templateXLabel[1] is the premium marque within the templateXValue[13] Group .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading car in Leading .  It shows Mazda was the Leading at just 1.3 degrees and Audi was the warmest at 12.1 degrees .  After Mazda , the next Leading car are Buick at 12.1 degrees , followed by Toyota at 18 degrees , Citroen at 6.8 degrees and then Mitsubishi at 6.4 degrees .

Example 132:
titleEntities: {'Subject': ['Zim'], 'Date': ['2020', '2020']}
title: Ship fleet - number of Zim ships 2020
X_Axis['Purchase', 'Type']: ['Chartered', 'Owned', 'Orderbook']
Y_Axis['Number', 'of', 'ships']: ['56', '1', '0']

gold: This statistic represents the number of Zim ships as of March 2 , 2020 . The company had no ships in its order book as of March 2020 . Zim Integrated Shipping Services Ltd. is Israel 's largest cargo shipping company .
gold_template: This statistic represents the templateYLabel[0] of templateTitleSubject[0] templateYLabel[1] as of 2 , templateTitleDate[0] . The company had no templateYLabel[1] in its order book as of templateTitleDate[0] . templateTitleSubject[0] Integrated Shipping Services Ltd. is Israel 's largest cargo shipping company .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Ship fleet number in Chartered 2020 compared with that in Owned and the Orderbook .  In Chartered there was a 56 % difference in the salaries of men and women .  In Owned the difference was 0 % .

Example 133:
titleEntities: {'Subject': ['Rapeseed'], 'Date': []}
title: Rapeseed production volume worldwide by country 2018/2019
X_Axis['Country']: ['European_Union', 'Canada', 'China', 'India', 'Other']
Y_Axis['Rapeseed', 'production', 'in', 'million', 'metric', 'tons']: ['19.6', '21.1', '12.85', '6.6', '10.75']

gold: This statistic provides a forecast of the rapeseed production volume worldwide in 2018/2019 , by country . It was forecasted , that the rapeseed production of Canada would amount to some 21.1 million metric tons . The global production of rapeseed oil is expected to reach nearly 28 million metric tons by that year .
gold_template: This statistic provides a forecast of the templateYLabel[0] templateYLabel[1] templateTitle[2] templateTitle[3] in templateTitle[6] , templateTitle[4] templateXLabel[0] . It was forecasted , that the templateYLabel[0] templateYLabel[1] of templateXValue[1] would amount to some templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . The global templateYLabel[1] of templateYLabel[0] oil is expected to reach nearly 28 templateScale templateYLabel[3] templateYLabel[4] templateTitle[4] that year .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Rapeseed of volume Rapeseed in .  We can see that both Canada and China have a very small amount whilst Other , India and European_Union have a much higher amount . 

Example 134:
titleEntities: {'Subject': ['Denmark'], 'Date': ['2020']}
title: Most common female names in Denmark 2020
X_Axis['Month']: ['Anne', 'Kirsten', 'Mette', 'Hanne', 'Helle', 'Anna', 'Susanne', 'Lene', 'Maria', 'Marianne', 'Lone', 'Camilla', 'Pia', 'Louise', 'Charlotte', 'Bente', 'Tina', 'Gitte', 'Inge', 'Karen']
Y_Axis['Number', 'of', 'individuals']: ['45202', '39857', '38590', '37882', '33770', '33666', '30859', '30535', '29527', '26694', '25001', '24598', '24006', '23815', '23683', '23191', '23158', '22996', '22963', '22960']

gold: Among the 2.92 million female inhabitants in Denmark in 2019 , the most common name was Anne . As of January 2020 , around 45.2 thousand Danish women bore the name . There are several variations of it such as Anna , which is very popular in Denmark as well and , with a number of approximately 34 thousand , ranked on sixth place .
gold_template: Among the 2.92 templateScale templateTitle[2] inhabitants in templateTitleSubject[0] in 2019 , the templateTitle[0] templateTitle[1] name was templateXValue[0] . As of templateTitleDate[0] , around templateYValue[max] thousand Danish women bore the name . There are several variations of it such as templateXValue[5] , which is very popular in templateTitleSubject[0] as well and , with a templateYLabel[0] of approximately templateYValue[4] thousand , ranked on sixth place .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most common in Denmark .  It shows Mette was the Most at just 22960 degrees and Helle was the warmest at 45202 degrees .  After Mette , the next Most common are Anne at 45202 degrees , followed by Karen at 18 degrees , Kirsten at 39857 degrees and then Hanne at 37882 degrees .

Example 135:
titleEntities: {'Subject': ['Biggest M A', 'Europe'], 'Date': ['2019']}
title: Biggest M & A inbound deals in Europe H1 2019 , by deal value
X_Axis['Merge', '/', 'Aquisitions']: ['Allergan_plc_-_AbbVie_Inc.', 'Alcon_Inc_-_Novartis_AG_(Shareholders)', 'Nestle_Skin_Health_S.A._-_A_consortium_led_by_EQT_Partners_AB_and_Abu_Dhabi_Investment_Authority', 'Metro_AG_(89.09_stake)_-_EP_Global_Commerce_a.s.', 'WABCO_-_ZF_Friedrichshafen_AG', 'UPC_Switzerland_LLC_-_Sunrise_Communications_AG', 'RPC_Group_Plc_-_Berry_Plastics_Group_Inc.', 'Merlin_Entertainments_Plc_(71.08_stake)_-_Kirkbi_-_Blackstone_CPPIB_consortium', 'Axel_Springer_SE_(54.6_stake)_-_Kohlberg_Kravis_Roberts_&_Co._L.P.', 'Altran_Technologies_S.A_-_Capgemini_SA']
Y_Axis['Deal', 'value', 'in', 'billion', 'euros']: ['75.77', '23.67', '9.03', '8.76', '6.45', '5.54', '5.22', '5.11', '4.95', '4.91']

gold: The ‘ merging of two companies into one , or the ‘ buying ' of one company by another through acquisition is a common practice in the corporate world . M & A can be used to fulfill several strategies including growth , expansion , increasing market share , eliminating a competitor or even talent acquisition . For both the buyer and seller , strategic drivers differ .
gold_template: The ‘ merging of two companies into one , or the ‘ buying ' of one company templateXValue[2] another through acquisition is a common practice in the corporate world . templateTitle[1] templateXValue[8] A can be used to fulfill several strategies including growth , expansion , templatePositiveTrend market share , eliminating a competitor or even talent acquisition . For both the buyer and seller , strategic drivers differ .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Biggest M & in the inbound competirion .  \\n From the chart we see that the WABCO_-_ZF_Friedrichshafen_AG Merge made the Biggest value by some margin , with only 4.91 .  Alcon_Inc_-_Novartis_AG_(Shareholders) and Allergan_plc_-_AbbVie_Inc. made a respectable 23.67 and 75.77 value , with Altran_Technologies_S.A_-_Capgemini_SA and Metro_AG_(89.09_stake)_-_EP_Global_Commerce_a.s. not far behind , at 4.91 and 8.76 respectively .

Example 136:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2016']}
title: Leading coupon website awareness according to U.S. users 2016
X_Axis['Response']: ['groupon.com', 'coupons.com', 'retailmenot.com', 'livingsocial.com', 'redplum.com', 'mycoupons.com', 'couponcabin.com', 'swagbugs.com', 'savingstar.com', 'slickdeals.net', 'fatwallet.com', 'us.toluna.com', 'travelzoo.com', 'shopathome.com', 'woot.com', 'hip2save.com', 'couponmountain.com', 'freeshipping.org', 'couponchief.com', 'yipit.com', 'shesaved.com', 'passionforsavings.com', 'fyvor.com', 'other']
Y_Axis['Share', 'of', 'respondents']: ['75', '64', '62', '48', '32', '31', '25', '23', '22', '19', '18', '14', '14', '13', '12', '11', '9', '6', '5', '4', '3', '3', '2', '2']

gold: This statistic gives information on the most popular discount and promo code websites according to users in the United States . During the August 2016 survey , 75 percent of respondents stated that they were aware of groupon.com . Coupons.com was ranked second with 64 percent awareness rate and retailmenot.com was in third place with 62 percent of respondents stating that they knew the platform .
gold_template: This statistic gives information on the most popular discount and promo code websites templateTitle[4] to templateTitle[6] in the templateTitle[5] . During the templateTitleDate[0] survey , templateYValue[max] templateScale of templateYLabel[1] stated that they were aware of templateXValue[idxmax(Y)] . templateXValue[1] was ranked second with templateYValue[1] templateScale templateTitle[3] rate and templateXValue[2] was in third place with templateYValue[2] templateScale of templateYLabel[1] stating that they knew the platform .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading coupon in U.S. It shows retailmenot.com was the Leading at just 2 degrees and redplum.com was the warmest at 75 degrees .  After retailmenot.com , the next Leading coupon are groupon.com at 75 degrees , followed by other at 18 degrees , coupons.com at 64 degrees and then livingsocial.com at 48 degrees .

Example 137:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: Leading states based on motorcycle registrations - U.S. 2017
X_Axis['State']: ['California', 'Florida', 'Ohio', 'New_York', 'Pennsylvania', 'Texas', 'Illinois', 'Wisconsin', 'Montana', 'Michigan']
Y_Axis['Motorcycle', 'registrations', 'in', 'thousands']: ['842543', '586267', '410187', '392178', '377158', '364690', '333943', '324670', '306655', '258487']

gold: This statistic represents the leading U.S. states based on motorcycle registrations in 2017 . With some 842,000 motorcycle registrations , California was ranked first that year . The total number of motorcycle registrations was more than 8.7 million units in 2017 .
gold_template: This statistic represents the templateTitle[0] templateTitleSubject[0] templateTitle[1] templateTitle[2] on templateYLabel[0] templateYLabel[1] in templateTitleDate[0] . With some 842,000 templateYLabel[0] templateYLabel[1] , templateXValue[0] was ranked first that year . The total number of templateYLabel[0] templateYLabel[1] was more than 8.7 templateScale units in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading states based in the motorcycle competirion .  \\n From the chart we see that the Pennsylvania State made the Leading registrations by some margin , with only 258487 .  Florida and California made a respectable 586267 and 842543 registrations , with Michigan and New_York not far behind , at 258487 and 392178 respectively .

Example 138:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2014']}
title: Public views on U.S. favorability , by country 2014
X_Axis['Country']: ['Jordan', 'Pakistan', 'Egypt', 'Turkey', 'Russia', 'Palestinian_territory', 'Greece', 'Argentina', 'Lebanon', 'Tunisia', 'China', 'Germany', 'Malaysia', 'Czech_Republic', 'India', 'Mexico', 'Ukraine', 'Indonesia', 'Spain', 'Britain', 'Uganda', 'Venezuela', 'Mexico', 'Colombia', 'Brazil', 'Peru', 'Japan', 'United_Kingdom', 'South_Africa', 'Nigeria', 'Nicaragua', 'Chile', 'Poland', 'Thailand', 'Senegal', 'France', 'Tanzania', 'Bangladesh', 'Vietnam', 'Ghana', 'Italy', 'El_Salvador', 'Kenya', 'South_Korea', 'Israel', 'Philippines']
Y_Axis['Share', 'of', 'respondents']: ['12', '14', '10', '19', '23', '30', '34', '36', '41', '42', '50', '51', '51', '54', '55', '56', '57', '59', '60', '60', '62', '62', '63', '64', '65', '65', '66', '66', '68', '69', '71', '72', '73', '73', '74', '75', '75', '76', '76', '77', '78', '80', '80', '82', '84', '92']

gold: This statistic shows the share of people from different countries around the world in 2014 , who hold a favorable opinion of the United States . In 2014 , 78 percent of respondents in Italy held a favorable view of the United States .
gold_template: This statistic shows the templateYLabel[0] of people from different countries around the world in templateTitleDate[0] , who hold a favorable opinion of the templateXValue[27] States . In templateTitleDate[0] , templateYValue[40] templateScale of templateYLabel[1] in templateXValue[40] held a favorable view of the templateXValue[27] States .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Public views in U.S. \n It demonstrates that Russia is the Public , with a Share of 92 respondents , while Egypt is the coldest , with a Share of 10 respondents .

Example 139:
titleEntities: {'Subject': ['Kickstarter'], 'Date': ['2012', '2019']}
title: Kickstarter : total amount of funding pledged 2012 to 2019
X_Axis['Month']: ["Jul_'12", "Jun_'13", "Aug_'13", "Feb_'14", "Mar_'14", "Jul_'14", "Oct_'14", "Jan_'15", "Apr_'15", "Jul_'15", "Oct_'15", "Jan_'16", "Apr_'16", "Aug_'16", "Oct_'16", "Jan_'17", "Apr_'17", "Aug_'17", "Oct_'17", "Jan_'18", "Apr_'18", "Aug'_18", "Oct_'18", "Jan_'19", "Apr_'19", "Jul_'19", "Oct_'19"]
Y_Axis['Amount', 'of', 'U.S.', 'dollars', 'pledged', 'in', 'millions']: ['276.0', '661.0', '763.0', '982.0', '1000.0', '1207.06', '1351.55', '1470.96', '1648.98', '1843.97', '2002.8', '2165.24', '2327.0', '2526.7', '2685.6', '2835.95', '3006.07', '3209.24', '3314.85', '3458.04', '3607.43', '3827.68', '3923.18', '4065.01', '4203.44', '4389.89', '4559.21']

gold: This statistic shows the cumulative amount of dollars pledged to project funding on Kickstarter from July 2012 to October 2019 . As of the last reported period , more than 4.56 billion U.S. dollars had been pledged to projects on the crowdfunding platform . The early 2000s saw the launch of one of the first internet crowdfunding platforms in the United States called ArtistShare .
gold_template: This statistic shows the cumulative templateYLabel[0] of templateYLabel[2] templateYLabel[3] to project templateTitle[3] on templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] . As of the last reported period , more than templateYValue[max] templateScale templateYLabel[1] templateYLabel[2] had been templateYLabel[3] to projects on the crowdfunding platform . The early 2000s saw the launch of one of the first internet crowdfunding platforms in the country called ArtistShare .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Kickstarter total in Kickstarter .  It shows Aug_'13 was the Kickstarter at just 276.0 degrees and Mar_'14 was the warmest at 4559.21 degrees .  After Aug_'13 , the next Kickstarter total are Jul_'12 at 276.0 degrees , followed by Oct_'19 at 18 degrees , Jun_'13 at 661.0 degrees and then Feb_'14 at 982.0 degrees .

Example 140:
titleEntities: {'Subject': ['Q4'], 'Date': ['2019', '2019']}
title: Etsy : global gross merchandise volume Q4 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17"]
Y_Axis['GMS', 'in', 'million', 'U.S.', 'dollars']: ['1655.72', '1200.37', '1094.83', '1024.03', '1246.47', '922.51', '901.69', '861.08', '1019.45', '766.35', '748.76', '719.04']

gold: This statistic shows the global gross merchandise sales of Etsy Inc. as of the fourth quarter of 2019 . During that period , the C2C e-commerce company generated GMS of 1.66 billion U.S. dollars , up from 1.25 billion U.S. dollars in the corresponding quarter of the previous year . This represents a 32.8 percent year-on-year growth .
gold_template: This statistic shows the templateTitle[1] templateTitle[2] templateTitle[3] sales of templateTitle[0] Inc. as of the fourth templateXLabel[0] of templateTitleDate[0] . During that period , the C2C e-commerce company generated templateYLabel[0] of templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] , up from templateYValue[4] templateScale templateYLabel[2] templateYLabel[3] in the corresponding templateXLabel[0] of the previous year . This represents a 32.8 templateScale year-on-year growth .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Etsy global in Q4 .  It shows Q2_'19 was the Etsy at just 719.04 degrees and Q4_'18 was the warmest at 1655.72 million .  After Q2_'19 , the next Etsy global are Q4_'19 at 1655.72 degrees , followed by Q1_'17 at 18 degrees , Q3_'19 at 1200.37 degrees and then Q1_'19 at 1024.03 degrees .

Example 141:
titleEntities: {'Subject': ['French'], 'Date': ['2018', '2018']}
title: Leading French national team players at FIFA World Cup 2018 , by market value
X_Axis['Player']: ['Kylian_Mbappé', 'Antoine_Griezmann', 'Paul_Pogba', 'Ousmane_Dembélé', 'Raphaël_Varane', 'Thomas_Lemar', 'Samuel_Umtiti', 'Nabil_Fekir', "N'Golo_Kanté", 'Florian_Thauvin', 'Benjamin_Mendy', 'Corentin_Tolisso', 'Lucas_Hernández', 'Blaise_Matuidi', 'Steven_Nzonzi', 'Presnel_Kimpembe', 'Benjamin_Pavard', 'Hugo_Lloris', 'Djibril_Sidibé', 'Olivier_Giroud', 'Alphonse_Areola', 'Adil_Rami', 'Steve_Mandanda']
Y_Axis['Market', 'value', 'in', 'million', 'euros']: ['120.0', '100.0', '90.0', '80.0', '70.0', '65.0', '60.0', '60.0', '60.0', '50.0', '40.0', '40.0', '35.0', '30.0', '30.0', '30.0', '30.0', '25.0', '23.0', '18.0', '15.0', '7.0', '2.5']

gold: As of June 2018 , at the beginning of the 2018 FIFA World Cup , Kylian Mbappé was the the most valuable French football player . His market value reached 120 million euros and became even higher for the 2018 - 2019 season after a successful World Cup for France . Playing as a forward for Paris Saint-Germain ( PSG ) in the French Ligue 1 , Kylian Mbappé was also the club 's most valuable player .
gold_template: As of templateTitleDate[0] , at the beginning of the templateTitleDate[0] templateTitleSubject[1] , templateXValue[0] was the most valuable templateTitleSubject[0] football templateXLabel[0] . His templateYLabel[0] templateYLabel[1] reached templateYValue[max] templateScale templateYLabel[3] and became even higher for the templateTitleDate[0] - 2019 season after a successful templateTitleSubject[1] for France . Playing as a forward for Paris Saint-Germain ( PSG ) in the templateTitleSubject[0] Ligue 1 , templateXValue[0] was also the club 's most valuable templateXLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading French in .  It shows Paul_Pogba was the Leading at just 2.5 degrees and Raphaël_Varane was the warmest at 120.0 degrees .  After Paul_Pogba , the next Leading French are Kylian_Mbappé at 120.0 degrees , followed by Steve_Mandanda at 18 degrees , Antoine_Griezmann at 100.0 degrees and then Ousmane_Dembélé at 80.0 degrees .

Example 142:
titleEntities: {'Subject': ['Hindu'], 'Date': ['2010']}
title: Countries with the largest Hindu population in 2010
X_Axis['Country']: ['India', 'Nepal', 'Bangladesh', 'Indonesia', 'Pakistan', 'Sri_Lanka', 'United_States', 'Malaysia', 'Burma_(Myanmar)', 'United_Kingdom', 'Mauritius', 'South_Africa', 'United_Arab_Emirates', 'Canada', 'Australia', 'Saudi_Arabia', 'Trinidad_and_Tobago', 'Singapore', 'Fiji', 'Qatar', 'Kuwait', 'Guyana', 'Bhutan', 'Oman', 'Yemen']
Y_Axis['Estimated', 'Hindu', 'population', 'in', 'millions']: ['973.75', '24.17', '13.52', '4.05', '3.33', '2.83', '1.79', '1.72', '0.82', '0.8', '0.73', '0.57', '0.49', '0.47', '0.31', '0.31', '0.3', '0.26', '0.24', '0.24', '0.23', '0.19', '0.16', '0.15', '0.15']

gold: This statistic shows the top 25 countries in the world with the largest number of Hindu population in 2010 . In 2010 , there were about 974 million Hindus living in India .
gold_template: This statistic shows the top 25 templateTitle[0] in the world templateTitle[1] the templateTitle[2] number of templateYLabel[1] templateYLabel[2] in templateTitleDate[0] . In templateTitleDate[0] , there were about templateYValue[max] templateScale Hindus living in templateXValue[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Countries largest in Hindu .  It shows Bangladesh was the Countries at just 0.15 degrees and Pakistan was the warmest at 973.75 degrees .  After Bangladesh , the next Countries largest are India at 973.75 degrees , followed by Yemen at 18 degrees , Nepal at 24.17 degrees and then Indonesia at 4.05 degrees .

Example 143:
titleEntities: {'Subject': ['Sweden'], 'Date': ['2018']}
title: Leading passenger car models in Sweden 2018
X_Axis['Vehicle', 'Models']: ['Volvo_S/V90', 'VW_Golf', 'Volvo_S/V60', 'VW_Passat', 'Volvo_XC60', 'VW_Tiguan', 'Volvo_V40N', 'Nissan_Qashqai', 'Volvo_XC40', 'Fiat_Ducato', 'Kia_Niro', 'Toyota_Auris', 'Skoda_Octavia', 'Mercedes_E-Class', 'Toyota_Yaris', 'BMW_5-Series', "Kia_Cee'd", 'Renault_Clio', 'VW_Polo', 'Audi_A6']
Y_Axis['Units', 'sold']: ['24346', '17095', '16412', '13650', '13293', '9821', '7151', '6344', '6175', '5938', '5405', '5387', '5348', '5302', '5274', '5016', '4792', '4766', '4590', '4561']

gold: Volvo S/V90 was the most sold car model in Sweden in 2018 , at over 24 thousand units . In second place came Volkswagen ( VW ) Golf , with a sales amount of roughly 17 thousand that year . Closely behind ranked again a Volvo model – Volvo S/V60 .
gold_template: templateXValue[0] was the most templateYLabel[1] templateTitle[2] model in templateTitleSubject[0] in templateTitleDate[0] , at over templateYValue[max] thousand templateYLabel[0] . In second place came Volkswagen ( templateXValue[1] ) templateXValue[1] , with a sales amount of roughly templateYValue[1] thousand that year . Closely behind ranked again a templateXValue[0] model – templateXValue[0] templateXValue[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading passenger in Sweden .  It shows Volvo_S/V60 was the Leading at just 4561 degrees and Volvo_XC60 was the warmest at 24346 degrees .  After Volvo_S/V60 , the next Leading passenger are Volvo_S/V90 at 24346 degrees , followed by Audi_A6 at 18 degrees , VW_Golf at 17095 degrees and then VW_Passat at 13650 degrees .

Example 144:
titleEntities: {'Subject': ['UK'], 'Date': ['2014', '2019']}
title: Monthly hours of sunlight in UK 2014 to 2019
X_Axis['Month']: ["Dec_'19", "Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Mar_'18", "Feb_'18", "Jan_'18", "Dec_'17", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Apr_'17", "Mar_'17", "Feb_'17", "Jan_'17", "Dec_'16", "Nov_'16", "Oct_'16", "Sep_'16", "Aug_'16", "Jul_'16", "Jun_'16", "May_'16", "Apr_'16", "Mar_'16", "Feb_'16", "Jan_'16", "Dec_'15", "Nov_'15", "Oct_'15", "Sep_'15", "Aug_'15", "Jul_'15", "Jun_'15", "May_'15", "Apr_'15", "Mar_'15", "Feb_'15", "Jan_'15", "Dec_'14", "Nov_'14", "Oct_'14", "Sep_'14", "Aug_'14", "Jul_'14", "Jun_'14", "May_'14", "Apr_'14", "Mar_'14", "Feb_'14", "Jan_'14"]
Y_Axis['Number', 'of', 'hours']: ['46.2', '48.1', '87.9', '144.0', '173.6', '173.2', '160.8', '188.5', '168.9', '115.6', '100.6', '47.9', '37.6', '63.0', '113.2', '134.1', '147.4', '237.6', '239.9', '246.0', '132.6', '85.0', '95.6', '48.7', '45.3', '71.1', '72.7', '109.0', '155.5', '168.7', '155.7', '208.3', '158.0', '119.7', '55.0', '55.1', '40.7', '74.7', '105.3', '119.9', '181.7', '156.4', '136.5', '209.6', '160.8', '117.3', '84.9', '37.1', '29.2', '35.6', '91.2', '157.8', '148.8', '160.6', '189.7', '174.4', '212.9', '121.9', '76.0', '58.5', '57.1', '51.9', '82.8', '123.3', '171.0', '223.0', '178.4', '149.6', '144.9', '126.7', '75.0', '42.8']

gold: In the period of consideration , the total monthly hours of sunlight in the UK followed a similar pattern each year . The most notable change occurred in 2018 , when the hours of sunlight shot up in May , June and July to 246 , 240 and 238 hours respectively . Unsurprisingly it was the end of each year when sunlight hours were lowest .
gold_template: In the period of consideration , the total templateTitle[0] templateYLabel[1] of templateTitle[2] in the templateTitleSubject[0] followed a similar pattern each year . The most notable change occurred in 2018 , when the templateYLabel[1] of templateTitle[2] shot up in templateXValue[7] , and to templateYValue[max] , templateYValue[18] and templateYValue[17] templateYLabel[1] respectively . Unsurprisingly it was the end of each year when templateTitle[2] templateYLabel[1] were lowest .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale , templateXValue[1] at templateYValue[1] templateScale .
generated: This chart shows the Monthly hours in UK .  It shows Oct_'19 was the Monthly at just 29.2 degrees and Aug_'19 was the warmest at 246.0 % .  After Oct_'19 , the next Monthly hours are Dec_'19 at 46.2 percent , followed by Jan_'14 at 18 percent , Nov_'19 at 48.1 percent .

Example 145:
titleEntities: {'Subject': ['Europe'], 'Date': ['2014']}
title: Wealth per adult on average in Europe in 2014 , by country
X_Axis['Country']: ['Luxembourg', 'Switzerland', 'Belgium', 'Netherlands', 'Austria', 'Germany', 'United_Kingdom', 'France', 'Italy', 'Cyprus', 'Finland', 'Spain', 'Portugal', 'Slovenia', 'Greece', 'Slovakia']
Y_Axis['Average', 'wealth', 'per', 'adult']: ['432221', '394917', '240928', '213365', '188552', '185857', '183325', '178862', '163493', '137298', '124285', '92341', '84847', '67878', '58877', '33295']

gold: The statistic displays the average value of wealth per adult in selected European countries as of 2014 . The average value of wealth per adult in Luxembourg amounted to 432.2 thousand euros , while in the United Kingdom ( UK ) it reached approximately 188.6 thousand euros .
gold_template: The statistic displays the templateYLabel[0] value of templateYLabel[1] templateYLabel[2] templateYLabel[3] in selected European countries as of templateTitleDate[0] . The templateYLabel[0] value of templateYLabel[1] templateYLabel[2] templateYLabel[3] in templateXValue[0] amounted to templateYValue[max] thousand euros , while in the templateXValue[6] ( UK ) it reached approximately templateYValue[4] thousand euros .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Wealth per in Europe .  It shows Belgium was the Wealth at just 33295 degrees and Austria was the warmest at 432221 degrees .  After Belgium , the next Wealth per are Luxembourg at 432221 degrees , followed by Slovakia at 18 degrees , Switzerland at 394917 degrees and then Netherlands at 213365 degrees .

Example 146:
titleEntities: {'Subject': ['Dallas'], 'Date': ['1960', '2019']}
title: Career receiving yards leaders - Dallas Cowboys 1960 to 2019
X_Axis['Player']: ['Jason_Witten', 'Michael_Irvin', 'Tony_Hill', 'Drew_Pearson', 'Dez_Bryant', 'Bob_Hayes', 'Frank_Clarke', 'Miles_Austin', 'Doug_Cosbie', 'Terrell_Owens', 'Jay_Novacek', 'Billy_Joe_DuPree', 'Lance_Rentzel', 'Tony_Dorsett', 'Terrance_Williams', 'Terry_Glenn', 'Cole_Beasley', 'Kelvin_Martin', 'Emmitt_Smith', 'Patrick_Crayton']
Y_Axis['Receiving', 'yards']: ['12977', '11904', '7988', '7822', '7459', '7295', '5214', '4481', '3728', '3587', '3576', '3565', '3521', '3432', '3377', '3337', '3271', '3083', '3012', '2888']

gold: The statistic shows Dallas Cowboys players with the most receiving yards in franchise history . Jason Witten is the career receiving leader of the Dallas Cowboys with 12,977 yards .
gold_template: The statistic shows templateTitleSubject[0] templateTitle[5] players with the most templateYLabel[0] templateYLabel[1] in franchise history . templateXValue[0] is the templateTitle[0] templateYLabel[0] leader of the templateTitleSubject[0] templateTitle[5] with templateYValue[max] templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Career receiving in Dallas .  It shows Tony_Hill was the Career at just 2888 degrees and Dez_Bryant was the warmest at 12977 degrees .  After Tony_Hill , the next Career receiving are Jason_Witten at 12977 degrees , followed by Patrick_Crayton at 18 degrees , Michael_Irvin at 11904 degrees and then Drew_Pearson at 7822 degrees .

Example 147:
titleEntities: {'Subject': ['Google', 'Germany'], 'Date': ['2019']}
title: Frequently used Google search terms in Germany 2019
X_Axis['Search', 'Term']: ['jan_fedder', 'frohes_neues_2020', 'darts_wm', 'guten_rutsch', 'erster_weihnachtsfeiertag', 'bertha_von_suttner', 'frohes_neues_jahr', 'neujahrswünsche', 'guten_rutsch_ins_neue_jahr', 'winteranfang_2019']
Y_Axis['Increase', 'of', 'search', 'requests', 'compared', 'to', 'the', 'previous', 'month']: ['4400', '3650', '3150', '2850', '2750', '2050', '1750', '1700', '1600', '1200']

gold: This statistic shows the Google search terms with the highest increase in search volume over the last month in Germany as of January 10 , 2020 . During the period of consideration , search requests containing the term `` Jan Fedder `` increased by 4,400 percent compared to the previous month , while coming in at second place was `` Frohes neues Jahr ( Happy new year ) `` , increasing by 3,650 percent .
gold_template: This statistic shows the templateTitleSubject[0] templateXLabel[0] templateTitle[4] with the highest templateYLabel[0] in templateXLabel[0] volume over the last templateYLabel[5] in templateTitleSubject[1] as of 10 , templateXValue[1] . During the period of consideration , templateXLabel[0] templateYLabel[2] containing the templateXLabel[1] `` templateXValue[0] `` templatePositiveTrend by templateYValue[max] templateScale templateYLabel[3] to the templateYLabel[4] templateYLabel[5] , while coming in at second place was `` templateXValue[1] templateXValue[6] ( Happy new year ) `` , templatePositiveTrend by templateYValue[1] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Frequently used Google in the search competirion .  \\n From the chart we see that the erster_weihnachtsfeiertag Search made the Frequently search by some margin , with only 1200 .  frohes_neues_2020 and jan_fedder made a respectable 3650 and 4400 search , with winteranfang_2019 and guten_rutsch not far behind , at 1200 and 2850 respectively .

Example 148:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2019']}
title: Wholesale price of red peppers in the United Kingdom ( UK ) 2019
X_Axis['Month']: ["Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Dec_'17", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Apr_'17", "Dec_'16", "Nov_'16", "Sep_'16", "Aug_'16", "Jul_'16", "Jun_'16", "Nov_'15", "Sep_'15", "Aug_'15", "Jul_'15", "Jun_'15", "May_'15", "Apr_'15"]
Y_Axis['Price', 'in', 'British', 'pounds', 'per', 'kilogram']: ['0.59', '0.73', '0.8', '1.03', '1.27', '1.91', '1.73', '2.03', '0.66', '0.61', '0.85', '0.7', '0.83', '1.22', '1.03', '0.65', '0.6', '0.73', '1.09', '1.15', '0.76', '0.89', '1.59', '1.3', '1.09', '0.89', '0.66', '0.55', '0.86', '1.3', '1.2', '0.41', '0.6', '0.64', '0.65', '0.83', '0.85', '1.49']

gold: This statistic displays the wholesale price of red peppers in the United Kingdom ( UK ) from 2015 to 2019 . The wholesale price of red peppers was valued at 0.59 British pounds per kilogram in November 2019 .
gold_template: This statistic displays the templateTitle[0] templateYLabel[0] of templateTitle[2] templateTitle[3] in the templateTitleSubject[0] ( templateTitleSubject[1] ) from 2015 to templateTitleDate[0] . The templateTitle[0] templateYLabel[0] of templateTitle[2] templateTitle[3] was valued at templateYValue[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] templateYLabel[4] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Wholesale price in United Kingdom .  It shows Sep_'19 was the Wholesale at just 0.41 degrees and Jul_'19 was the warmest at 2.03 degrees .  After Sep_'19 , the next Wholesale price are Nov_'19 at 0.59 degrees , followed by Apr_'15 at 18 degrees , Oct_'19 at 0.73 degrees and then Aug_'19 at 1.03 degrees .

Example 149:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2014']}
title: Leading men 's razorblade brands ranked by sales in the United Kingdom ( UK ) 2014
X_Axis['Brands', 'Of', 'Men', "'s", 'Blades']: ['Gillette', 'Wilkinson_Sword', 'Bic', 'King_of_Slaves', 'Super-Max']
Y_Axis['Sales', 'in', 'million', 'GBP']: ['249.9', '66.9', '16.2', '1.0', '0.5']

gold: This statistic shows the leading five brands of men 's blades sold in the United Kingdom ( UK ) ranked by their total sales in the year to December 2014 . Gillette ranked highest of the men 's blades brands sold in the UK , generating 249.9 million British pounds in sales .
gold_template: This statistic shows the templateTitle[0] five templateXLabel[0] of templateXLabel[1] templateXLabel[2] templateXLabel[3] sold in the templateTitleSubject[0] ( templateTitleSubject[1] ) templateTitle[5] templateTitle[6] their total templateYLabel[0] in the year to templateTitleDate[0] . templateXValue[0] templateTitle[5] highest of the templateXLabel[1] templateXLabel[2] templateXLabel[3] templateXLabel[0] sold in the templateTitleSubject[1] , generating templateYValue[max] templateScale British pounds in templateYLabel[0] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Sales of million GBP at the United Kingdom street .  \\n The highest Sales was 249.9 in the King_of_Slaves Brands followed by 66.9 million in the Wilkinson_Sword Brands , 249.9 million in King_of_Slaves and finally 0.5 million in Super-Max .

Example 150:
titleEntities: {'Subject': ['Luxury'], 'Date': ['2016']}
title: Luxury destinations with the largest growth in travel worldwide 2016
X_Axis['Country']: ['Kenya', 'Iceland', 'Saint_Martin', 'China', 'Ecuador', 'Japan', 'South_Africa', 'Tanzania', 'Croatia', 'Jamaica']
Y_Axis['Year-over-year', 'travel', 'growth']: ['59', '56', '39', '35', '34', '32', '28', '27', '25', '23']

gold: This statistic shows the luxury travel destinations with the largest growth in travel worldwide as of August 2016 . Luxury travel to Kenya grew by 59 percent in 2016 compared with the previous year . In 2017 , the Caribbean was the leading international destination for a spring vacation according to U.S. respondents .
gold_template: This statistic shows the templateTitleSubject[0] templateYLabel[1] templateTitle[1] templateTitle[2] the templateTitle[3] templateYLabel[2] in templateYLabel[1] templateTitle[6] as of templateTitleDate[0] . templateTitleSubject[0] templateYLabel[1] to templateXValue[0] templatePositiveTrend by templateYValue[max] templateScale in templateTitleDate[0] compared templateTitle[2] the previous year . In 2017 , the Caribbean was the leading international destination for a spring vacation according to U.S. respondents .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Luxury destinations in Luxury .  It shows Saint_Martin was the Luxury at just 23 degrees and Ecuador was the warmest at 59 degrees .  After Saint_Martin , the next Luxury destinations are Kenya at 59 degrees , followed by Jamaica at 18 degrees , Iceland at 56 degrees and then China at 35 degrees .

Example 151:
titleEntities: {'Subject': ['United States'], 'Date': ['2019']}
title: YouTube usage penetration in the United States 2019 , by gender
X_Axis['Sex']: ['Male', 'Female']
Y_Axis['Reach']: ['68', '67']

gold: According to a third quarter 2019 survey , 68 percent of male internet users in the United States used YouTube . The video platform had a usage reach of 67 percent among female U.S. internet users . Overall , 38 percent of U.S. YouTube users accessed the platform several times a day .
gold_template: According to a third quarter templateTitleDate[0] survey , templateYValue[max] templateScale of templateXValue[0] internet users in the templateTitleSubject[1] used templateTitleSubject[0] . The video platform had a templateTitle[1] templateYLabel[0] of templateYValue[min] templateScale among templateXValue[last] templateTitle[4] internet users . Overall , 38 templateScale of templateTitle[4] templateTitleSubject[0] users accessed the platform several times a day .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the YouTube usage penetration , expressed in percent three different countries .  The Female and Male have similar YouTube usage gaps at around 20 % whilst Female is doing a little better at 67 % .

Example 152:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2013']}
title: Market share of tablet brands in the United Kingdom ( UK ) 2013
X_Axis['Tablet', 'Brand']: ['Apple_iPad', 'Other', 'Samsung', 'Blackberry', 'Acer', 'Archos']
Y_Axis['Market', 'share']: ['56', '24', '12', '4', '2', '2']

gold: This statistic shows the respective market shares of the leading tablet brands in the United Kingdom ( UK ) . In 2013 , 56 percent of UK tablet owners used an Apple iPad . Thus , the iPad brand is the most popular for tablets .
gold_template: This statistic shows the respective templateYLabel[0] shares of the leading templateXLabel[0] templateTitle[3] in the templateTitleSubject[0] ( templateTitleSubject[1] ) . In templateTitleDate[0] , templateYValue[max] templateScale of templateTitleSubject[1] templateXLabel[0] owners used an templateXValue[0] . Thus , the templateXValue[0] templateXLabel[1] is the most popular for tablets .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Market of share made by tablet in a brands United .  \\n From the chart we see that the Samsung Tablet was the Market share Tablet in the United with 56 share .  The next Tablet to make the most share was the Blackberry Tablet with 4 share closely followed by the Archos Tablet with 2 share .

Example 153:
titleEntities: {'Subject': ['Swedish'], 'Date': ['2019']}
title: Most valuable Swedish brands 2019
X_Axis['Swedish', 'Brand']: ['IKEA', 'H&M', 'Volvo', 'Nordea', 'Telia', 'Swedbank', 'Svenska_Handelsbanken', 'SEB', 'Ericsson', 'Absolut']
Y_Axis['Value', 'in', 'million', 'U.S.', 'dollars']: ['21531', '15876', '13772', '5638', '4724', '3513', '3360', '2644', '2536', '2404']

gold: As of 2019 , the self-assembly furniture retailer IKEA was the most valuable Swedish brand . The company 's value amounted to over 21 billion U.S. dollars that year . H & M ( short for Hennes & Mauritz ) came second , with a value of nearly 16 billion U.S. dollars .
gold_template: As of templateTitleDate[0] , the self-assembly furniture retailer templateXValue[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] templateXLabel[1] . The company 's templateYLabel[0] amounted to over 21 templateScale templateYLabel[2] templateYLabel[3] that year . H & M ( short for Hennes & Mauritz ) came second , with a templateYLabel[0] of nearly templateYValue[1] templateScale templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most valuable Swedish in the brands competirion .  \\n From the chart we see that the Telia Swedish made the Most million by some margin , with only 2404 .  H&M and IKEA made a respectable 15876 and 21531 million , with Absolut and Nordea not far behind , at 2404 and 5638 respectively .

Example 154:
titleEntities: {'Subject': ['United Kingdom'], 'Date': ['2011']}
title: Largest cities in the United Kingdom 2011
X_Axis['City', 'names', 'within', 'UK']: ['London', 'Birmingham', 'Glasgow', 'Liverpool', 'Bristol', 'Sheffield', 'Manchester', 'Leeds', 'Edinburgh', 'Leicester']
Y_Axis['Residents', 'in', 'million']: ['8.25', '1.09', '0.59', '0.55', '0.54', '0.52', '0.51', '0.47', '0.46', '0.44']

gold: This statistic shows the ten largest cities in the United Kingdom in 2011 . In 2011 , around 8.3 million people lived in London , making it the largest city in the United Kingdom .
gold_template: This statistic shows the ten templateTitle[0] templateTitle[1] in the templateTitleSubject[0] in templateTitleDate[0] . In templateTitleDate[0] , around templateYValue[max] templateScale people lived in templateXValue[0] , making it the templateTitle[0] templateXLabel[0] in the templateTitleSubject[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Largest cities United in the Kingdom competirion .  \\n From the chart we see that the Bristol City made the Largest million by some margin , with only 0.44 .  Birmingham and London made a respectable 1.09 and 8.25 million , with Leicester and Liverpool not far behind , at 0.44 and 0.55 respectively .

Example 155:
titleEntities: {'Subject': ['Sweden'], 'Date': ['2018']}
title: Disabled people in Sweden 2018 , by disability type
X_Axis['Disability', 'Type']: ['Mental_retardation_autism_or_pervasive_developmental_disorders', 'Other_lasting_physical_or_mental_disabilities_that_are_clearly_not_due_to_normal_aging', 'Significant_and_permanent_intellectual_disability_after_brain_damage_in_adult_age_caused_by_external_violence_or_physical_illness']
Y_Axis['Number', 'of', 'disabled', 'people']: ['65191', '6714', '2096']

gold: This statistic shows the number of disabled people in Sweden in 2018 , by type of disability accordingly to the Swedish LSS law . That year , there were over 65 thousand people with intellectual disabilities like e.g . autism in Sweden .
gold_template: This statistic shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] in templateTitleSubject[0] in templateTitleDate[0] , templateXValue[last] templateXLabel[1] of templateXValue[last] accordingly to the Swedish LSS law . templateXValue[1] year , there were over templateYValue[max] thousand templateYLabel[2] with templateXValue[last] templateXValue[1] like e.g . templateXValue[0] in templateTitleSubject[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Disabled people Sweden in Mental_retardation_autism_or_pervasive_developmental_disorders 2018 compared with that in Other_lasting_physical_or_mental_disabilities_that_are_clearly_not_due_to_normal_aging and the Significant_and_permanent_intellectual_disability_after_brain_damage_in_adult_age_caused_by_external_violence_or_physical_illness .  In Mental_retardation_autism_or_pervasive_developmental_disorders there was a 65191 % difference in the salaries of men and women .  In Other_lasting_physical_or_mental_disabilities_that_are_clearly_not_due_to_normal_aging the difference was 2096 % .

Example 156:
titleEntities: {'Subject': ['India'], 'Date': ['2000', '2019']}
title: Average daily rate of hotels in India 2000 to 2019
X_Axis['Fiscal', 'Year']: ['FY_2019', 'FY_2018', 'FY_2017', 'FY_2016', 'FY_2015', 'FY_2014', 'FY_2013', 'FY_2012', 'FY_2011', 'FY_2010', 'FY_2009', 'FY_2008', 'FY_2007', 'FY_2006', 'FY_2005', 'FY_2004', 'FY_2003', 'FY_2002', 'FY_2001']
Y_Axis['Average', 'daily', 'rate', 'in', 'U.S.', 'dollars']: ['89', '89', '85', '85', '90', '92', '106', '126', '143', '136', '168', '199', '162', '122', '96', '78', '68', '73', '83']

gold: In financial year 2019 , the average daily rate of hotels in India was 89 U.S. dollars , the same as that of the previous year . The average daily rate was the highest for five-star hotels at 159 U.S. dollars in 2019 .
gold_template: In financial templateXLabel[1] templateXValue[0] , the templateYLabel[0] templateYLabel[1] templateYLabel[2] of templateTitle[3] in templateTitleSubject[0] was templateYValue[0] templateYLabel[3] templateYLabel[4] , the same as that of the previous templateXLabel[1] . The templateYLabel[0] templateYLabel[1] templateYLabel[2] was the highest for five-star templateTitle[3] at 159 templateYLabel[3] templateYLabel[4] in templateXValue[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average daily in India .  It shows FY_2017 was the Average at just 68 degrees and FY_2015 was the warmest at 199 degrees .  After FY_2017 , the next Average daily are FY_2019 at 89 degrees , followed by FY_2001 at 18 degrees , FY_2018 at 89 degrees and then FY_2016 at 85 degrees .

Example 157:
titleEntities: {'Subject': ['Dow Jones Industrial Average'], 'Date': ['2013', '2020']}
title: Monthly Dow Jones Industrial Average index performance 2013 to 2020
X_Axis['Month']: ['Jan_20', 'Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18', 'Jul_18', 'Jun_18', 'May_18', 'Apr_18', 'Mar_18', 'Feb_18', 'Jan_18', 'Dec_17', 'Nov_17', 'Oct_17', 'Sep_17', 'Aug_17', 'Jul_17', 'Jun_17', 'May_17', 'Apr_17', 'Mar_17', 'Feb_17', 'Jan_17', 'Dec_16', 'Nov_16', 'Oct_16', 'Sep_16', 'Aug_16', 'Jul_16', 'Jun_16', 'May_16', 'Apr_16', 'Mar_16', 'Feb_16', 'Jan_16', 'Dec_15', 'Nov_15', 'Oct_15', 'Sep_15', 'Aug_15', 'Jul_15', 'Jun_15', 'May_15', 'Apr_15', 'Mar_15', 'Feb_15', 'Jan_15', 'Dec_14', 'Nov_14', 'Oct_14', 'Sep_14', 'Aug_14', 'Jul_14', 'Jun_14', 'May_14', 'Apr_14', 'Mar_14', 'Feb_14', 'Jan_14', 'Dec_13', 'Nov_13']
Y_Axis['Index', 'value']: ['28256.03', '28538.44', '28051.41', '27046.23', '26916.83', '26864.27', '26403.28', '26599.96', '24815.04', '26592.91', '25928.68', '25916.0', '24999.67', '23327.46', '25538.46', '25115.76', '26458.31', '25964.82', '25415.19', '24271.41', '24415.84', '24163.15', '24103.11', '25029.2', '26149.39', '24719.22', '24272.35', '23377.24', '22405.09', '21948.1', '21891.12', '21349.63', '21008.65', '20940.51', '20663.22', '20812.24', '19864.09', '19762.6', '19123.58', '18142.42', '18308.15', '18400.88', '18432.24', '17929.99', '17787.2', '17773.64', '17685.09', '16516.5', '16466.3', '17425.03', '17719.92', '17663.54', '16284.7', '16528.03', '17689.86', '17619.51', '18010.68', '17840.52', '17776.12', '17662.94', '18132.7', '17164.95', '17823.07', '17828.24', '17390.52', '17042.9', '17098.45', '16563.3', '16826.6', '16717.17', '16580.84', '16457.66', '16321.71', '15698.85', '16576.66']

gold: The value of the DJIA index amounted to 28,256.03 on January 31 , 2020 . Dow Jones Industrial Average index – additional information The Dow Jones Industrial Average index is a price-weighted average of 30 of the largest American publicly traded companies on New York Stock Exchange and NASDAQ , including Goldman Sachs , IBM and Walt Disney . This index is considered to be a barometer of the state of the American economy .
gold_template: The templateYLabel[1] of the DJIA templateYLabel[0] amounted to templateYValue[0] on 31 , templateTitleDate[max] . templateTitleSubject[0] templateYLabel[0] – additional information The templateTitleSubject[0] templateYLabel[0] is a price-weighted templateTitleSubject[0] of 30 of the largest American publicly traded companies on New York Stock Exchange and NASDAQ , including Goldman Sachs , IBM and Walt Disney . This templateYLabel[0] is considered to be a barometer of the state of the American economy .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale , templateXValue[1] at templateYValue[1] templateScale .
generated: This chart shows the Monthly Dow in Dow Jones Industrial Average .  It shows Nov_19 was the Monthly at just 15698.85 degrees and Sep_19 was the warmest at 28538.44 % .  After Nov_19 , the next Monthly Dow are Jan_20 at 28256.03 % , followed by Nov_13 at 18 % , Dec_19 at 28538.44 % .

Example 158:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: VR/AR headsets average session time in U.S. 2018
X_Axis['VR', 'Device']: ['Average', 'Windows_10_Mixed_Reality_Headset', 'Sony_Playstation_VR', 'AR_headset', 'Lenovo_Star_Wars_Jedi_Challenges', 'HTC_Vive_VR_headset', 'Oculus_Rift_VR_headset', 'Samsung_Gear_VR', 'Google_Daydream_View', 'Google_Cardboard', 'Other_Smartphone_VR_headset']
Y_Axis['Average', 'session', 'time', 'in', 'minutes']: ['38.0', '49.5', '49.0', '46.5', '44.5', '43.5', '42.5', '35.5', '34.5', '24.5', '24.5']

gold: The statistic depicts the average session time of virtual reality/augmented reality devices in the United States as of 2018 . Users of Sony PlayStation VR spent 49 minutes on average in each VR session , according to the survey .
gold_template: The statistic depicts the templateXValue[0] templateYLabel[1] templateYLabel[2] of virtual reality/augmented templateXValue[1] devices in the templateTitle[5] as of templateTitleDate[0] . Users of templateXValue[2] spent templateYValue[2] templateYLabel[3] on templateXValue[0] in each templateXValue[2] templateYLabel[1] , according to the survey .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the VR/AR headsets average in the session competirion .  \\n From the chart we see that the Lenovo_Star_Wars_Jedi_Challenges VR made the VR/AR session by some margin , with only 24.5 Windows_10_Mixed_Reality_Headset and Average made a respectable 49.5 and 38.0 session , with Other_Smartphone_VR_headset and AR_headset not far behind , at 24.5 and 46.5 respectively .

Example 159:
titleEntities: {'Subject': ['Major'], 'Date': ['2017']}
title: Major asparagus producing countries worldwide 2017
X_Axis['Country']: ['China_mainland', 'Peru', 'Mexico', 'Germany', 'Spain', 'Italy', 'United_States_of_America', 'Japan', 'Thailand', 'Netherlands']
Y_Axis['Production', 'in', 'metric', 'tons']: ['7843162', '383098', '245681', '130881', '63433', '46419', '34100', '29981', '25000', '20800']

gold: This statistic depicts the global leading 10 asparagus producing countries in 2017 . In that year , China was the biggest producer of asparagus worldwide , producing approximately 7.8 million metric tons of asparagus . The U.S. production of asparagus amounted to about 685 thousand cwt in 2015 .
gold_template: This statistic depicts the global leading 10 templateTitle[1] templateTitle[2] templateTitle[3] in templateTitleDate[0] . In that year , templateXValue[0] was the biggest producer of templateTitle[1] templateTitle[4] , templateTitle[2] approximately templateYValue[max] templateScale templateYLabel[1] templateYLabel[2] of templateTitle[1] . The U.S. templateYLabel[0] of templateTitle[1] amounted to about 685 thousand cwt in 2015 .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in terms of the templateYLabel[0] of templateYLabel[1] with templateXValue[4] having the templateTitle[0] – templateYValue[max] templateYLabel[1] down to templateXValue[1] the least expored of the group at templateYValue[min] templateYLabel[1] . In between , we have Volata templateYValue[0] , templateXValue[last] templateYValue[last] , Zvevzda templateYValue[3] and templateXValue[2] templateYValue[2] .
generated: The chart shows the Major asparagus producing in terms of the Production of metric with Spain having the Major – 7843162 metric down to Peru the least expored of the group at 20800 metric .  In between , we have Volata 7843162 , Netherlands 20800 , Zvevzda 130881 and Mexico 245681 .

Example 160:
titleEntities: {'Subject': ['Toyota', 'EU'], 'Date': ['2019']}
title: Toyota 's market share of new car registrations in the EU 2019
X_Axis['Month']: ['Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18']
Y_Axis['Market', 'share']: ['4', '4.7', '5.1', '5.1', '4.6', '4.9', '4.6', '4.7', '4.6', '4.3', '4.4', '5', '4', '4.7', '5.1', '5.5', '4.3']

gold: The statistic shows Toyota 's share of new car registrations in the EU between August 2018 and December 2019 . In December 2019 , Toyota 's share of new car registrations in the EU dropped slightly but stood around 4 % percent . Toyota-branded vehicles are sold by the Toyota Motor Corporation , which is ranked among the largest automobile manufacturers in the world .
gold_template: The statistic shows templateTitleSubject[0] templateTitle[1] templateYLabel[1] of templateTitle[4] templateTitle[5] templateTitle[6] in the templateTitleSubject[1] between 2018 and templateTitleDate[0] . In templateTitleDate[0] , templateTitleSubject[0] templateTitle[1] templateYLabel[1] of templateTitle[4] templateTitle[5] templateTitle[6] in the templateTitleSubject[1] templateNegativeTrend slightly but stood around templateYValue[min] templateScale . Toyota-branded vehicles are sold by the templateTitleSubject[0] Motor Corporation , which is ranked among the largest automobile manufacturers in the world .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Toyota 's market in the share competirion .  \\n From the chart we see that the Aug_19 Month made the Toyota share by some margin , with only 4 .  Nov_19 and Dec_19 made a respectable 4.7 and 4 share , with Aug_18 and Sep_19 not far behind , at 4.3 and 5.1 respectively .

Example 161:
titleEntities: {'Subject': ['Daily'], 'Date': ['2018']}
title: Daily online video usage in selected countries 2018
X_Axis['Country']: ['Saudi_Arabia', 'Turkey', 'Brazil', 'New_Zealand', 'Australia', 'Mexico', 'Spain', 'Canada', 'United_States', 'South_Korea', 'France', 'Philippines', 'India', 'Germany', 'Japan', 'China', 'Indonesia', 'South_Africa', 'Nigeria']
Y_Axis['Share', 'of', 'respondents']: ['64', '64', '62', '61', '60', '56', '53', '50', '50', '44', '42', '34', '33', '32', '32', '30', '21', '19', '16']

gold: This statistic gives information on the share of internet users in selected countries who watch online videos every day as of January 2018 . During the survey , it was found that 50 percent of U.S. internet users watched online video content on a daily basis . Additionally , more than half of the internet users in Mexico watched online videos every day .
gold_template: This statistic gives information on the templateYLabel[0] of internet users in templateTitle[4] templateTitle[5] who watch templateTitle[1] videos every day as of templateTitleDate[0] . During the survey , it was found that templateYValue[7] templateScale of U.S. internet users watched templateTitle[1] templateTitle[2] content on a templateTitleSubject[0] basis . Additionally , more than half of the internet users in templateXValue[5] watched templateTitle[1] videos every day .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Daily online in Daily .  It shows Brazil was the Daily at just 16 degrees and Australia was the warmest at 64 degrees .  After Brazil , the next Daily online are Saudi_Arabia at 64 degrees , followed by Nigeria at 18 degrees , Turkey at 64 degrees and then New_Zealand at 61 degrees .

Example 162:
titleEntities: {'Subject': ['Number M A'], 'Date': ['2020']}
title: Number of M & A deals in the U.S. 2020 , by industry
X_Axis['Industry']: ['Commercial_services', 'Technology_services', 'Finance', 'Consumer_services', 'Producer_manufacturing', 'Distribution_services', 'Industrial_services', 'Health_services', 'Process_industries', 'Electronic_technology', 'Health_technology', 'Consumer_non-durables', 'Retail_trade', 'Transportation', 'Utilities', 'Consumer_durables', 'Non-energy_minerals', 'Communications', 'Energy_minerals', 'Government', 'Miscellaneous']
Y_Axis['Number', 'of', 'deals']: ['594', '543', '473', '234', '225', '197', '190', '157', '140', '130', '117', '95', '87', '80', '60', '58', '39', '36', '24', '5', '10']

gold: Between November 2019 and January 2020 , there were 594 M & A deals in the commercial services sector in the United States . The total number of M & A deals amounted to 3,494 in that period .
gold_template: Between 2019 and templateTitleDate[0] , there were templateYValue[max] templateTitleSubject[0] templateTitle[2] A templateYLabel[1] in the templateXValue[0] sector in the templateTitle[4] . The total templateYLabel[0] of templateTitleSubject[0] templateTitle[2] A templateYLabel[1] amounted to 3,494 in that period .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number M in Number M A .  It shows Finance was the Number at just 5 degrees and Producer_manufacturing was the warmest at 594 degrees .  After Finance , the next Number M are Commercial_services at 594 degrees , followed by Miscellaneous at 18 degrees , Technology_services at 543 degrees and then Consumer_services at 234 degrees .

Example 163:
titleEntities: {'Subject': ['Global'], 'Date': ['2014']}
title: Global opinion on governmental internet censorship 2014 , by region
X_Axis['Response']: ['Total', 'LATAM', 'Middle_East/Africa', 'BRIC', 'APAC', 'North_America', 'G-8_Countries', 'Europe']
Y_Axis['Share', 'of', 'respondents']: ['64', '78', '69', '66', '64', '60', '56', '54']

gold: This statistic presents the share of global internet users who are concerned about governments censoring the internet as of November 2014 , sorted by region . During the survey period it was found that 54 percent of internet users in Europe felt concerned about their governments censoring the internet . Overall , 64 percent of global internet users agreed with the statement .
gold_template: This statistic presents the templateYLabel[0] of templateTitleSubject[0] templateTitle[3] users who are concerned about governments censoring the templateTitle[3] as of templateTitleDate[0] , sorted templateTitle[6] templateTitle[7] . During the survey period it was found that templateYValue[min] templateScale of templateTitle[3] users in templateXValue[last] felt concerned about their governments censoring the templateTitle[3] . Overall , templateYValue[0] templateScale of templateTitleSubject[0] templateTitle[3] users agreed with the statement .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .
generated: This chart shows the Share of respondents made by the governmental .  \\n In the internet , the Global respondents were made by Middle_East/Africa , with 78 respondents .  \\n The Global opinion governmental were LATAM and APAC .

Example 164:
titleEntities: {'Subject': ['Number'], 'Date': ['2019']}
title: Number of operable nuclear reactor plants by country 2019
X_Axis['Country']: ['United_States', 'France', 'China', 'Japan', 'Russia', 'South_Korea', 'India', 'Canada', 'Ukraine', 'United_Kingdom', 'Sweden', 'Spain', 'Belgium', 'Germany', 'Czech_Republic', 'Switzerland', 'Pakistan', 'Slovakia', 'Hungary', 'Finland', 'Argentina', 'Mexico', 'Romania', 'South_Africa', 'Brazil', 'Bulgaria', 'Iran', 'Netherlands', 'Armenia', 'Slovenia']
Y_Axis['Number', 'of', 'reactors']: ['97', '58', '45', '37', '36', '24', '22', '19', '15', '15', '8', '7', '7', '7', '6', '5', '5', '4', '4', '4', '3', '2', '2', '2', '2', '2', '1', '1', '1', '1']

gold: The statistic shows the number of operable nuclear reactors as of June 2019 , by country . In the United Kingdom , 15 nuclear power reactors were in operation as of this time . Operable nuclear reactors are those connected to the grid .
gold_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] as of templateTitleDate[0] , templateTitle[5] templateXLabel[0] . In the templateXValue[0] templateXValue[9] , templateYValue[8] templateTitle[2] power templateYLabel[1] were in operation as of this time . templateTitle[1] templateTitle[2] templateYLabel[1] are those connected to the grid .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number operable in Number .  It shows China was the Number at just 1 degrees and Russia was the warmest at 97 degrees .  After China , the next Number operable are United_States at 97 degrees , followed by Slovenia at 18 degrees , France at 58 degrees and then Japan at 37 degrees .

Example 165:
titleEntities: {'Subject': ['Election'], 'Date': ['2016', '2016']}
title: Election 2016 : results for the popular vote
X_Axis['Candidate']: ['Hillary_Clinton', 'Donald_Trump']
Y_Axis['Number', 'of', 'popular', 'votes']: ['65853516', '62984825']

gold: This graph shows the preliminary results of the popular votes gained by the two leading candidates in the 2016 presidential election in the United States . Despite having won the Electoral College it appears Donald Trump will lose the popular vote with 60.37 million votes to Clinton 's 61.03 million .
gold_template: This graph shows the preliminary templateTitle[2] of the templateYLabel[1] templateYLabel[2] templatePositiveTrend by the two leading candidates in the templateTitleDate[0] presidential templateTitleSubject[0] in the country . Despite having won the Electoral College it appears templateXValue[last] will lose the templateYLabel[1] templateTitle[5] with 60.37 templateScale templateYLabel[2] to templateXValue[0] 's 61.03 templateScale .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the Election 2016 results , expressed in percent three different countries .  The Donald_Trump and Hillary_Clinton have similar Election 2016 gaps at around 20 % whilst Donald_Trump is doing a little better at 62984825 % .

Example 166:
titleEntities: {'Subject': ['Canada'], 'Date': ['2015']}
title: Causes of deforestation in Canada in 2015
X_Axis['Cause']: ['Agriculture', 'Resource_extraction', 'Urban_expansion_and_recreation', 'Forestry', 'Hydroelectric_development']
Y_Axis['Share', 'of', 'deforestation', 'causes']: ['41', '37', '12', '8', '1']

gold: This statistic shows the distribution of causes of deforestation in Canada in 2015 . Forty-one percent of deforestation in Canada in 2015 was caused by agriculture . Deforestation Deforestation is the intentional destruction of forested land for permanent reuse for agricultural , urban , industrial , or other non-forest operations .
gold_template: This statistic shows the distribution of templateYLabel[2] of templateYLabel[1] in templateTitleSubject[0] in templateTitleDate[0] . templateYValue[max] templateScale of templateYLabel[1] in templateTitleSubject[0] in templateTitleDate[0] was caused by templateXValue[0] . templateYLabel[1] is the intentional destruction of forested land for permanent reuse for agricultural , templateXValue[2] , industrial , or other non-forest operations .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] from templateXValue[0] to templateXValue[last] . \\n In templateXValue[0] the templateTitleSubject[0] saw templateYValue[0] templateYLabel[2] , in templateXValue[1] there were templateYValue[max] templateYLabel[2] , templateXValue[2] saw at least templateYValue[2] templateYLabel[2] , templateYValue[min] templateScale in templateXValue[idxmin(Y)] and templateYValue[last] in templateXValue[last] . templateXValue[idxmax(Y)] had the highest templateYLabel[0] of templateYLabel[2] and templateXValue[3] had the lowest .
generated: This chart shows the Share of deforestation causes at the Canada from Agriculture to Hydroelectric_development .  \\n In Agriculture the Canada saw 41 causes , in Resource_extraction there were 41 causes , Urban_expansion_and_recreation saw at least 12 causes , 1 % in Hydroelectric_development and 1 in Hydroelectric_development .  Agriculture had the highest Share of causes and Forestry had the lowest .

Example 167:
titleEntities: {'Subject': ['NFL', 'Twitter'], 'Date': ['2018']}
title: NFL teams - number of Twitter followers 2018
X_Axis['American', 'Football', 'Teams']: ['New_England_Patriots', 'Dallas_Cowboys', 'Pittsburgh_Steelers', 'Philadelphia_Eagles', 'Carolina_Panthers', 'Denver_Broncos', 'Seattle_Seahawks', 'Atlanta_Falcons', 'Green_Bay_Packers', 'San_Francisco_49ers', 'Houston_Texans', 'New_York_Giants', 'Chicago_Bears', 'Oakland_Raiders', 'Baltimore_Ravens', 'Detroit_Lions', 'New_Orleans_Saints', 'Washington_Redskins', 'Minnesota_Vikings', 'New_York_Jets', 'Kansas_City_Chiefs', 'Cleveland_Browns', 'Indianapolis_Colts', 'Miami_Dolphins', 'Buffalo_Bills', 'Arizona_Cardinals', 'Cincinnati_Bengals', 'San_Diego_Chargers', 'Tampa_Bay_Buccaneers', 'St._Louis_Rams', 'Tennessee_Titans', 'Jacksonville_Jaguars']
Y_Axis['Twitter', 'followers', 'in', 'millions']: ['4.28', '3.73', '3.33', '3.25', '2.95', '2.64', '2.32', '2.31', '2.21', '2.04', '1.82', '1.8', '1.66', '1.55', '1.44', '1.32', '1.31', '1.26', '1.24', '1.23', '1.14', '1.03', '0.98', '0.97', '0.95', '0.91', '0.81', '0.81', '0.75', '0.74', '0.71', '0.63']

gold: This statistic ranks the teams of the National Football League by the number of followers on Twitter , as of September 21 , 2018 . With about 4.28 million followers , the New England Patriots have the most followed NFL team account on Twitter . Twitter followers of NFL teams - additional information Twitter is used by the franchises of the National Football League to give fans regular news about their team , as well as in-play updates on their games .
gold_template: This statistic ranks the templateXLabel[2] of the National templateXLabel[1] League by the templateTitle[2] of templateYLabel[1] on templateYLabel[0] , as of 21 , templateTitleDate[0] . With about templateYValue[max] templateScale templateYLabel[1] , the templateXValue[0] have the most followed templateTitleSubject[0] team account on templateYLabel[0] . templateYLabel[0] templateYLabel[1] of templateTitleSubject[0] templateXLabel[2] - additional information templateYLabel[0] is used by the franchises of the National templateXLabel[1] League to give fans regular news about their team , as well as in-play updates on their games .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the NFL teams in NFL .  It shows Pittsburgh_Steelers was the NFL at just 0.63 degrees and Carolina_Panthers was the warmest at 4.28 degrees .  After Pittsburgh_Steelers , the next NFL teams are New_England_Patriots at 4.28 degrees , followed by Jacksonville_Jaguars at 18 degrees , Dallas_Cowboys at 3.73 degrees and then Philadelphia_Eagles at 3.25 degrees .

Example 168:
titleEntities: {'Subject': ['Growth'], 'Date': ['2014']}
title: Growth in travel to the most popular luxury travel destinations worldwide in 2014
X_Axis['Country']: ['Greece', 'Germany', 'United_Kingdom', 'France', 'Spain', 'Netherlands', 'Mexico', 'Canada', 'Italy', 'South_Africa']
Y_Axis['Year-over-year', 'travel', 'growth']: ['57', '31', '30', '23', '20', '18', '17', '9', '6', '-5']

gold: This statistic shows the growth in travel to the most popular luxury travel destinations worldwide as of August 2014 . Luxury travel to the United Kingdom grew by 30 percent in 2014 compared to the previous year .
gold_template: This statistic shows the templateYLabel[2] in templateYLabel[1] to the templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[1] templateTitle[6] templateTitle[7] as of templateTitleDate[0] . templateTitle[4] templateYLabel[1] to the templateXValue[2] templatePositiveTrend by templateYValue[2] templateScale in templateTitleDate[0] compared to the previous year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Growth travel in Growth .  It shows United_Kingdom was the Growth at just -5 degrees and Spain was the warmest at 57 degrees .  After United_Kingdom , the next Growth travel are Greece at 57 degrees , followed by South_Africa at 18 degrees , Germany at 31 degrees and then France at 23 degrees .

Example 169:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: U.S. exports - top trading partners 2018
X_Axis['Country']: ['Canada', 'Mexico', 'China', 'Japan', 'United_Kingdom', 'Germany', 'Korea_South', 'Netherlands', 'Brazil', 'Hong_Kong', 'France', 'Singapore', 'India', 'Belgium', 'Taiwan']
Y_Axis['Export', 'value', 'in', 'billion', 'U.S.', 'dollars']: ['298.7', '265.0', '120.3', '75.0', '66.2', '57.7', '56.3', '49.4', '39.5', '37.5', '36.3', '33.1', '33.1', '31.4', '30.2']

gold: This graph shows the largest trading partners for the United States in 2018 , by value of exported trade goods . In 2018 , the United States exported trade goods worth about 39.5 billion U.S. dollars to Brazil .
gold_template: This graph shows the largest templateTitle[3] templateTitle[4] for the templateXValue[4] States in templateTitleDate[0] , by templateYLabel[1] of exported trade goods . In templateTitleDate[0] , the templateXValue[4] States exported trade goods worth about templateYValue[8] templateScale templateYLabel[3] templateYLabel[4] to templateXValue[8] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the U.S. exports in U.S. It shows China was the U.S. at just 30.2 degrees and United_Kingdom was the warmest at 298.7 degrees .  After China , the next U.S. exports are Canada at 298.7 degrees , followed by Taiwan at 18 degrees , Mexico at 265.0 degrees and then Japan at 75.0 degrees .

Example 170:
titleEntities: {'Subject': ['Europe'], 'Date': ['2017']}
title: Leading food and beverage retailers of Europe 2017 , based on revenue
X_Axis['Company', '(Country', 'of', 'origin)']: ['Schwarz_Unternehmenstreuhand_KG_(Germany)', 'Aldi_Einkauf_GmbH_&_Co._oHG_(Germany)', 'Tesco_PLC_(UK)', 'Ahold_Delhaize_(formerly_Koninklijke_Ahold_N.V._and_Delhaize_Group_SA_[Netherlands])', 'Auchan_Holding_SA_(France)', 'Edeka_Group_(Germany)', 'Rewe_Combine_(Germany)', 'Casino_Guichard-Perrachon_S.A._(France)', 'Centres_Distributeurs_E._Leclerc_(France)_', 'Metro_AG_(Germany)', 'The_IKEA_Group_(INGKA_Holding_B.V.)_(Netherlands)', 'J_Sainsbury_plc_(UK)', 'LVMH_Moët_Hennessy-Louis_Vuitton_S.A._(France)', 'ITM_Developpement_International_(Intermarche;_France)_', 'Inditex_S.A._(Spain)', 'Migros-Genossenschafts_Bund_(Switzerland)_', 'Ceconomy_AG_(Germany)', 'Mercadona_SA_(Spain)', 'Coop_Group_(Switzerland)_', 'Wm_Morrison_Supermarkets_PLC_(UK)']
Y_Axis['Billion', 'U.S.', 'dollars']: ['111.77', '98.29', '73.96', '72.31', '58.61', '57.48', '49.71', '42.6', '41.54', '40.96', '37.43', '36.6', '33.29', '31.85', '28.89', '24.53', '24.43', '23.68', '22.52', '22.43']

gold: In 2018 , the German based Schwarz Gruppe was the leading food and beverage retailer from Europe and generated 111.77 billion U.S. dollars in revenue . The second largest retailer was also German . Aldi Einkauf GmbH & Ko .
gold_template: In 2018 , the German templateTitle[6] templateXValue[0] Gruppe was the templateTitle[0] templateTitle[1] and templateTitle[2] retailer from templateTitleSubject[0] and generated templateYValue[max] templateScale templateYLabel[1] templateYLabel[2] in templateTitle[7] . The second largest retailer was also German . templateXValue[1] Ko .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading food in Europe .  It shows Tesco_PLC_(UK) was the Leading at just 22.43 degrees and Auchan_Holding_SA_(France) was the warmest at 111.77 degrees .  After Tesco_PLC_(UK) , the next Leading food are Schwarz_Unternehmenstreuhand_KG_(Germany) at 111.77 degrees , followed by Wm_Morrison_Supermarkets_PLC_(UK) at 18 degrees , Aldi_Einkauf_GmbH_&_Co._oHG_(Germany) at 98.29 degrees and then Ahold_Delhaize_(formerly_Koninklijke_Ahold_N.V._and_Delhaize_Group_SA_[Netherlands]) at 72.31 degrees .

Example 171:
titleEntities: {'Subject': ['Middle East'], 'Date': ['2018']}
title: Middle East oil production by country 2018
X_Axis['Country']: ['Saudi_Arabia', 'Iran', 'Iraq', 'United_Arab_Emirates', 'Kuwait', 'Qatar', 'Oman', 'Other', 'Yemen', 'Syria']
Y_Axis['Oil', 'production', 'in', 'thousand', 'barrels', 'per', 'day']: ['12287', '4715', '4614', '3942', '3049', '1879', '978', '207', '68', '24']

gold: The countries in the Middle East are renowned for their vast oil reserves in the global market . While the largest importer of oil and petroleum is the United States , the leading producer of oil in the Middle East is Saudi Arabia with over 12 million barrels of oil produced per day as of 2018 . `` Global oil reserves and trade `` Besides Saudi Arabia , the United States imports petroleum from various countries around the world among which Canada is the largest exporter of petroleum having exported around 4.3 billion barrels of petroleum to the United States in 2018 .
gold_template: The countries in the templateTitleSubject[0] are renowned for their vast templateYLabel[0] reserves in the global market . While the largest importer of templateYLabel[0] and petroleum is the templateXValue[3] States , the leading producer of templateYLabel[0] in the templateTitleSubject[0] is templateXValue[0] with over templateYValue[max] templateScale templateYLabel[3] of templateYLabel[0] produced templateYLabel[4] templateYLabel[5] as of templateTitleDate[0] . `` Global templateYLabel[0] reserves and trade `` Besides templateXValue[0] , the templateXValue[3] States imports petroleum from various countries around the world among which Canada is the largest exporter of petroleum having exported around 4.3 templateScale templateYLabel[3] of petroleum to the templateXValue[3] States in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Middle East oil production the Oil of production they 've had .  \n It shows Saudi_Arabia has had 12287 production , Iran has had the Middle at 24 production , Iraq has had 4614 , United_Arab_Emirates has had 3942 , Kuwait has had the most production at 12287 and Syria has had 24 production .

Example 172:
titleEntities: {'Subject': ['Production'], 'Date': ['2018']}
title: Production of bananas worldwide by region 2018
X_Axis['Country']: ['Asia', 'Africa', 'South_America', 'Central_America', 'Caribbean', 'Oceania', 'Europe', 'Northern_America']
Y_Axis['Production', 'in', 'thousand', 'metric', 'tons']: ['62648.18', '20418.01', '18177.92', '10060.74', '2194.5', '1822.64', '411.28', '4.6']

gold: This statistic reflects the global banana production by region in 2018 . In Asia , some 62.6 million metric tons of bananas were produced in that year .
gold_template: This statistic reflects the global banana templateYLabel[0] templateTitle[3] templateTitle[4] in templateTitleDate[0] . In templateXValue[0] , some templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] of templateTitle[1] were produced in that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Production bananas worldwide by the Production of thousand they 've had .  \n It shows Asia has had 62648.18 thousand , Africa has had the Production at 4.6 thousand , South_America has had 18177.92 , Central_America has had 10060.74 , Caribbean has had the most thousand at 62648.18 and Northern_America has had 4.6 thousand .

Example 173:
titleEntities: {'Subject': ['PC'], 'Date': ['2015']}
title: Most played PC games 2015
X_Axis['Video', 'Game']: ['League_of_Legends', 'Counter-Strike:_Global_Offensive', 'Fallout_4', 'DOTA_2', 'World_of_Warcraft', 'World_of_Tanks', 'Hearthstone:_Heroes_of_Warcraft', 'Minecraft', 'Smite', 'Grand_Theft_Auto_V', 'Heroes_of_the_Storm', 'ARK:_Survival_Evolved', 'Guild_Wars_2', 'Star_Wars:The_Old_Republic', 'Diablo_III', 'StarCraft_II', 'Spider_Solitaire', 'Battlefield_4', 'Final_Fantasy_XIV_Online', 'Call_of_Duty:_Black_Ops_III']
Y_Axis['Share', 'of', 'playing', 'time']: ['22.92', '6.88', '5.78', '5.09', '4.82', '3.48', '2.14', '1.97', '1.3', '1.29', '1.16', '1.15', '1.12', '1.1', '1.08', '1.04', '0.89', '0.8', '0.73', '0.72']

gold: The statistic presents the most-played PC games on the online gaming platform Raptr in November 2015 , by share of total time played . According to Raptr 's blog , 4.82 percent of all time spent gaming on their platform in November 2015 was dedicated to playing World of Warcraft . In the fourth quarter of 2014 , World of Warcraft gained more than 10 million subscribers , mostly owing to 'Warlords of Draenor ' expansion release in November 2014 .
gold_template: The statistic presents the most-played templateTitleSubject[0] templateTitle[3] on the templateXValue[18] gaming platform Raptr in templateTitleDate[0] , by templateYLabel[0] of total templateYLabel[2] templateTitle[1] . According to Raptr 's blog , templateYValue[4] templateScale of all templateYLabel[2] spent gaming on their platform in templateTitleDate[0] was dedicated to templateYLabel[1] templateXValue[4] of templateXValue[4] . In the fourth quarter of 2014 , templateXValue[4] of templateXValue[4] templatePositiveTrend more than 10 templateScale subscribers , mostly owing to 'Warlords of Draenor ' expansion release in 2014 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most played in PC .  It shows Fallout_4 was the Most at just 0.72 degrees and World_of_Warcraft was the warmest at 22.92 degrees .  After Fallout_4 , the next Most played are League_of_Legends at 22.92 degrees , followed by Call_of_Duty:_Black_Ops_III at 18 degrees , Counter-Strike:_Global_Offensive at 6.88 degrees and then DOTA_2 at 5.09 degrees .

Example 174:
titleEntities: {'Subject': ['March'], 'Date': ['2', '2020']}
title: COVID-19 deaths worldwide as of March 2 , 2020 , by country
X_Axis['Country']: ['China', 'Iran_(Islamic_Republic_of)', 'Italy', 'Republic_of_Korea', 'International_conveyance_(Diamond_Princess)', 'Japan', 'France', 'Philippines', 'Australia', 'Thailand']
Y_Axis['Number', 'of', 'deaths']: ['2915', '54', '35', '22', '6', '6', '2', '1', '1', '1']

gold: As of March 2 , 2020 , the outbreak of the coronavirus disease ( COVID-19 ) had spread to six continents , and approximately 3,000 people had died after contracting the respiratory virus . The majority of the confirmed cases were located in China , where around 2,900 deaths had been reported . WHO raises global risk level Approximately 60 countries worldwide have been affected by the virus .
gold_template: As of templateTitleSubject[0] templateYValue[6] , templateTitleDate[0] , the outbreak of the coronavirus disease ( templateTitle[0] ) had spread to templateYValue[4] continents , and approximately 3,000 people had died after contracting the respiratory virus . The majority of the confirmed cases were located in templateXValue[0] , where around 2,900 templateYLabel[1] had been reported . WHO raises global risk level Approximately 60 countries templateTitle[2] have been affected templateTitle[6] the virus .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the COVID-19 deaths worldwide March the Number of deaths they 've had .  \n It shows China has had 2915 deaths , Iran_(Islamic_Republic_of) has had the COVID-19 at 1 deaths , Italy has had 35 , Republic_of_Korea has had 22 , International_conveyance_(Diamond_Princess) has had the most deaths at 2915 and Thailand has had 1 deaths .

Example 175:
titleEntities: {'Subject': ['Freedom House'], 'Date': ['2019']}
title: Freedom House Index : internet freedom in selected countries 2019
X_Axis['Country']: ['Iceland', 'Estonia', 'Canada', 'Germany', 'Australia', 'United_States', 'United_Kingdom', 'Armenia', 'France', 'Italy', 'Georgia', 'Japan', 'South_Africa', 'Hungary', 'Argentina', 'Kenya', 'Colombia', 'Philippines', 'Tunisia', 'Brazil', 'Angola', 'Nigeria', 'South_Korea', 'Ecuador', 'Kyrgyzstan', 'Mexico', 'Zambia', 'Malawi', 'Malaysia', 'Uganda', 'Singapore', 'Ukraine', 'India', 'Morocco', 'Lebanon', 'Indonesia', 'Sri_Lanka', 'Libya', 'The_Gambia', 'Jordan', 'Bangladesh', 'Cambodia', 'Zimbabwe', 'Rwanda', 'Azerbaijan', 'Turkey', 'Myanmar', 'Belarus', 'Thailand', 'Kazakhstan', 'Russia', 'Venezuela', 'Bahrain', 'Ethiopia', 'United_Arab_Emirates', 'Pakistan', 'Egypt', 'Uzbekistan', 'Saudi_Arabia', 'Sudan', 'Vietnam', 'Cuba', 'Syria', 'Iran', 'China']
Y_Axis['Index', 'points']: ['95', '94', '87', '80', '77', '77', '77', '76', '76', '75', '75', '73', '72', '72', '72', '68', '67', '66', '64', '64', '64', '64', '64', '61', '61', '60', '58', '57', '57', '56', '56', '56', '55', '54', '52', '51', '49', '49', '48', '47', '44', '43', '42', '41', '39', '37', '36', '35', '35', '32', '31', '30', '29', '28', '28', '26', '26', '26', '25', '25', '24', '22', '17', '15', '10']

gold: The statistic shows the degree of Internet freedom in selected countries worldwide . According to the Freedom House Index , China occupied the last place in internet freedom with 10 index points in 2019 . Estonia and Iceland were ranked first and second with 95 and 94 out of 100 index points respectively .
gold_template: The statistic shows the degree of templateTitle[3] templateTitleSubject[0] in templateTitle[5] templateTitle[6] worldwide . According to the templateTitleSubject[0] templateYLabel[0] , templateXValue[last] occupied the last place in templateTitle[3] templateTitleSubject[0] with templateYValue[min] templateYLabel[0] templateYLabel[1] in templateTitleDate[0] . templateXValue[1] and templateXValue[0] were ranked first and second with templateYValue[max] and templateYValue[1] out of 100 templateYLabel[0] templateYLabel[1] respectively .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Freedom House in Freedom House .  \n It demonstrates that Australia is the Freedom , with a Index of 95 points , while Canada is the coldest , with a Index of 10 points .

Example 176:
titleEntities: {'Subject': ['DVDs U.S.'], 'Date': ['2019']}
title: Top-selling DVDs in the U.S. in 2019
X_Axis['Movies']: ['The_Goonies', 'Aquaman', 'Bohemian_Rhapsody', 'Avengers:_Endgame', 'Captain_Marvel', 'A_Star_is_Born', 'How_to_Train_Your_Dragon:_The_Hidden_World', 'Hocus_Pocus', 'Matilda', 'John_Wick:_Chapter_3_-_Parabellum', 'Fantastic_Beasts:_The_Crimes_of_Grindelwald', 'Bumblebee', "Dr._Seuss'_The_Grinch", 'Pokemon:_Detective_Pikachu', 'Aladdin']
Y_Axis['Number', 'of', 'units', 'sold', 'in', 'thousands']: ['903.47', '868.93', '855.06', '848.49', '840.92', '832.1', '686.49', '656.63', '569.92', '567.68', '542.02', '531.96', '529.48', '509.33', '506.52']

gold: In 2019 , the top-selling DVD in the United States was 1985 movie 'The Goonies ' _ , which sold approximately 903.5 thousand copies in the U.S. that year . In second place was 'Aquaman ' with 868.93 thousand copies sold . The movie also ranked fourth in the 2019 DVD sales list based on consumer spending .
gold_template: In templateTitleDate[0] , the templateTitle[0] DVD in the templateTitle[2] was 1985 movie 'The templateXValue[0] ' _ , which templateYLabel[2] approximately templateYValue[max] thousand copies in the templateTitleSubject[0] that year . In second place was 'Aquaman ' with templateYValue[1] thousand copies templateYLabel[2] . The movie also ranked fourth in the templateTitleDate[0] DVD sales list based on consumer spending .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Top-selling DVDs in DVDs U.S. It shows Bohemian_Rhapsody was the Top-selling at just 506.52 degrees and Captain_Marvel was the warmest at 903.47 units .  After Bohemian_Rhapsody , the next Top-selling DVDs are The_Goonies at 903.47 degrees , followed by Aladdin at 18 degrees , Aquaman at 868.93 degrees and then Avengers:_Endgame at 848.49 degrees .

Example 177:
titleEntities: {'Subject': ['DDoS'], 'Date': ['2018']}
title: Leading source countries of DDoS attack traffic 2018
X_Axis['Country']: ['United_States', 'China', 'United_Kingdom', 'India', 'Spain', 'Russia', 'Brazil', 'Korea', 'Japan', 'Ecuador']
Y_Axis['Percentage', 'of', 'attack', 'traffic']: ['30', '16', '5', '4', '3', '3', '3', '3', '3', '2']

gold: The statistic shows the percentage of worldwide denial of service attack traffic between November 2017 and April 2018 , sorted by originating countries . During that period of time , 30 percent of DDoS attack traffic originated from IP addresses in the United States .
gold_template: The statistic shows the templateScale of worldwide denial of service templateYLabel[1] templateYLabel[2] between 2017 and templateTitleDate[0] , sorted by originating templateTitle[2] . During that period of time , templateYValue[max] templateScale of templateTitleSubject[0] templateYLabel[1] templateYLabel[2] originated from IP addresses in the templateXValue[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading source in DDoS .  It shows United_Kingdom was the Leading at just 2 degrees and Spain was the warmest at 30 degrees .  After United_Kingdom , the next Leading source are United_States at 30 degrees , followed by Ecuador at 18 degrees , China at 16 degrees and then India at 4 degrees .

Example 178:
titleEntities: {'Subject': ['National Basketball Association'], 'Date': ['1946', '2020']}
title: National Basketball Association all-time rebounding leaders 1946 to 2020
X_Axis['NBA', 'player']: ['Wilt_Chamberlain', 'Bill_Russell', 'Kareem_Abdul-Jabbar', 'Elvin_Hayes', 'Moses_Malone', 'Tim_Duncan', 'Karl_Malone', 'Robert_Parish', 'Kevin_Garnett', 'Nate_Thurmond', 'Walt_Bellamy', 'Wes_Unseld', 'Hakeem_Olajuwon', 'Dwight_Howard', "Shaquille_O'Neal", 'Buck_Williams', 'Jerry_Lucas', 'Bob_Petit', 'Charles_Barkley', 'Dikembe_Mutombo', 'Paul_Silas', 'Charles_Oakley', 'Dennis_Rodman', 'Kevin_Willis', 'Patrick_Ewing', 'Dirk_Nowitzki', 'Elgin_Baylor', 'Pau_Gasol', 'Dolph_Schayes', 'Bill_Bridges']
Y_Axis['Number', 'of', 'rebounds']: ['23924', '21620', '17440', '16279', '16212', '15091', '14968', '14715', '14662', '14464', '14241', '13769', '13748', '13587', '13099', '13017', '12942', '12849', '12546', '12359', '12357', '12546', '11954', '11901', '11607', '11489', '11463', '11305', '11256', '11054']

gold: Wilt Chamberlain is the all-time rebound leader of the National Basketball Association with a total of 23,924 rebounds in his career . The highest ranked player still active in the NBA is Dwight Howard of the Washington Wizards , who has a total of 13,587 assists to his name . Basketball legends In basketball , a rebound is defined as a player either retrieving the ball after a missed field goal or free throw or tipping in a missed shot on an offensive play .
gold_template: templateXValue[0] is the templateTitle[3] rebound leader of the templateTitleSubject[0] with a total of templateYValue[max] templateYLabel[1] in his career . The highest ranked templateXLabel[1] still active in the templateXLabel[0] is templateXValue[13] of the Washington Wizards , who has a total of templateYValue[13] assists to his name . templateTitleSubject[0] legends In templateTitleSubject[0] , a rebound is defined as a templateXLabel[1] either retrieving the ball after a missed field goal or free throw or tipping in a missed shot on an offensive play .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the National Basketball in National Basketball Association .  It shows Kareem_Abdul-Jabbar was the National at just 11054 degrees and Moses_Malone was the warmest at 23924 degrees .  After Kareem_Abdul-Jabbar , the next National Basketball are Wilt_Chamberlain at 23924 degrees , followed by Bill_Bridges at 18 degrees , Bill_Russell at 21620 degrees and then Elvin_Hayes at 16279 degrees .

Example 179:
titleEntities: {'Subject': ['Scottish Premiership', 'Scotland'], 'Date': []}
title: Scottish Premiership : average first-team player pay per year in Scotland in 2019/20
X_Axis['League']: ['Celtic', 'Rangers', 'Aberdeen', 'Hearts', 'Hibernian', 'Kilmarnock', 'St_Johnstone', 'Motherwell', 'Ross_County', 'St_Mirren', 'Livingston', 'Hamilton']
Y_Axis['Average', 'salary', 'in', 'thousand', 'GBP']: ['895.56', '649.77', '140.46', '137.94', '119.7', '68.41', '62.69', '59.3', '55.57', '48.62', '43.11', '41.15']

gold: The Scottish Premiership is the highest football league in Scotland . In the past 20 years , the Celtic FC and the Rangers FC have been the only two teams to win the league , which was only established in 2013 . Beforehand the highest league was the Scottish Premier League .
gold_template: The templateTitle[0] templateTitle[1] is the highest football templateXLabel[0] in templateTitleSubject[0] . In the past 20 years , the templateXValue[0] FC and the templateXValue[1] FC have been the only two teams to win the templateXLabel[0] , which was only established in 2013 . Beforehand the highest templateXLabel[0] was the templateTitle[0] Premier templateXLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Scottish Premiership in Scottish Premiership .  It shows Aberdeen was the Scottish at just 41.15 degrees and Hibernian was the warmest at 895.56 salary .  After Aberdeen , the next Scottish Premiership are Celtic at 895.56 degrees , followed by Hamilton at 18 degrees , Rangers at 649.77 degrees and then Hearts at 137.94 degrees .

Example 180:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: U.S. company data loss prevention methods 2017
X_Axis['Response']: ['Training_and_awareness_programs', 'Expanded_use_of_encryption', 'Endpoint_security_solutions', 'Identity_and_access_management_solutions', 'Additional_manual_procedures_and_controls', 'Data_loss_prevention_(DLP)_solutions', 'Security_intelligence_solutions', 'Other_system_control_practices', 'Security_certification_or_audit', 'Strenghtening_of_perimeter_controls']
Y_Axis['Share', 'of', 'respondents']: ['60', '55', '49', '44', '39', '36', '35', '26', '19', '16']

gold: This statistic presents a ranking of common data loss prevention controls and activities of organizations in the United States in 2017 . During the survey period , it was found that 35 percent of U.S. companies had implemented security intelligence solutions .
gold_template: This statistic presents a ranking of common templateXValue[5] templateXValue[4] and activities of organizations in the templateTitle[0] in templateTitleDate[0] . During the survey period , it was found that templateYValue[6] templateScale of templateTitleSubject[0] companies had implemented templateXValue[2] templateXValue[6] templateXValue[2] .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in terms of the templateYLabel[0] of templateYLabel[1] with templateXValue[4] having the templateTitle[0] – templateYValue[max] templateYLabel[1] down to templateXValue[1] the least expored of the group at templateYValue[min] templateYLabel[1] . In between , we have Volata templateYValue[0] , templateXValue[last] templateYValue[last] , Zvevzda templateYValue[3] and templateXValue[2] templateYValue[2] .
generated: The chart shows the U.S. company data in terms of the Share of respondents with Additional_manual_procedures_and_controls having the U.S. – 60 respondents down to Expanded_use_of_encryption the least expored of the group at 16 respondents .  In between , we have Volata 60 , Strenghtening_of_perimeter_controls 16 , Zvevzda 44 and Endpoint_security_solutions 49 .

Example 181:
titleEntities: {'Subject': ['ACSI'], 'Date': ['2019']}
title: ACSI - U.S. customer satisfaction with social media 2019
X_Axis['Platform']: ['Pinterest', 'YouTube', 'Wikipedia', 'Instagram', 'Snapchat', 'Twitter', 'LinkedIn', 'Tumblr', 'Facebook']
Y_Axis['ACSI', 'score', '(100-point', 'scale)']: ['80', '78', '74', '72', '71', '69', '69', '64', '63']

gold: This graph shows the American Customer Satisfaction Index ( ACSI ) of customer satisfaction with social media websites in 2019 . Overall , Pinterest scored the highest level of customer satisfaction with 80 index points . Facebook was ranked last with an index score rating of 63 / 100 index points .
gold_template: This graph shows the American templateTitle[2] templateTitle[3] Index ( templateYLabel[0] ) of templateTitle[2] templateTitle[3] templateTitle[4] templateTitle[5] templateTitle[6] websites in templateTitleDate[0] . Overall , templateXValue[0] scored the highest level of templateTitle[2] templateTitle[3] templateTitle[4] templateYValue[max] index points . templateXValue[last] was ranked last templateTitle[4] an index templateYLabel[1] rating of templateYValue[min] / 100 index points .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the ACSI U.S. customer in the satisfaction competirion .  \\n From the chart we see that the Snapchat Platform made the ACSI score by some margin , with only 63 .  YouTube and Pinterest made a respectable 78 and 80 score , with Facebook and Instagram not far behind , at 63 and 72 respectively .

Example 182:
titleEntities: {'Subject': ['NPA', 'India'], 'Date': ['2016', '2019']}
title: Gross NPA of private banks India 2016 to 2019
X_Axis['Fiscal', 'Year']: ['FY_2019', 'FY_2018', 'FY_2017']
Y_Axis['Value', 'in', 'trillion', 'Indian', 'rupees']: ['1.84', '1.86', '0.94']

gold: In fiscal year 2019 , the value of non-performing assets of private banks across India amounted to over 1.8 trillion Indian rupees . This was much lesser in fiscal year 2017 , amounting to about 9.3 billion rupees . Non-performing assets have posed a big problem for banks in India and experts point that this crisis had been long in the making .
gold_template: In templateXLabel[0] templateXLabel[1] templateXValue[0] , the templateYLabel[0] of non-performing assets of templateTitle[2] templateTitle[3] across templateTitleSubject[0] amounted to over templateYValue[0] templateScale templateYLabel[2] templateYLabel[3] . This was much lesser in templateXLabel[0] templateXLabel[1] templateXValue[last] , amounting to about 9.3 templateScale templateYLabel[3] . Non-performing assets have posed a big problem for templateTitle[3] in templateTitleSubject[0] and experts point that this crisis had been long in the making .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Gross NPA private in FY_2019 2016 compared with that in FY_2018 and the FY_2017 .  In FY_2019 there was a 1.86 trillion difference in the salaries of men and women .  In FY_2018 the difference was 0.94 trillion .

Example 183:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Most popular online dating apps in the U.S. 2019 , by audience size
X_Axis['Dating', 'App']: ['tinder', 'Bumble', 'POF_(main)', 'Match.com_(main)', 'OkCupid_(main)', 'Grindr', 'Hinge', 'Zoosk', 'MeetMe', 'Ashley_Madison']
Y_Axis['Audience', 'size', 'in', 'millions']: ['7.86', '5.03', '4.28', '1.95', '1.79', '1.64', '1.21', '0.91', '0.91', '0.85']

gold: As of September 2019 , Tinder reported in an U.S. mobile audience reach of 7.86 million users , making the app the most popular online dating app in the United States . Second-ranked Bumble had 5.03 million U.S. mobile users .
gold_template: As of templateTitleDate[0] , templateXValue[0] reported in an templateTitleSubject[0] mobile templateYLabel[0] reach of templateYValue[max] templateScale users , making the templateXLabel[1] the templateTitle[0] templateTitle[1] templateTitle[2] templateXLabel[0] templateXLabel[1] in the templateTitle[5] . Second-ranked templateXValue[1] had templateYValue[1] templateScale templateTitleSubject[0] mobile users .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most popular online in the dating competirion .  \\n From the chart we see that the OkCupid_(main) Dating made the Most size by some margin , with only 0.85 .  Bumble and tinder made a respectable 5.03 and 7.86 size , with Ashley_Madison and Match.com_(main) not far behind , at 0.85 and 1.95 respectively .

Example 184:
titleEntities: {'Subject': ['Most'], 'Date': ['2019']}
title: Most valuable sport team brands worldwide 2019
X_Axis['Sports', 'Teams', 'Worldwide']: ['Dallas_Cowboys', 'New_York_Yankees', 'Real_Madrid', 'FC_Barcelona', 'New_York_Knicks', 'Manchester_United', 'New_England_Patriots', 'Los_Angeles_Lakers', 'Golden_State_Warriors', 'New_York_Giants', 'Los_Angeles_Dodgers', 'Boston_Red_Sox', 'Los_Angeles_Rams', 'Washington_Redskins', 'Chicago_Cubs', 'San_Francisco_49ers', 'Bayern_Munich', 'San_Francisco_Giants', 'Chicago_Bulls', 'Chicago_Bears']
Y_Axis['Brand', 'value', 'in', 'billion', 'U.S.', 'dollars']: ['5.0', '4.6', '4.25', '4.02', '4.0', '3.81', '3.8', '3.7', '3.5', '3.3', '3.3', '3.2', '3.2', '3.1', '3.1', '3.05', '3.02', '3.0', '2.9', '2.9']

gold: The statistic shows a ranking of sports teams worldwide in 2019 according to brand value that was calculated by Forbes . The Dallas Cowboys are the most valuable sports team , with a value of five billion U.S. dollars .
gold_template: The statistic shows a ranking of templateXLabel[0] templateXLabel[1] templateXLabel[2] in templateTitleDate[0] according to templateYLabel[0] templateYLabel[1] that was calculated by Forbes . The templateXValue[0] are the templateTitleSubject[0] templateTitle[1] templateXLabel[0] templateTitle[3] , with a templateYLabel[1] of templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most valuable in Most .  It shows Real_Madrid was the Most at just 2.9 degrees and New_York_Knicks was the warmest at 5.0 degrees .  After Real_Madrid , the next Most valuable are Dallas_Cowboys at 5.0 degrees , followed by Chicago_Bears at 18 degrees , New_York_Yankees at 4.6 degrees and then FC_Barcelona at 4.02 degrees .

Example 185:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2014']}
title: U.S. consumers ' purchase frequency of cosmetic products 2014
X_Axis['Response']: ['Shampoos_and/or_conditioners', 'Facial/skin_care_products_(e.g._moisturizers_primers_specialty_cleansers)', 'Hair_styling_products', 'Sunscreen', 'Cosmetics_(e.g._bronzer_foundation_lip_gloss)', 'Non-sunscreen_products_with_SPF_protection_(e.g._lotions_lip_balm)', 'Hair_color', 'None_of_these']
Y_Axis['Share', 'of', 'respondents']: ['87', '48', '42', '41', '35', '29', '21', '8']

gold: This statistic presents the results of a survey among U.S. adult consumers . The survey was fielded online by Harris Interactive in June 2014 , asking the respondents which cosmetic products they purchase and regularly use . Some 42 percent of U.S. adults indicated that they purchase and use hair styling products on a regular basis .
gold_template: This statistic presents the results of a survey among templateTitleSubject[0] adult templateTitle[1] . The survey was fielded online by Harris Interactive in templateTitleDate[0] , asking the templateYLabel[1] which templateTitle[5] templateXValue[1] they templateTitle[3] and regularly use . Some templateYValue[2] templateScale of templateTitleSubject[0] adults indicated that they templateTitle[3] and use templateXValue[2] templateXValue[1] on a regular basis .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the U.S. consumers ' in the purchase competirion .  \\n From the chart we see that the Cosmetics_(e.g._bronzer_foundation_lip_gloss) Response made the U.S. respondents by some margin , with only 8 .  Facial/skin_care_products_(e.g._moisturizers_primers_specialty_cleansers) and Shampoos_and/or_conditioners made a respectable 48 and 87 respondents , with None_of_these and Sunscreen not far behind , at 8 and 41 respectively .

Example 186:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: U.S. - job growth 2018 , by state
X_Axis['State']: ['Nevada', 'Utah', 'Idaho', 'Arizona', 'Washington', 'Colorado', 'Florida', 'South_Carolina', 'Texas', 'California', 'Georgia', 'Oregon', 'North_Carolina', 'Tennessee', 'Oklahoma', 'West_Virginia', 'New_Mexico', 'Alabama', 'New_York', 'Pennsylvania', 'Michigan', 'Virginia', 'Arkansas', 'Montana', 'South_Dakota', 'District_of_Columbia', 'Indiana', 'Delaware', 'New_Jersey', 'Illinois', 'Kansas', 'Massachussets', 'New_Hampshire', 'Wisconsin', 'Minnesota', 'Maine', 'Iowa', 'Maryland', 'Wyoming', 'North_Dakota', 'Ohio', 'Louisiana', 'Hawaii', 'Kentucky', 'Missouri', 'Rhode_Island', 'Nebraska', 'Mississippi', 'Vermont', 'Connecticut', 'Alaska']
Y_Axis['Growth', 'rate']: ['3.4', '3.2', '3.1', '2.8', '2.6', '2.4', '2.4', '2.4', '2.3', '2', '1.9', '1.8', '1.7', '1.6', '1.5', '1.5', '1.3', '1.2', '1.1', '1.1', '1.1', '1.1', '1.1', '1.1', '1.1', '1', '1', '1', '0.9', '0.9', '0.9', '0.9', '0.8', '0.8', '0.8', '0.7', '0.7', '0.7', '0.7', '0.6', '0.6', '0.5', '0.5', '0.5', '0.5', '0.5', '0.4', '0.3', '0.2', '0.1', '-0.6']

gold: This statistic shows the growth in jobs in the United States from 2017 to 2018 , by state . In 2018 , the state of Nevada was ranked first with the job growth of 3.4 percent .
gold_template: This statistic shows the templateYLabel[0] in jobs in the templateTitle[0] from 2017 to templateTitleDate[0] , templateTitle[4] templateXLabel[0] . In templateTitleDate[0] , the templateXLabel[0] of templateXValue[0] was ranked first with the templateTitle[1] templateYLabel[0] of templateYValue[max] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale .
generated: This chart shows the U.S. job in U.S. It shows Idaho was the U.S. at just -0.6 degrees and Washington was the warmest at 3.4 % .  After Idaho , the next U.S. job are Nevada at 3.4 % , followed by Alaska at 18 % .

Example 187:
titleEntities: {'Subject': ['Play Q3'], 'Date': ['2019']}
title: Google Play : number of available gaming apps as of Q3 2019
X_Axis['Quarter']: ["Q1_'15", "Q2_'15", "Q3_'15", "Q4_'15", "Q1_'16", "Q2_'16", "Q3_'16", "Q4_'16", "Q1_'17", "Q2_'17", "Q3_'17", "Q4_'17", "Q1_'18", "Q2_'18", "Q3_'18", "Q4_'18", "Q1_'19", "Q2_'19", "Q3_'19"]
Y_Axis['Number', 'of', 'available', 'apps']: ['290287', '315032', '343326', '380233', '432326', '472919', '512223', '515268', '536977', '573808', '605150', '647488', '677560', '501442', '315418', '288848', '327491', '336508', '349563']

gold: This statistic gives information on the number of available gaming apps in the Google Play app store . As of the third quarter of 2019 , approximately 349,563 mobile gaming apps were available , representing a 3.88 percent increase compared to the previous quarter .
gold_template: This statistic gives information on the templateYLabel[0] of templateYLabel[1] templateTitle[4] templateYLabel[2] in the templateTitle[0] templateTitleSubject[0] app store . As of the third templateXLabel[0] of templateTitleDate[0] , approximately templateYValue[last] mobile templateTitle[4] templateYLabel[2] were templateYLabel[1] , representing a 3.88 templateScale templatePositiveTrend compared to the previous templateXLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Google Play in Play Q3 .  It shows Q3_'15 was the Google at just 288848 degrees and Q1_'16 was the warmest at 677560 degrees .  After Q3_'15 , the next Google Play are Q1_'15 at 290287 degrees , followed by Q3_'19 at 18 degrees , Q2_'15 at 315032 degrees and then Q4_'15 at 380233 degrees .

Example 188:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Distribution of investment fund assets in the U.S. 2018 , by type
X_Axis['Type', 'Of', 'Fund']: ['Domestic_equity_funds', 'Bond_funds', 'World_equity_funds', 'Money_market_funds', 'Hybrid_and_other_funds']
Y_Axis['Share', 'of', 'mutual', 'fund', 'assets']: ['41', '22', '15', '14', '7']

gold: The statistic presents the distribution of mutual fund and ETF assets in the United States in 2018 , by fund type . Domestic equity funds constituted 41 percent of the mutual fund and ETF assets in the United States in 2018 .
gold_template: The statistic presents the templateTitle[0] of templateYLabel[1] templateXLabel[1] and ETF templateYLabel[3] in the templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateXLabel[1] templateXLabel[0] . templateXValue[0] constituted templateYValue[max] templateScale of the templateYLabel[1] templateXLabel[1] and ETF templateYLabel[3] in the templateTitle[4] in templateTitleDate[0] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Share of mutual fund at the U.S. street .  \\n The highest Share was 41 in the Money_market_funds Type followed by 22 % in the Bond_funds Type , 41 % in Money_market_funds and finally 7 % in Hybrid_and_other_funds .

Example 189:
titleEntities: {'Subject': ['Abarth', 'United Kingdom', 'UK'], 'Date': ['2016', '2019']}
title: Car sales by Abarth in the United Kingdom ( UK ) 2016 to 2019
X_Axis['Month']: ['Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18', 'Jul_18', 'Jun_18', 'May_18', 'Apr_18', 'Mar_18', 'Feb_18', 'Jan_18', 'Dec_17', 'Nov_17', 'Oct_17', 'Sep_17', 'Aug_17', 'Jul_17', 'Jun_17', 'May_17', 'Apr_17', 'Mar_17', 'Feb_17', 'Jan_17', 'Dec_16', 'Nov_16', 'Oct_16', 'Sep_16', 'Aug_16', 'Jul_16']
Y_Axis['Units', 'sold']: ['165', '155', '240', '662', '118', '221', '258', '185', '212', '867', '105', '260', '445', '344', '324', '987', '187', '305', '542', '612', '358', '1107', '141', '279', '272', '366', '303', '780', '152', '275', '438', '341', '213', '948', '103', '223', '276', '291', '274', '805', '135', '180']

gold: This statistic shows the monthly amount of cars sold by Abarth in the United Kingdom ( UK ) between July 2016 and December 2019 . Peaks in registration numbers were recorded in March and September of each year , which was due to the issuing of license plates by the Driver & Vehicle Licensing Agency ( DVLA ) in those months . In July 2019 , 221 new Abarth cars had been sold .
gold_template: This statistic shows the monthly amount of cars templateYLabel[1] templateTitle[2] templateTitleSubject[0] in the templateTitleSubject[1] ( templateTitleSubject[2] ) between templateTitleDate[min] and templateTitleDate[max] . Peaks in registration numbers were recorded in and of each year , which was due to the issuing of license plates templateTitle[2] the Driver & Vehicle Licensing Agency ( DVLA ) in those months . In templateTitleDate[max] , templateYValue[5] new templateTitleSubject[0] cars had been templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Car sales in Abarth .  It shows Oct_19 was the Car at just 103 degrees and Aug_19 was the warmest at 1107 degrees .  After Oct_19 , the next Car sales are Dec_19 at 165 degrees , followed by Jul_16 at 18 degrees , Nov_19 at 155 degrees and then Sep_19 at 662 degrees .

Example 190:
titleEntities: {'Subject': ['R D'], 'Date': ['2018']}
title: Pharma company ranking based on R & D for developing countries 2018
X_Axis['Month']: ['GlaxoSmithKline_plc', 'Merck_KGaA', 'Novartis_AG', 'Johnson_&_Johnson', 'Sanofi', 'Eisai_Co._Ltd.', 'Takeda_Pharmaceutical_Co.', 'Daiichi_Sankyo_Co._Ltd.', 'Bayer_AG', 'Novo_Nordisk_A/S', 'AstraZeneca_plc', 'Astellas_Pharma_Inc.', 'AbbVie_Inc.', 'Pfizer_Inc.', 'Roche_Holding_Ltd', 'Merck_&_Co._Inc.', 'Boehringer-Ingelheim_GmbH', 'Bristol-Myers_Squibb_Co.', 'Gilead_Sciences_Inc.', 'Eli_Lilly_&_Co.']
Y_Axis['Indicator', 'score', 'from', '1', '(lowest)', 'to', '5', '(highest)']: ['4.0', '3.69', '3.55', '3.19', '2.83', '2.8', '2.8', '2.71', '2.14', '2.09', '2.05', '2.01', '1.98', '1.9', '1.84', '1.78', '1.73', '1.56', '1.43', '0.88']

gold: This statistic depicts a pharmaceutical company ranking based on R & D for developing countries in 2018 , according to the Access to Medicine Index 2018 . In that year , the leading company concerning research and development for these markets was GlaxoSmithKline with an indicator score of four points . The Access to Medicine Index is an independent initiative that ranks the world 's 20 largest companies according to their efforts to make their products more available , affordable and accessible in developing countries , highlighting policy and practice that either facilitate or hinder access to medicine .
gold_template: This statistic depicts a templateXValue[6] templateTitle[1] templateTitle[2] templateTitle[3] on templateTitleSubject[0] templateXValue[3] templateTitleSubject[0] templateTitle[7] templateTitle[8] templateTitle[9] in templateTitleDate[0] , according to the Access to Medicine Index templateTitleDate[0] . In that year , the leading templateTitle[1] concerning research and development templateTitle[7] these markets was templateXValue[0] with an templateYLabel[0] templateYLabel[1] of templateYValue[max] points . The Access to Medicine Index is an independent initiative that ranks the world 's 20 largest companies according to their efforts to make their products more available , affordable and accessible in templateTitle[8] templateTitle[9] , highlighting policy and practice that either facilitate or hinder access to medicine .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Pharma company in R D .  It shows Novartis_AG was the Pharma at just 0.88 degrees and Sanofi was the warmest at 4.0 degrees .  After Novartis_AG , the next Pharma company are GlaxoSmithKline_plc at 4.0 degrees , followed by Eli_Lilly_&_Co. at 18 degrees , Merck_KGaA at 3.69 degrees and then Johnson_&_Johnson at 3.19 degrees .

Example 191:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Most used housewrap brands in the U.S. 2018
X_Axis['Brand']: ['Tyvek_(Dupont)', 'Typar_(Fiberweb)', 'James_Hardie', 'Weathermate_(Dow)', 'Pinkwrap_(Owens_Corning)', 'Benjamin_Obdyke', 'Protecto_Wrap', 'Henry_Blueskin', 'Poly-Wall', 'DELTA-DRY_(Cosella_Dorken)', 'CertaWrap_(CertainTeed)', 'GreenGuard_(Pactiv)', 'None_of_these']
Y_Axis['Share', 'of', 'respondents']: ['57.4', '13', '6.1', '2.6', '1.7', '1.7', '1.7', '1.7', '1.7', '0.9', '0.9', '0.9', '9.6']

gold: This statistic depicts housewrap brands used the most by U.S. construction firms in 2018 . The survey revealed that 57.4 percent of the respondents used Tyvek ( DuPont ) brand housewrap the most .
gold_template: This statistic depicts templateTitle[2] templateTitle[3] templateTitle[1] the templateTitle[0] by templateTitleSubject[0] construction firms in templateTitleDate[0] . The survey revealed that templateYValue[max] templateScale of the templateYLabel[1] templateTitle[1] templateXValue[0] ( DuPont ) templateXLabel[0] templateTitle[2] the templateTitle[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most used in U.S. It shows James_Hardie was the Most at just 0.9 degrees and Pinkwrap_(Owens_Corning) was the warmest at 57.4 respondents .  After James_Hardie , the next Most used are Tyvek_(Dupont) at 57.4 degrees , followed by None_of_these at 18 degrees , Typar_(Fiberweb) at 13 degrees and then Weathermate_(Dow) at 2.6 degrees .

Example 192:
titleEntities: {'Subject': ['PC'], 'Date': ['2019']}
title: Global market share held by PC vendors 2019
X_Axis['Brand']: ['Lenovo', 'HP_Inc', 'Dell', 'Apple', 'Acer', 'Asus', 'Others']
Y_Axis['Share', 'of', 'shipments']: ['24.1', '22.2', '16.8', '7', '5.7', '5.5', '18.7']

gold: The overall market leader in the global personal computer market in 2019 was Lenovo with a market share of 24.1 percent with Hewlett Packard a close second with a 22.2 percent share . In terms of unit sales , Lenovo had almost 63 million shipments , while HP had around 58 million shipments . With the overall technology sector moving into a direction centered more on software and services , the PC hardware market has declined over the past years .
gold_template: The overall templateTitle[1] leader in the templateTitle[0] personal computer templateTitle[1] in templateTitleDate[0] was templateXValue[0] with a templateTitle[1] templateYLabel[0] of templateYValue[max] templateScale with Hewlett Packard a close second with a templateYValue[1] templateScale templateYLabel[0] . In terms of unit sales , templateXValue[0] had almost 63 templateScale templateYLabel[1] , while templateXValue[1] had around 58 templateScale templateYLabel[1] . With the overall technology sector moving into a direction centered more on software and services , the templateTitleSubject[0] hardware templateTitle[1] has declined over the past years .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Share of shipments made by share in a held by .  \\n From the chart we see that the Dell Brand was the Global market Brand in the by with 24.1 shipments .  The next Brand to make the most shipments was the Apple Brand with 7 shipments closely followed by the Others Brand with 18.7 shipments .

Example 193:
titleEntities: {'Subject': ['Leading'], 'Date': ['2017']}
title: Leading uranium consuming countries worldwide 2017
X_Axis['Country']: ['United_States', 'France', 'China', 'Russia', 'South_Korea', 'Ukraine', 'United_Kingdom', 'Canada', 'Germany', 'Spain']
Y_Axis['Consumption', 'in', 'thousand', 'metric', 'tons']: ['19.0', '9.5', '8.29', '5.38', '4.73', '1.94', '1.77', '1.59', '1.48', '1.28']

gold: This statistic shows the leading ten countries worldwide based on uranium consumption in 2017 . In that year , the United States was the largest uranium consumer worldwide , using a total of almost 19,000 metric tons of uranium . Uranium consumption worldwide Uranium is a heavy metal that occurs in many rocks as well as in sea water .
gold_template: This statistic shows the templateTitleSubject[0] templateYValue[1] templateTitle[3] templateTitle[4] based on templateTitle[1] templateYLabel[0] in templateTitleDate[0] . In that year , the templateXValue[0] was the largest templateTitle[1] consumer templateTitle[4] , using a total of almost templateYValue[max] templateYLabel[2] templateYLabel[3] of templateTitle[1] . templateTitle[1] templateYLabel[0] templateTitle[4] templateTitle[1] is a heavy metal that occurs in many rocks as well as in sea water .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Leading uranium consuming countries the Consumption of thousand they 've had .  \n It shows United_States has had 19.0 thousand , France has had the Leading at 1.28 thousand , China has had 8.29 , Russia has had 5.38 , South_Korea has had the most thousand at 19.0 and Spain has had 1.28 thousand .

Example 194:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Important features of music streaming services in the U.S. 2018
X_Axis['Response']: ['The_variety_of_music_available', 'Low_price_point', 'The_ability_to_listen_on_multiple_divices', 'Clean_user_interface', 'Good_algorithms_to_find_new_music', 'The_ability_to_combine_your_music_library_with_your_streaming_service_library', 'The_ability_to_stream_on_smart_home_devices', 'Curated_playlists', 'Artist_exclusives']
Y_Axis['Share', 'of', 'respondents']: ['81', '80', '68', '66', '58', '64', '57', '52', '46']

gold: This statistic presents data on the most important features of music streaming services among adults in the United States as of March 2018 . During a survey , 81 percent of respondents stated that the variety of music available was the most important feature of music streaming services .
gold_template: This statistic presents data on the most templateTitle[0] templateTitle[1] of templateXValue[0] templateXValue[5] templateTitle[4] among adults in the templateTitle[5] as of templateTitleDate[0] . During a survey , templateYValue[max] templateScale of templateYLabel[1] stated that the templateXValue[0] of templateXValue[0] was the most templateTitle[0] feature of templateXValue[0] templateXValue[5] templateTitle[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Important features music in the streaming competirion .  \\n From the chart we see that the Good_algorithms_to_find_new_music Response made the Important respondents by some margin , with only 46 .  Low_price_point and The_variety_of_music_available made a respectable 80 and 81 respondents , with Artist_exclusives and Clean_user_interface not far behind , at 46 and 66 respectively .

Example 195:
titleEntities: {'Subject': ['World Series'], 'Date': ['1903', '2019']}
title: MLB : World Series championships won by team 1903 to 2019
X_Axis['Team']: ['New_York_Yankees', 'St._Louis_Cardinals', 'Boston_Red_Sox', 'New_York_Giants', 'Philadelphia_Athletics', 'Pittsburgh_Pirates', 'Los_Angeles_Dodgers', 'Cincinnati_Reds', 'Detroit_Tigers', 'Oakland_Athletics', 'Baltimore_Orioles', 'Chicago_White_Sox', 'San_Francisco_Giants', 'Chicago_Cubs', 'Cleveland_Indians', 'Florida_Marlins', 'Minnesota_Twins', 'New_York_Mets', 'Philadelphia_Phillies', 'Toronto_Blue_Jays', 'Kansas_City_Royals', 'Houston_Astros', 'Anaheim_Angels', 'Arizona_Diamondbacks', 'Atlanta_Braves', 'Boston_Braves', 'Brooklyn_Dodgers', 'Milwaukee_Braves', 'Washington_Senators', 'Washington_Nationals']
Y_Axis['Number', 'of', 'World', 'Series', 'won']: ['27', '11', '9', '5', '5', '5', '5', '5', '4', '4', '3', '3', '3', '3', '2', '2', '2', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1']

gold: The New York Yankees are one of the most recognisable and valuable sports brands on the planet , no doubt in part due to their success on the baseball field . The New York franchise has won the World Series championships a record 27 times , with their closest rivals in terms of titles , the St. Louis Cardinals , having lifted the trophy 11 times . However , the Yankees fans have been starved of success in recent years as the team 's last World Series title came back in 2009 .
gold_template: The templateXValue[0] are templateYValue[min] of the most recognisable and valuable sports brands on the planet , no doubt in part due to their success on the baseball field . The templateXValue[0] franchise has templateYLabel[3] the templateYLabel[1] templateYLabel[2] templateTitle[3] a record templateYValue[max] times , with their closest rivals in terms of titles , the templateXValue[1] , having lifted the trophy templateYValue[1] times . However , the templateXValue[0] fans have been starved of success in recent years as the templateXLabel[0] 's last templateYLabel[1] templateYLabel[2] title came back in 2009 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the MLB World Series in the championships competirion .  \\n From the chart we see that the Philadelphia_Athletics Team made the MLB World by some margin , with only 1 .  St._Louis_Cardinals and New_York_Yankees made a respectable 11 and 27 World , with Washington_Nationals and New_York_Giants not far behind , at 1 and 5 respectively .

Example 196:
titleEntities: {'Subject': ['December'], 'Date': ['2019', '2019']}
title: Diesel price per liter in selected countries - December 2019
X_Axis['Country']: ['United_Kingdom', 'Italy', 'France', 'Germany', 'Spain', 'Japan', 'Canada', 'United_States']
Y_Axis['Price', 'per', 'liter', 'in', 'U.S.', 'dollars']: ['1.7', '1.64', '1.62', '1.41', '1.36', '1.18', '0.98', '0.81']

gold: In December 2019 , the diesel price per liter in the United States stood at 0.807 U.S. dollars per liter . In the United Kingdom in the same month , the price stood at 1.704 U.S. dollars per liter . This data concerns the price of automotive diesel ( for non-commercial use ) per liter in selected countries .
gold_template: In templateTitleSubject[0] templateTitleDate[0] , the templateTitle[0] templateYLabel[0] templateYLabel[1] templateYLabel[2] in the templateXValue[0] templateXValue[last] stood at 0.807 templateYLabel[3] templateYLabel[4] templateYLabel[1] templateYLabel[2] . In the templateXValue[0] in the same month , the templateYLabel[0] stood at 1.704 templateYLabel[3] templateYLabel[4] templateYLabel[1] templateYLabel[2] . This data concerns the templateYLabel[0] of automotive templateTitle[0] ( for non-commercial use ) templateYLabel[1] templateYLabel[2] in templateTitle[4] templateTitle[5] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Diesel price per liter the Price of per they 've had .  \n It shows United_Kingdom has had 1.7 per , Italy has had the Diesel at 0.81 per , France has had 1.62 , Germany has had 1.41 , Spain has had the most per at 1.7 and United_States has had 0.81 per .

Example 197:
titleEntities: {'Subject': ['Annual'], 'Date': ['2019']}
title: Annual incomes of highest-paid celebrities 2019
X_Axis['Celebrity']: ['Taylor_Swift', 'Kylie_Jenner', 'Kanye_West', 'Lionel_Messi', 'Ed_Sheeran', 'Cristiano_Ronaldo', 'Neymar', 'The_Eagles', 'Dr._Phil_McGraw', 'Canelo_Alvarez']
Y_Axis['Income', 'in', 'million', 'U.S.', 'dollars']: ['185', '170', '150', '127', '110', '109', '105', '100', '95', '94']

gold: Leading the ranking of highest-paid celebrities between June 2018 and June 2019 is Taylor Swift , with an annual income of 185 million U.S. dollars . Following closely behind are Kylie Jenner and Kanye West , with 170 and 150 million dollars in earnings respectively . Taylor Swift and Kylie Jenner were the highest paid women in entertainment in 2019 , beating the likes of J.K. Rowling , Kim Kardashian West and Celine Dion .
gold_template: Leading the ranking of templateTitle[2] templateTitle[3] between 2018 and templateTitleDate[0] is templateXValue[0] , with an templateTitleSubject[0] templateYLabel[0] of templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] . Following closely behind are templateXValue[1] and templateXValue[2] , with templateYValue[1] and templateYValue[2] templateScale templateYLabel[3] in earnings respectively . templateXValue[0] and templateXValue[1] were the highest paid women in entertainment in templateTitleDate[0] , beating the likes of J.K. Rowling , Kim Kardashian templateXValue[2] and Celine Dion .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Annual incomes highest-paid in the celebrities competirion .  \\n From the chart we see that the Ed_Sheeran Celebrity made the Annual million by some margin , with only 94 .  Kylie_Jenner and Taylor_Swift made a respectable 170 and 185 million , with Canelo_Alvarez and Lionel_Messi not far behind , at 94 and 127 respectively .

Example 198:
titleEntities: {'Subject': ['Iran'], 'Date': ['2017']}
title: Main export partners of Iran 2017
X_Axis['Country']: ['Japan', 'Italy', 'Turkey', 'South_Korea', 'India', 'China']
Y_Axis['Share', 'in', 'total', 'exports']: ['5.3', '5.7', '11.1', '11.4', '15.1', '27.5']

gold: This statistic shows Iran 's main export partners in 2017 , sorted by their share in total exports . In 2017 , Iran 's main export partner was China with a share of 27.5 percent in all exports .
gold_template: This statistic shows templateTitleSubject[0] 's templateTitle[0] templateTitle[1] templateTitle[2] in templateTitleDate[0] , sorted by their templateYLabel[0] in templateYLabel[1] templateYLabel[2] . In templateTitleDate[0] , templateTitleSubject[0] 's templateTitle[0] templateTitle[1] partner was templateXValue[last] with a templateYLabel[0] of templateYValue[max] templateScale in all templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Main export partners Iran the Share of total they 've had .  \n It shows Japan has had 5.3 total , Italy has had the Main at 5.3 total , Turkey has had 11.1 , South_Korea has had 11.4 , India has had the most total at 27.5 and China has had 27.5 total .

Example 199:
titleEntities: {'Subject': ['Netherlands'], 'Date': ['2018']}
title: Leading Youtubers from the Netherlands based on subscribers 2018
X_Axis['Month']: ['Trap_City', 'NikkieTutorials', 'Martin_Garrix', 'Kwebbelkop', 'Jelly', 'Hardwell', 'Armada_Music', 'saskiasdansschool', 'NiceNienke', 'Tiësto']
Y_Axis['Number', 'of', 'subscribers', 'in', 'thousands']: ['9333.53', '8883.0', '8102.89', '7898.74', '7643.67', '4084.03', '3261.56', '3032.43', '2622.09', '2485.82']

gold: 'Music channel Trap City had more than nine million subscriptions in April 2018 , making it the most subscribed YouTube channel that comes from the Netherlands . The ranking also suggests that Dutch EDM artists or channels are popular to subscribe to , with entries for DJs Martin Garrix ( 3rd in this ranking ) , Hardwell ( 6th ) and Tiësto ( 10th ) , as well as dance label Armada Music ( 7th ) . Note , however , that the numbers provided here concern worldwide subscribers .
gold_template: 'Music channel templateXValue[0] had more than templateYValue[max] templateScale subscriptions in templateTitleDate[0] , making it the most subscribed YouTube channel that comes templateTitle[2] the templateTitleSubject[0] . The ranking also suggests that Dutch EDM artists or channels are popular to subscribe to , with entries for DJs templateXValue[2] ( 3rd in this ranking ) , templateXValue[5] ( 6th ) and templateXValue[last] ( 10th ) , as well as dance label templateXValue[6] ( 7th ) . Note , however , that the numbers provided here concern worldwide templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading Youtubers from in the Netherlands competirion .  \\n From the chart we see that the Jelly Month made the Leading subscribers by some margin , with only 2485.82 .  NikkieTutorials and Trap_City made a respectable 8883.0 and 9333.53 subscribers , with Tiësto and Kwebbelkop not far behind , at 2485.82 and 7898.74 respectively .

Example 200:
titleEntities: {'Subject': ['FOMO'], 'Date': ['2013', '2013']}
title: Percentage of U.S. social networks who suffer from FOMO as of June 2013
X_Axis['Response']: ['Suffer_from_FOMO', "Don't_suffer_from_FOMO"]
Y_Axis['Share', 'of', 'respondents']: ['56', '44']

gold: This statistic provides information on the share of U.S. social networkers who are afraid of missing something such as an event , news or important status updates if they do n't keep an eye on their social networks . During a survey in June 2013 , it was found that 56 percent of U.S. social network users suffered from the fear of missing out , also known as FOMO .
gold_template: This statistic provides information on the templateYLabel[0] of templateTitle[1] templateTitle[2] networkers templateTitle[4] are afraid of missing something such as an event , news or important status updates if they do n't keep an eye on their templateTitle[2] templateTitle[3] . During a survey in templateTitle[8] templateTitleDate[0] , it was found that templateYValue[max] templateScale of templateTitle[1] templateTitle[2] network users suffered templateXValue[0] the fear of missing out , also known as templateXValue[0] .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the Percentage U.S. social , expressed in percentage three different countries .  The Don't_suffer_from_FOMO and Suffer_from_FOMO have similar Percentage U.S. gaps at around 20 % whilst Don't_suffer_from_FOMO is doing a little better at 44 % .

Example 201:
titleEntities: {'Subject': ['Singapore'], 'Date': ['2018', '2018']}
title: Singapore population by age group as of June 2018
X_Axis['Age', 'group', 'in', 'years']: ['0-4', '5-9', '10-14', '15-19', '20-24', '25-29', '30-34', '35-39', '40-44', '45-49', '50-54', '55-59', '60-64', '65-69', '70-74', '75-79', '80-84', '84+']
Y_Axis['Population', 'in', 'thousands']: ['185.53', '199.07', '206.53', '226.52', '255.52', '291.63', '281.4', '303.72', '303.64', '307.84', '308.96', '304.39', '271.69', '212.1', '135.55', '93.33', '57.1', '49.78']

gold: As of June 2018 , there were approximately 309 thousand residents between the ages of 50 to 54 years old in Singapore , making it the largest age group among its resident population then . This reflects the increasingly ageing population of Singapore , a significant demographical shift that will have long-lasting socio-economic repercussions . Living longer… The improvements in health care and quality of life has led to Singapore having one of the highest life expectancies in the world .
gold_template: As of templateTitle[5] templateTitleDate[0] , there were approximately templateYValue[max] thousand residents between the ages of templateYValue[min] to 54 templateXLabel[2] old in templateTitleSubject[0] , making it the largest templateXLabel[0] templateXLabel[1] among its resident templateYLabel[0] then . This reflects the increasingly ageing templateYLabel[0] of templateTitleSubject[0] , a significant demographical shift that will have long-lasting socio-economic repercussions . Living longer… The improvements in health care and quality of life has led to templateTitleSubject[0] having one of the highest life expectancies in the world .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Singapore population in Singapore .  It shows 10-14 was the Singapore at just 49.78 degrees and 20-24 was the warmest at 308.96 thousands .  After 10-14 , the next Singapore population are 0-4 at 185.53 degrees , followed by 84+ at 18 degrees , 5-9 at 199.07 degrees and then 15-19 at 226.52 degrees .

Example 202:
titleEntities: {'Subject': ['Italians'], 'Date': ['2017', '2017']}
title: Persons with whom Italians cheat on their partners 2017
X_Axis['Response']: ['Friend', 'Colleague_from_work', 'Stranger_met_in_a_particular_context_(disco_gym_holidays_etc.)', 'Neighbor', 'Does_not_reply', 'Partner_of_a_friend_of_mine', 'Stranger_met_by_chance', 'Escort', 'Family_member']
Y_Axis['Share', 'of', 'respondents']: ['25.4', '22.6', '17.5', '10.7', '9.3', '5.3', '4.4', '3.5', '1.3']

gold: A survey conducted in 2017 reveals that the largest groups of Italian respondents cheated on their partner either with a friend or with a colleague . In particular , 25.4 percent of interviewees in Italy stated that they betrayed their partner with a friend , while 22.6 percent did so with a colleague . However , it was common to cheat with strangers as well .
gold_template: A survey conducted in templateTitleDate[0] reveals that the largest groups of Italian templateYLabel[1] cheated on templateTitle[5] templateXValue[5] either templateTitle[1] a templateXValue[0] or templateTitle[1] a templateXValue[1] . In templateXValue[2] , templateYValue[max] templateScale of interviewees in Italy stated that they betrayed templateTitle[5] templateXValue[5] templateTitle[1] a templateXValue[0] , while templateYValue[1] templateScale did so templateTitle[1] a templateXValue[1] . However , it was common to templateTitle[4] templateTitle[1] strangers as well .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Persons whom Italians in the cheat competirion .  \\n From the chart we see that the Does_not_reply Response made the Persons respondents by some margin , with only 1.3 Colleague_from_work and Friend made a respectable 22.6 and 25.4 respondents , with Family_member and Neighbor not far behind , at 1.3 and 10.7 respectively .

Example 203:
titleEntities: {'Subject': ['Latin America'], 'Date': ['1930', '2018']}
title: Latin America : Soccer World Cup titles won by country 1930 to 2018
X_Axis['Latin', 'American', 'Soccer', 'Teams']: ['Brazil(19581962_1970_1994_2002)', 'Argentina(1978_1986)', 'Uruguay(1930_1950)']
Y_Axis['Number', 'of', 'World', 'Cup', 'titles']: ['5', '2', '2']

gold: The graph depicts the number of soccer World Cup titles won by Latin American teams since the inaugural World Cup in 1930 . Brazil has won five soccer World Cup titles : 1958,1962 , 1970 , 1994 and 2002 . The only other Latin American squads who have won the tournament are Argentina and Uruguay , with two World Cup titles each .
gold_template: The graph depicts the templateYLabel[0] of templateXLabel[2] templateYLabel[1] templateYLabel[2] templateYLabel[3] templateTitle[6] templateTitle[7] templateXLabel[0] templateXLabel[1] templateXLabel[3] since the inaugural templateYLabel[1] templateYLabel[2] in templateTitleDate[min] . Brazil has templateTitle[6] templateYValue[max] templateXLabel[2] templateYLabel[1] templateYLabel[2] templateYLabel[3] : 1958,1962 , templateXValue[0] , templateXValue[0] and 2002 . The only other templateXLabel[0] templateXLabel[1] squads who have templateTitle[6] the tournament are Argentina and Uruguay , with templateYValue[min] templateYLabel[1] templateYLabel[2] templateYLabel[3] each .

generated_template: This graph shows that the templateTitle[0] templateTitleSubject[0] is largest in the templateXValue[last] at over 14 templateScale , the next highest is templateXValue[1] at templateYValue[1] templateScale . templateXValue[0] has the lowest templateTitleSubject[0] at templateYValue[min] templateScale
generated: This graph shows that the Latin Latin America is largest in the Uruguay(1930_1950) at over 14 % , the next highest is Argentina(1978_1986) at 2 % .  Brazil(19581962_1970_1994_2002) has the lowest Latin America at 2 % . 

Example 204:
titleEntities: {'Subject': ['Netflix'], 'Date': ['2017']}
title: Netflix content watching worldwide by device 2017
X_Axis['Platform']: ['Television', 'PC/laptop', 'Mobile', 'Tablet']
Y_Axis['Share', 'of', 'time', 'spent']: ['70', '15', '10', '5']

gold: The figure shows the share of time spent watching Netflix worldwide in 2017 , by device . According to the source , 70 percent of content streamed on Netflix worldwide in 2017 was via a connected TV .
gold_template: The figure shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] templateTitle[2] templateTitleSubject[0] templateTitle[3] in templateTitleDate[0] , templateTitle[4] templateTitle[5] . According to the source , templateYValue[max] templateScale of templateTitle[1] streamed on templateTitleSubject[0] templateTitle[3] in templateTitleDate[0] was via a connected TV .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[1] is in templateXValue[last] with just templateYValue[min] templateScale , followed by templateXValue[0] with templateYValue[0] templateScale , templateXValue[1] with templateYValue[1] templateScale .
generated: This graph shows the Netflix content on Netflix in the by 2017 on different continents .  The most content is in Tablet with just 5 million , followed by Television with 70 million , PC/laptop with 15 million .

Example 205:
titleEntities: {'Subject': ['Canada'], 'Date': ['2019']}
title: Number of births in Canada , by province 2019
X_Axis['province']: ['Ontario', 'Quebec', 'Alberta', 'British_Columbia', 'Manitoba', 'Saskatchewan', 'Nova_Scotia', 'New_Brunswick', 'Newfoundland_and_Labrador', 'Prince_Edward_Island', 'Nunavut', 'Northwest_Territories', 'Yukon']
Y_Axis['Number', 'of', 'births']: ['145806', '83900', '54107', '43370', '17477', '15479', '8472', '6565', '3969', '1397', '916', '595', '480']

gold: This statistic shows the total number of births in Canada in 2019 , distinguished by province . In 2019 , 145,806 babies were born in Ontario . The life expectancy of babies born in 2017 in Canada was 82.47 years .
gold_template: This statistic shows the total templateYLabel[0] of templateYLabel[1] in templateTitleSubject[0] in templateTitleDate[0] , distinguished templateTitle[3] templateXLabel[0] . In templateTitleDate[0] , templateYValue[max] babies were born in templateXValue[0] . The life expectancy of babies born in 2017 in templateTitleSubject[0] was 82.47 years .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number births in Canada .  It shows Alberta was the Number at just 480 degrees and Manitoba was the warmest at 145806 births .  After Alberta , the next Number births are Ontario at 145806 degrees , followed by Yukon at 18 degrees , Quebec at 83900 degrees and then British_Columbia at 43370 degrees .

Example 206:
titleEntities: {'Subject': ['NHL'], 'Date': []}
title: Average ticket price for an NHL game by team 2014/15
X_Axis['Team', 'Name']: ['Toronto_Maple_Leafs', 'Boston_Bruins', 'Vancouver_Canucks', 'Winnipeg_Jets', 'Chicago_Blackhawks', 'New_York_Rangers', 'Philadelphia_Flyers', 'Montreal_Canadiens', 'Pittsburgh_Penguins', 'Edmonton_Oilers', 'Washington_Capitals', 'Minnesota_Wild', 'Los_Angeles_Kings', 'Calgary_Flames', 'League_average', 'Nashville_Predators', 'Carolina_Hurricanes', 'San_Jose_Sharks', 'St._Louis_Blues', 'Ottawa_Senators', 'Buffalo_Sabres', 'New_York_Islanders', 'Detroit_Red_Wings', 'Columbus_Blue_Jackets', 'New_Jersey_Devils', 'Colorado_Avalanche', 'Anaheim_Ducks', 'Tampa_Bay_Lightning', 'Dallas_Stars', 'Florida_Panthers', 'Phoenix_Coyotes']
Y_Axis['Ticket', 'price', 'in', 'U.S.', 'dollars']: ['113.66', '88.7', '84.87', '79.28', '78.8', '77.87', '74.65', '73.67', '73.59', '72.63', '70.98', '67.06', '66.25', '63.07', '62.18', '62.16', '61.04', '54.68', '53.33', '51.76', '49.72', '49.21', '49.16', '48.9', '47.71', '47.56', '45.1', '44.5', '37.28', '33.39', '0']

gold: This graph depicts the average ticket price of all National Hockey League teams in 2014/15 . The average ticket price for a Nashville Predators home game was 62.16 U.S. dollars .
gold_template: This graph depicts the templateXValue[14] templateYLabel[0] templateYLabel[1] of all National Hockey templateXValue[14] teams in templateTitle[8] . The templateXValue[14] templateYLabel[0] templateYLabel[1] templateTitle[3] a templateXValue[15] home templateTitle[5] was templateYValue[15] templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average ticket in NHL .  It shows Vancouver_Canucks was the Average at just 0 degrees and Chicago_Blackhawks was the warmest at 113.66 degrees .  After Vancouver_Canucks , the next Average ticket are Toronto_Maple_Leafs at 113.66 degrees , followed by Phoenix_Coyotes at 18 degrees , Boston_Bruins at 88.7 degrees and then Winnipeg_Jets at 79.28 degrees .

Example 207:
titleEntities: {'Subject': ['India'], 'Date': ['2019']}
title: Production volume of spices India 2019 by state
X_Axis['State']: ['Rajasthan', 'Gujarat', 'Andhra_Pradesh', 'Telangana', 'Karnataka', 'West_Bengal', 'Orissa', 'Uttar_Pradesh', 'Maharashtra', 'Tamil_Nadu', 'Kerala']
Y_Axis['Production', 'in', 'thousand', 'metric', 'tons']: ['942.69', '747.15', '742.61', '651.1', '648.62', '343.97', '297.26', '250.81', '194.43', '180.45', '172.55']

gold: The production volume of spices amounted to over 940 thousand metric tons in the state of Rajasthan in fiscal year 2019 , making it the largest producer across India . Gujarat followed with Andhra Pradesh ranking third . The country 's total spice production amounted to over 9.1 million metric tons that same year .
gold_template: The templateYLabel[0] templateTitle[1] of templateTitle[2] amounted to over 940 thousand templateYLabel[2] templateYLabel[3] in the templateXLabel[0] of templateXValue[0] in fiscal year templateTitleDate[0] , making it the largest producer across templateTitleSubject[0] . templateXValue[1] followed with templateXValue[2] ranking third . The country 's total spice templateYLabel[0] amounted to over 9.1 templateScale templateYLabel[2] templateYLabel[3] that same year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Production volume spices in the India competirion .  \\n From the chart we see that the Karnataka State made the Production thousand by some margin , with only 172.55 .  Gujarat and Rajasthan made a respectable 747.15 and 942.69 thousand , with Kerala and Telangana not far behind , at 172.55 and 651.1 respectively .

Example 208:
titleEntities: {'Subject': ['Number'], 'Date': ['2017']}
title: Number of eSports games players worldwide 2017
X_Axis['Sport']: ['League_of_Legends', 'Call_of_Duty', 'Hearthstone', 'DOTA_2', 'World_of_Tanks', 'FIFA_17', 'Counter-Strike:_Global_Offensive', "PlayerUnknown's_Battlegrounds", 'StarCraft_II']
Y_Axis['Number', 'of', 'players', 'in', 'millions']: ['100.0', '28.1', '23.9', '12.6', '12.3', '12.3', '11.9', '6.8', '2.4']

gold: The statistic presents information on the number of players of selected eSports games worldwide as of August 2017 . According to the data , League of Legends was a leader based on number of eSports players . In the presented period the game had a player base of 100 million , while World of Tanks ranked fifth with 12.3 million players in the measured period .
gold_template: The statistic presents information on the templateYLabel[0] of templateYLabel[1] of selected templateTitle[1] templateTitle[2] templateTitle[4] as of templateTitleDate[0] . According to the data , templateXValue[0] of templateXValue[0] was a leader based on templateYLabel[0] of templateTitle[1] templateYLabel[1] . In the presented period the game had a player base of templateYValue[max] templateScale , while templateXValue[4] of templateXValue[4] ranked fifth with templateYValue[4] templateScale templateYLabel[1] in the measured period .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number eSports in Number .  It shows Hearthstone was the Number at just 2.4 degrees and World_of_Tanks was the warmest at 100.0 players .  After Hearthstone , the next Number eSports are League_of_Legends at 100.0 degrees , followed by StarCraft_II at 18 degrees , Call_of_Duty at 28.1 degrees and then DOTA_2 at 12.6 degrees .

Example 209:
titleEntities: {'Subject': ['Global'], 'Date': ['2018']}
title: Global online shopping frequency 2018
X_Axis['Response']: ['Once_a_week', 'Once_every_2_weeks', 'Once_a_month', 'Around_3-4_times_per_quarter', 'Once_every_3_months']
Y_Axis['Share', 'of', 'respondents']: ['20', '24', '31', '15', '10']

gold: This statistic presents the online shopping frequency according to online shoppers worldwide as of October 2018 . During the survey period , 20 percent of online shoppers worldwide stated that they purchased physical goods online on a weekly basis .
gold_template: This statistic presents the templateTitle[1] templateTitle[2] templateTitle[3] according to templateTitle[1] shoppers worldwide as of templateTitleDate[0] . During the survey period , templateYValue[0] templateScale of templateTitle[1] shoppers worldwide stated that they purchased physical goods templateTitle[1] on a weekly basis .

generated_template: The chart shows the templateYLabel[0] of templateTitle[0] in templateTitleSubject[0] templateXLabel[0] . In maths , there is only templateYValue[min] templateScale templateTitle[0] , but in templateXValue[3] there is templateYValue[max] templateScale . templateXValue[1] also has more than half templateTitle[0] , while templateXValue[0] and templateXValue[last] have more than half men .
generated: The chart shows the Share of Global in Response .  In maths , there is only 10 % Global , but in Around_3-4_times_per_quarter there is 31 % .  Once_every_2_weeks also has more than half Global , while Once_a_week and Once_every_3_months have more than half men .

Example 210:
titleEntities: {'Subject': ['Asia'], 'Date': ['2019']}
title: Number of internet users in selected regions in Asia-Pacific 2019
X_Axis['Region']: ['East_Asia', 'South_Asia', 'Southeast_Asia', 'Oceania']
Y_Axis['Number', 'of', 'internet', 'users', 'in', 'millions']: ['1000', '803', '415', '29']

gold: The above statistic shows the number of internet users in the Asia-Pacific regions as of January 2019 . During that time , it was discovered that the internet population in East Asia amounted to one billion internet users .
gold_template: The above statistic shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] in the templateTitleSubject[0] templateTitle[4] as of templateTitleDate[0] . During that time , it was discovered that the templateYLabel[1] population in templateXValue[0] amounted to templateYValue[max] templateScale templateYLabel[1] templateYLabel[2] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ 290 ,000,000 was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Number internet on Asia in the regions 2019 on different continents .  The most Number internet was in Oceania where £ 290 ,000,000 was internet .  The amount in South_Asia was a little lower at £ 803 ,000,000 .

Example 211:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2019']}
title: Quarterly gross mortgage lending in the United Kingdom ( UK ) Q4 2018- Q3 2019
X_Axis['Quarter']: ["Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18"]
Y_Axis['Mortgages', 'value', 'in', 'billion', 'GBP']: ['70.43', '64.1', '60.81', '70.46']

gold: This statistic illustrates the total quarterly value of gross mortgage lending in the United Kingdom ( UK ) from the fourth quarter of 2018 to the third quarter of 2019 . It can be seen that the value of gross mortgage lending reached an estimated value of approximately 70.4 billion British pounds as of the third quarter of 2019 .
gold_template: This statistic illustrates the total templateTitle[0] templateYLabel[1] of templateTitle[1] templateTitle[2] templateTitle[3] in the templateTitleSubject[0] ( templateTitleSubject[1] ) from the fourth templateXLabel[0] of 2018 to the third templateXLabel[0] of templateTitleDate[max] . It can be seen that the templateYLabel[1] of templateTitle[1] templateTitle[2] templateTitle[3] reached an estimated templateYLabel[1] of approximately templateYValue[0] templateScale British pounds as of the third templateXLabel[0] of templateTitleDate[max] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Quarterly gross on United Kingdom in the United 2019 on different continents .  The most Quarterly gross was in Q4_'18 where £ 70.46 billion was gross .  The amount in Q2_'19 was a little lower at £ 64.1 ,000,000 .

Example 212:
titleEntities: {'Subject': ['U.S.'], 'Date': ['1982']}
title: Mass shootings in the U.S. , by state 1982 to 2020
X_Axis['State']: ['California', 'Florida', 'Texas', 'Washington', 'Colorado', 'Pennsylvania', 'Wisconsin', 'New_York', 'Ohio', 'Illinois', 'Connecticut', 'Maryland', 'Tennessee', 'Michigan', 'Virginia', 'Nevada', 'Oregon', 'Kentucky', 'South_Carolina', 'Georgia', 'North_Carolina', 'Minnesota', 'Kansas', 'Lousiana', 'Utah', 'Massachusetts', 'Hawaii', 'D.C.', 'Arkansas', 'Arizona', 'Mississippi', 'Iowa', 'Missouri', 'Nebraska', 'Oklahoma', 'New_Jersey']
Y_Axis['Total', 'number', 'of', 'mass', 'shootings']: ['20', '12', '11', '7', '6', '5', '5', '4', '4', '4', '3', '3', '2', '2', '2', '2', '2', '2', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']

gold: As of February 2020 , California had the most mass shootings in the United States , with 20 total shootings since 1982 . The source defines a mass shooting as a shooting where four or more people were killed . Firearms in the U.S. Mass shootings in the United States are disturbingly common .
gold_template: As of templateTitleDate[max] , templateXValue[0] had the most templateYLabel[2] templateYLabel[3] in the templateTitle[2] , with templateYValue[max] templateYLabel[0] templateYLabel[3] since templateTitleDate[min] . The source defines a templateYLabel[2] shooting as a shooting where templateYValue[7] or more people were killed . Firearms in the templateTitleSubject[0] templateYLabel[2] templateYLabel[3] in the templateTitle[2] are disturbingly common .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Mass shootings in U.S. It shows Texas was the Mass at just 1 degrees and Colorado was the warmest at 20 degrees .  After Texas , the next Mass shootings are California at 20 degrees , followed by New_Jersey at 18 degrees , Florida at 12 degrees and then Washington at 7 degrees .

Example 213:
titleEntities: {'Subject': ['January'], 'Date': ['2020', '2020']}
title: Worldwide digital population as of January 2020
X_Axis['Users']: ['Active_internet_users', 'Unique_mobile_internet_users', 'Active_social_media_users', 'Active_mobile_social_media_users']
Y_Axis['Number', 'of', 'users', 'in', 'billions']: ['4.54', '4.18', '3.8', '3.75']

gold: How many people use the internet ? Almost 4.54 billion people were active internet users as of January 2020 , encompassing 59 percent of the global population . China , India and the United States rank ahead all other countries in terms of internet users . Global internet usage By now , a world without the internet is unimaginable .
gold_template: How many people use the templateXValue[0] ? Almost templateYValue[max] templateScale people were templateXValue[0] as of templateTitleSubject[0] templateTitleDate[0] , encompassing 59 templateScale of the global templateTitle[2] . China , India and the country rank ahead all other countries in terms of templateXValue[0] . Global templateXValue[0] usage By now , a world without the templateXValue[0] is unimaginable .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Worldwide digital on January in the 2020 on different continents .  The most Worldwide digital was in Active_mobile_social_media_users where £ 4.54 billions was digital .  The amount in Unique_mobile_internet_users was a little lower at £ 4.18 ,000,000 .

Example 214:
titleEntities: {'Subject': ['UK'], 'Date': ['2013', '2013']}
title: Leading home furnishing retailers in the UK 2013 , ranked by most shopped in
X_Axis['Response']: ['B&Q', 'Homebase', 'Wilkinson', 'John_Lewis', 'Ikea']
Y_Axis['Share', 'of', 'respondents']: ['19', '9', '7', '7', '5']

gold: This statistic shows the five retail stores shoppers purchased home decor and furnishings from most in the United Kingdom ( UK ) , according to a survey conducted in December 2013 . B & Q ranked highest , with 19 percent of consumers shopping at the retailer for home furnishings . This was followed by Homebase ( 9 percent ) , Wilkinson ( 7 percent ) and John Lewis ( 7 percent ) .
gold_template: This statistic shows the templateYValue[min] retail stores shoppers purchased templateTitle[1] decor and furnishings from templateTitle[8] in the United Kingdom ( templateTitleSubject[0] ) , according to a survey conducted in templateTitleDate[0] . B & Q templateTitle[6] highest , with templateYValue[max] templateScale of consumers shopping at the retailer for templateTitle[1] furnishings . This was followed templateTitle[7] templateXValue[1] ( templateYValue[1] templateScale ) , templateXValue[2] ( templateYValue[2] templateScale ) and templateXValue[3] ( templateYValue[2] templateScale ) .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] from templateXValue[0] - templateXValue[last] . \\n In templateXValue[0] the templateTitleSubject[0] saw templateYValue[0] templateYLabel[1] , in templateXValue[1] there were templateYValue[max] templateTitleSubject[0] , templateYValue[min] templateScale in templateXValue[3] and templateYValue[max] .
generated: This chart shows the Share of respondents at the UK from B&Q - Ikea .  \\n In B&Q the UK saw 19 respondents , in Homebase there were 19 UK , 5 % in John_Lewis and 19 .

Example 215:
titleEntities: {'Subject': ['Colorado Rapids'], 'Date': ['2019']}
title: Player expenses ( payroll ) of Colorado Rapids ( MLS ) 2019
X_Axis['Player', 'Name']: ['Tim_Howard', 'Kei_Kamara', 'Kellyn_Acosta', 'Tommy_Smith', 'Daniel_Wilson', 'Jack_Price', 'Nana_Adjei-Boateng', 'Diego_Rubio_Kostner', 'Nicolas_Mezquida', 'Sam_Nicholson', 'Johan_Blomberg', 'Axel_Sjoberg', 'Keegan_Rosenberry', 'Lalas_Abubakar', 'Clint_Irwin', 'Jonathan_Lewis', 'Dillon_Serna', 'Matt_Hundley', 'Andre_Shinyashiki', 'Kortne_Ford', 'Cole_Bassett', 'Sam_Vines', 'Sebastian_Anderson', 'Deklan_Wynne', 'Andre_Rawls', 'Kofi_Opare', 'Sam_Raben', 'Abdul_Rwatubyaye', 'Niki_Jackson']
Y_Axis['Payroll', 'in', 'thousand', 'U.S.', 'dollars']: ['2475.0', '750.0', '665.0', '640.0', '540.0', '437.5', '391.25', '353.75', '320.0', '313.0', '250.96', '180.0', '164.95', '144.94', '138.81', '121.0', '120.0', '98.0', '95.0', '85.0', '84.0', '81.25', '80.92', '74.25', '72.36', '70.25', '70.25', '62.63', '57.23']

gold: The statistic shows the player expenses ( payroll ) of the Colorado Rapids of Major League Soccer by player in 2019 . Tim Howard received a salary of 2.48 million U.S. dollars .
gold_template: The statistic shows the templateXLabel[0] templateTitle[1] ( templateYLabel[0] ) of the templateTitleSubject[0] of Major League Soccer by templateXLabel[0] in templateTitleDate[0] . templateXValue[0] received a salary of templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Player expenses in Colorado Rapids .  It shows Kellyn_Acosta was the Player at just 57.23 degrees and Daniel_Wilson was the warmest at 2475.0 degrees .  After Kellyn_Acosta , the next Player expenses are Tim_Howard at 2475.0 degrees , followed by Niki_Jackson at 18 degrees , Kei_Kamara at 750.0 degrees and then Tommy_Smith at 640.0 degrees .

Example 216:
titleEntities: {'Subject': ['Germany'], 'Date': ['2016']}
title: Germany : enterprises in the non-financial business economy 2016 , by employment size
X_Axis['Status']: ['250_persons_employed_or_more', 'From_50_to_249_persons_employed', 'From_20_to_49_persons_employed', 'From_10_to_19_persons_employed', 'From_0_to_9_persons_employed']
Y_Axis['Number', 'of', 'enterprises']: ['11762', '60505', '123860', '249416', '2022140']

gold: This statistic shows the total number of enterprises in the non-financial business economy in Germany in 2016 , by size class of employment . In 2016 , there were 11,762 enterprises with 250 employees or more in Germany .
gold_template: This statistic shows the total templateYLabel[0] of templateYLabel[1] in the templateTitle[2] templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitleDate[0] , templateTitle[6] templateTitle[8] class of templateTitle[7] . In templateTitleDate[0] , there were templateYValue[min] templateYLabel[1] with templateXValue[0] employees or templateXValue[0] in templateTitleSubject[0] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Number of enterprises at the Germany street .  \\n The highest Number was 2022140 in the From_10_to_19_persons_employed Status followed by 60505 million in the From_50_to_249_persons_employed Status , 11762 million in From_10_to_19_persons_employed and finally 11762 million in From_0_to_9_persons_employed .

Example 217:
titleEntities: {'Subject': ['Biggest'], 'Date': ['2015']}
title: Biggest equipment rental companies worldwide - by revenue 2015
X_Axis['Equipment', 'rental', 'companies']: ['United_Rentals_(U.S)', 'Ashtead_Group_(UK)', 'Aggreko_(UK)', 'Aktio_Corp_(Japan)', 'Algeco_Scotsman_(U.S.)', 'Hertz_Equipment_Rental_Corp_(U.S.)', 'Kanamoto_(Japan)', 'Loxam_(France)', 'Nishio_Rent_All_Co_(Japan)', 'Nikken_Corp_(Japan)']
Y_Axis['Revenue', 'in', 'million', 'euros']: ['5090', '3226', '2116', '1500', '1416', '1312', '1012', '838', '834', '756']

gold: The statistic shows the largest equipment rental companies worldwide in 2015 , based on revenue . With rental revenue of about 1.3 billion euros , New Jersey-based Hertz Equipment Rental Corporation was ranked sixth that year .
gold_template: The statistic shows the largest templateXValue[5] templateXLabel[2] templateTitle[4] in templateTitleDate[0] , based on templateYLabel[0] . With templateXValue[5] templateYLabel[0] of about templateYValue[5] templateScale templateYLabel[2] , New Jersey-based templateXValue[5] Corporation was ranked sixth that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Biggest equipment rental in the companies competirion .  \\n From the chart we see that the Algeco_Scotsman_(U.S.) Equipment made the Biggest million by some margin , with only 756 .  Ashtead_Group_(UK) and United_Rentals_(U.S) made a respectable 3226 and 5090 million , with Nikken_Corp_(Japan) and Aktio_Corp_(Japan) not far behind , at 756 and 1500 respectively .

Example 218:
titleEntities: {'Subject': ['Most'], 'Date': ['2019']}
title: Most innovative companies in the world in 2019
X_Axis['Innovative', 'Tech.', 'Companies']: ['International_Business_Machines_Corp', 'Samsung_Electronics_Co_Ltd', 'Canon_Inc', 'Microsoft_Technology_Licensing_LLC', 'Intel_Corp', 'LG_Electronics_Inc', 'Apple_Inc', 'Ford_Global_Technologies_LLC', 'Amazon_Technologies_Inc', 'Huawei_Technologies_Co_Ltd']
Y_Axis['Number', 'of', 'patent', 'grants']: ['9262', '6469', '3548', '3081', '3020', '2805', '2490', '2468', '2427', '2418']

gold: This graph shows the most innovative companies in the world as measured by the number of patent grants that each company successfully applied for at the United States Patent and Trademark Office as of 2019 . In 2019 , IBM was considered the most innovative company in the world with a total of 9,262 patent grants .
gold_template: This graph shows the templateTitleSubject[0] templateXLabel[0] templateXLabel[2] in the templateTitle[3] as measured by the templateYLabel[0] of templateYLabel[1] templateYLabel[2] that each company successfully applied for at the country templateYLabel[1] and Trademark Office as of templateTitleDate[0] . In templateTitleDate[0] , IBM was considered the templateTitleSubject[0] templateXLabel[0] company in the templateTitle[3] with a total of templateYValue[max] templateYLabel[1] templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most innovative companies in the world competirion .  \\n From the chart we see that the Intel_Corp Innovative made the Most patent by some margin , with only 2418 .  Samsung_Electronics_Co_Ltd and International_Business_Machines_Corp made a respectable 6469 and 9262 patent , with Huawei_Technologies_Co_Ltd and Microsoft_Technology_Licensing_LLC not far behind , at 2418 and 3081 respectively .

Example 219:
titleEntities: {'Subject': ['H M'], 'Date': ['2019']}
title: Number of H & M store openings worldwide by country in 2019
X_Axis['Country']: ['Total', 'Franchise', 'USA', 'China', 'Japan', 'UK', 'Sweden', 'Germany', 'Italy', 'Russia', 'France', 'South_Korea', 'India', 'Mexico', 'Philippines', 'Netherlands', 'Belgium', 'Canada', 'Australia', 'Finland', 'Luxembourg', 'Poland', 'New_Zealand', 'Spain', 'South_Africa', 'Norway', 'Iceland', 'Switzerland', 'Colombia', 'Kazakhstan', 'Austria', 'Belarus', 'Uruguay', 'Malaysia', 'Chile', 'Peru', 'Hong_Kong', 'Vietnam', 'Singapore', 'Slovakia', 'Latvia', 'Lithuania', 'Denmark', 'Georgia', 'Bosnia-Herzegovina', 'Turkey', 'Romania', 'Estonia', 'Serbia', 'Ukraine', 'Portugal', 'Greece', 'Puerto_Rico', 'Slovenia', 'Hungary', 'Taiwan', 'Bulgaria', 'Cyprus', 'Macau', 'Croatia', 'Ireland', 'Czech_Republic']
Y_Axis['Number', 'of', 'H&M', 'store', 'openings']: ['375', '28', '28', '21', '15', '13', '12', '11', '10', '10', '10', '8', '8', '7', '6', '6', '6', '5', '5', '5', '5', '4', '4', '4', '4', '3', '3', '3', '3', '3', '3', '2', '2', '2', '2', '2', '2', '2', '2', '2', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0']

gold: This statistic shows the number of new openings of the H & M Group stores in 2019 , by country . In 2019 , 28 new H & M stores were opened in the United States . H & M is a Swedish clothing manufacturer and retailer , based in Stockholm , Sweden .
gold_template: This statistic shows the templateYLabel[0] of templateXValue[22] templateYLabel[3] of the templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] Group stores in templateTitleDate[0] , templateTitle[7] templateXLabel[0] . In templateTitleDate[0] , templateYValue[1] templateXValue[22] templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] stores were opened in the country . templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] is a Swedish clothing manufacturer and retailer , based in Stockholm , templateXValue[6] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Number H in H M .  \n It demonstrates that Japan is the Number , with a Number of 375 H&M , while USA is the coldest , with a Number of 0 H&M .

Example 220:
titleEntities: {'Subject': ['French'], 'Date': ['2018', '2018']}
title: Leading French YouTube gaming channels as of June 2018 , by number of subscribers
X_Axis['Name']: ['Bigorneaux_&_Coquillages', "Le_Bled'Art", 'Joueur_du_Grenier', 'LaSalle', 'GOTAGA', 'GameMixTreize', 'Siphano', 'theKAIRI78', 'Furious_Jumper', 'Bob_Lennon']
Y_Axis['Number', 'of', 'subscribers', 'in', 'thousands']: ['5387', '3285', '3073', '2575', '2461', '2205', '2152', '1989', '1973', '1884']

gold: This statistic presents the ranking of French YouTube gaming channels as of June 2018 , by number of subscribers . The gaming channel `` Bigorneaux & Coquillages `` , with approximately 5.3 million followers , was the most subscribed French YouTube gaming channel in June 2018 . It was followed by `` Le Bled'Art `` with around 3.3 million subscribers and `` Le Joueur de Grenier `` with three million subscribers .
gold_template: This statistic presents the ranking of templateTitleSubject[0] templateTitleSubject[1] templateTitle[3] templateTitle[4] as of templateTitle[5] templateTitleDate[0] , templateTitle[7] templateYLabel[0] of templateYLabel[1] . The templateTitle[3] channel `` templateXValue[0] `` , with approximately 5.3 templateScale followers , was the most subscribed templateTitleSubject[0] templateTitleSubject[1] templateTitle[3] channel in templateTitle[5] templateTitleDate[0] . It was followed templateTitle[7] `` templateXValue[1] `` with around templateYValue[1] templateScale templateYLabel[1] and `` templateXValue[1] templateXValue[2] de templateXValue[2] `` with templateYValue[1] templateScale templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading French YouTube in the gaming competirion .  \\n From the chart we see that the GOTAGA Name made the Leading subscribers by some margin , with only 1884 .  Le_Bled'Art and Bigorneaux_&_Coquillages made a respectable 3285 and 5387 subscribers , with Bob_Lennon and LaSalle not far behind , at 1884 and 2575 respectively .

Example 221:
titleEntities: {'Subject': ['Oakland Athletics'], 'Date': ['2019']}
title: Oakland Athletics all-time home run leaders 2019
X_Axis['Month']: ['Mark_McGwire', 'Jimmie_Foxx', 'Reggie_Jackson', 'Jose_Canseco', 'Bob_Johnson', 'Eric_Chavez', 'Al_Simmons', 'Jason_Giambi', 'Sal_Bando', 'Gus_Zernial']
Y_Axis['Number', 'of', 'home', 'runs']: ['363', '302', '269', '254', '252', '230', '209', '198', '192', '191']

gold: This statistic shows the Oakland Athletics all-time home run leaders as of October 15 , 2019 . Mark McGwire has hit the most home runs in Oakland Athletics franchise history with 363 home runs .
gold_template: This statistic shows the templateTitleSubject[0] templateTitle[2] templateYLabel[1] templateTitle[4] templateTitle[5] as of 15 , templateTitleDate[0] . templateXValue[0] has hit the most templateYLabel[1] templateYLabel[2] in templateTitleSubject[0] franchise history with templateYValue[max] templateYLabel[1] templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Oakland Athletics all-time in the home competirion .  \\n From the chart we see that the Bob_Johnson Month made the Oakland home by some margin , with only 191 .  Jimmie_Foxx and Mark_McGwire made a respectable 302 and 363 home , with Gus_Zernial and Jose_Canseco not far behind , at 191 and 254 respectively .

Example 222:
titleEntities: {'Subject': ['United States'], 'Date': ['2019']}
title: Real GDP growth in the United States , by quarter 2011 to 2019
X_Axis['Quarter']: ["Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11"]
Y_Axis['Percent', 'change', 'from', 'preceding', 'period']: ['2.1', '2', '3.1', '1.1', '2.9', '3.5', '2.5', '3.5', '3.2', '2.2', '2.3', '2', '2.2', '1.9', '2', '0.1', '1.3', '3', '3.2', '2.3', '5', '5.5', '-1.1', '3.2', '3.2', '0.5', '3.6', '0.5', '0.5', '1.7', '3.2', '4.7', '-0.1', '2.9', '-1']

gold: This graph shows the quarterly growth of the real GDP in the United States from 2011 to 2019 . Real gross domestic product is defined as an inflation-adjusted measure that reflects the value of all goods and services produced in a given year , expressed in base-year prices . The U.S. GDP increased by 2.1 percent from the second quarter of 2019 to the third quarter of 2019 .
gold_template: This graph shows the quarterly templateTitle[2] of the templateTitle[0] templateTitle[1] in the templateTitleSubject[0] templateYLabel[2] templateTitleDate[min] to templateTitleDate[max] . templateTitle[0] gross domestic product is defined as an inflation-adjusted measure that reflects the value of all goods and services produced in a given year , expressed in base-year prices . The templateTitle[4] templateTitle[1] templatePositiveTrend templateTitle[5] templateYValue[0] templateScale templateYLabel[2] the second templateXLabel[0] of templateTitleDate[max] to the third templateXLabel[0] of templateTitleDate[max] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Real GDP growth in the United competirion .  \\n From the chart we see that the Q3_'18 Quarter made the Real change by some margin , with only -1.1 Q2_'19 and Q3_'19 made a respectable 2 and 2.1 change , with Q1_'11 and Q4_'18 not far behind , at -1 and 1.1 respectively .

Example 223:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2016', '2016']}
title: Leading U.S. online dating apps 2016 , by market share
X_Axis['Platform', 'Name']: ['Tinder', 'PlentyOfFish', 'OkCupid', 'eHarmony', 'Match', 'Grindr', 'Zoosk', 'Bumble', 'happn', 'Coffee_Meets_Bagel', 'Clover', 'FirstMet', 'Black_People_Meet', 'Hinge', 'Christian_Mingle', 'Pure', 'JSwipe', 'Lulu', 'Grouper', 'HowAboutWe']
Y_Axis['Market', 'share', 'of', 'monthly', 'users']: ['25.6', '19.4', '10', '9.1', '7', '6.3', '5.8', '3.6', '2.8', '2.4', '1.9', '1.6', '1.5', '1.1', '0.6', '0.5', '0.3', '0.3', '0.1', '0.1']

gold: This statistic presents the most popular dating apps in the United States as of April 2016 , by market share . According to the findings , Tinder had reported the biggest market share of monthly users , with a value of 25.6 percent . Following behind Tinder , was PlentyOfFish with a market share of monthly users at 19.4 percent .
gold_template: This statistic presents the most popular templateTitle[3] templateTitle[4] in the templateTitle[1] as of templateTitleDate[0] , templateTitle[6] templateYLabel[0] templateYLabel[1] . According to the findings , templateXValue[0] had reported the biggest templateYLabel[0] templateYLabel[1] of templateYLabel[2] templateYLabel[3] , with a value of templateYValue[max] templateScale . Following behind templateXValue[0] , was templateXValue[1] with a templateYLabel[0] templateYLabel[1] of templateYLabel[2] templateYLabel[3] at templateYValue[1] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading U.S. in .  It shows OkCupid was the Leading at just 0.1 degrees and Match was the warmest at 25.6 degrees .  After OkCupid , the next Leading U.S. are Tinder at 25.6 degrees , followed by HowAboutWe at 18 degrees , PlentyOfFish at 19.4 degrees and then eHarmony at 9.1 degrees .

Example 224:
titleEntities: {'Subject': ['MLB'], 'Date': ['2019']}
title: MLB all-time runs scored leaders 2019
X_Axis['Mlb', 'Player']: ['Rickey_Henderson', 'Ty_Cobb', 'Barry_Bonds', 'Hank_Aaron', 'Babe_Ruth', 'Pete_Rose', 'Willie_Mays', 'Alex_Rodriguez', 'Cap_Anson', 'Stan_Musial', 'Derek_Jeter', 'Lou_Gehrig', 'Tris_Speaker', 'Mel_Ott', 'Craig_Biggio', 'Frank_Robinson', 'Albert_Pujols', 'Eddie_Collins', 'Carl_Yastrzemski', 'Ted_Williams', 'Paul_Molitor', 'Charlie_Gehringer', 'Jimmie_Foxx', 'Honus_Wagner', "Jim_O'Rourke", 'Jesse_Burkett', 'Willie_Keeler', 'Billy_Hamilton', 'Bid_McPhee', 'Mickey_Mantle']
Y_Axis['Number', 'of', 'runs', 'scored']: ['2295', '2243', '2227', '2174', '2174', '2165', '2062', '2021', '1999', '1949', '1923', '1888', '1882', '1859', '1844', '1829', '1828', '1821', '1816', '1798', '1782', '1775', '1751', '1739', '1729', '1720', '1719', '1697', '1684', '1676']

gold: This statistic shows the MLB all-time runs scored leaders as of October 9 , 2019 . Rickey Henderson has scored the most runs in Major League Baseball history with 2,295 runs .
gold_template: This statistic shows the templateXLabel[0] templateTitle[1] templateYLabel[1] templateYLabel[2] templateTitle[4] as of 9 , templateTitleDate[0] . templateXValue[0] has templateYLabel[2] the most templateYLabel[1] in Major League Baseball history with templateYValue[max] templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the MLB all-time in MLB .  It shows Barry_Bonds was the MLB at just 1676 degrees and Babe_Ruth was the warmest at 2295 degrees .  After Barry_Bonds , the next MLB all-time are Rickey_Henderson at 2295 degrees , followed by Mickey_Mantle at 18 degrees , Ty_Cobb at 2243 degrees and then Hank_Aaron at 2174 degrees .

Example 225:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2016', '2016']}
title: Most googled hotel-related keywords in the United Kingdom ( UK ) in January 2016
X_Axis['Hotel', 'Related', 'Keyword']: ['Hotels', 'Hotels_in_London', 'Cheap_hotels', 'London_hotels', 'Last_minute_hotels', 'Hotel', 'Amsterdam_hotels', 'Hotels_in_Machester', 'Hotels_in_York', 'Hoterls_in_Edinburgh', 'Other_related_keywords']
Y_Axis['Searches', 'in', 'thousands']: ['201.0', '90.5', '74.0', '74.0', '74.0', '49.5', '40.5', '40.5', '40.5', '40.5', '3059.58']

gold: This statistic displays the most googled hotel-related keywords on Google UK in January 2016 . Most searched was the term `` hotels `` which was searched 201 thousand times that month . Second most popular was `` hotels in london `` .
gold_template: This statistic displays the templateTitle[0] templateTitle[1] templateTitle[2] templateXValue[last] on Google templateTitleSubject[1] in templateTitle[7] templateTitleDate[0] . templateTitle[0] searched was the term `` templateXValue[0] `` which was searched templateYValue[0] thousand times that month . Second templateTitle[0] popular was `` templateXValue[0] in templateXValue[1] `` .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most googled hotel-related in the keywords competirion .  \\n From the chart we see that the Last_minute_hotels Hotel made the Most thousands by some margin , with only 40.5 Hotels_in_London and Hotels made a respectable 90.5 and 201.0 thousands , with Other_related_keywords and London_hotels not far behind , at 3059.58 and 74.0 respectively .

Example 226:
titleEntities: {'Subject': ['Frequency'], 'Date': ['2017']}
title: Frequency of soda purchases among consumers in the U.S. 2017
X_Axis['Response']: ['Every_day', 'A_few_times_per_week', 'A_few_times_per_month', 'A_few_times_every_three_months', 'Less_frequently_than_once_every_three_months', 'Not_a_soda_consumer']
Y_Axis['Share', 'of', 'respondents']: ['10.1', '25.8', '32.2', '9.8', '7.1', '15']

gold: This statistic shows the results of a survey in which U.S. consumers were asked how frequently they purchase soda . Some 32.2 percent of respondents stated that they purchase soda a few times per month , while 25.8 percent of respondents reportedly purchase soda a few times per week .
gold_template: This statistic shows the results of a survey in which templateTitleSubject[0] templateTitle[4] were asked how templateXValue[4] they purchase templateXValue[last] . Some templateYValue[max] templateScale of templateYLabel[1] stated that they purchase templateXValue[last] a templateXValue[1] templateXValue[2] , while templateYValue[1] templateScale of templateYLabel[1] reportedly purchase templateXValue[last] a templateXValue[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Frequency soda purchases among the Share of respondents they 've had .  \n It shows Every_day has had 10.1 respondents , A_few_times_per_week has had the Frequency at 7.1 respondents , A_few_times_per_month has had 32.2 , A_few_times_every_three_months has had 9.8 , Less_frequently_than_once_every_three_months has had the most respondents at 32.2 and Not_a_soda_consumer has had 15 respondents .

Example 227:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Leading U.S. video streaming services 2018 , by monthly average users
X_Axis['Platform']: ['YouTube', 'Netflix', 'Hulu', 'Vimeo', 'dailymotion', 'Amazon_Prime_Video', 'Ora.TV', 'Redbox', 'Twitch', 'Spectrum_TV']
Y_Axis['Numer', 'of', 'users', 'in', 'millions']: ['197.5', '72.9', '55.6', '35.5', '21.1', '20.7', '18.9', '18.6', '17.8', '17.1']

gold: This statistic shows the most popular video streaming services in the United States as of July 2018 , ranked by monthly average users . The most popular video streaming service as of July 2018 was YouTube , with 197.5 million monthly active users . Hulu ranked third with 55.6 MAU .
gold_template: This statistic shows the most popular templateXValue[5] templateTitle[3] templateTitle[4] in the templateTitle[1] as of templateTitleDate[0] , ranked templateTitle[6] templateTitle[7] templateTitle[8] templateYLabel[1] . The most popular templateXValue[5] templateTitle[3] service as of templateTitleDate[0] was templateXValue[0] , with templateYValue[max] templateScale templateTitle[7] active templateYLabel[1] . templateXValue[2] ranked third with templateYValue[2] MAU .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading U.S. video in the streaming competirion .  \\n From the chart we see that the dailymotion Platform made the Leading users by some margin , with only 17.1 Netflix and YouTube made a respectable 72.9 and 197.5 users , with Spectrum_TV and Vimeo not far behind , at 17.1 and 35.5 respectively .

Example 228:
titleEntities: {'Subject': ['Countries'], 'Date': ['2016']}
title: Countries with the highest suicide mortality rates worldwide 2016
X_Axis['Country']: ['Lithuania', 'Russian_Federation', 'Guyana', 'Republic_of_Korea', 'Belarus', 'Suriname', 'Kazakhstan', 'Ukraine', 'Latvia', 'Belgium', 'Hungary', 'Slovenia', 'Japan', 'Uruguay', 'Estonia', 'France', 'Switerland', 'Croatia', 'Equatorial_Guinea', 'India']
Y_Axis['Suicide', 'mortality', 'rate', 'per', '100', '000', 'population']: ['31.9', '31.0', '29.2', '26.9', '26.2', '22.8', '22.5', '22.4', '21.2', '20.7', '19.1', '18.6', '18.5', '18.4', '17.8', '17.7', '17.2', '16.5', '16.4', '16.3']

gold: The countries with the highest suicide mortality rate worldwide include Lithuania , Russia , Guyana , and South Korea . Suicide rates of men are much higher than among women in many countries . Unsurprisingly , Lithuania , the country with the highest overall suicide rate , has the highest suicide rate for men .
gold_template: The templateTitleSubject[0] templateTitle[1] the templateTitle[2] templateYLabel[0] templateYLabel[1] templateYLabel[2] templateTitle[6] include templateXValue[0] , Russia , templateXValue[2] , and South templateXValue[3] . templateYLabel[0] templateTitle[5] of men are much higher than among women in many templateTitleSubject[0] . Unsurprisingly , templateXValue[0] , the templateXLabel[0] templateTitle[1] the templateTitle[2] overall templateYLabel[0] templateYLabel[2] , has the templateTitle[2] templateYLabel[0] templateYLabel[2] for men .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Countries highest in Countries .  It shows Guyana was the Countries at just 16.3 degrees and Belarus was the warmest at 31.9 degrees .  After Guyana , the next Countries highest are Lithuania at 31.9 degrees , followed by India at 18 degrees , Russian_Federation at 31.0 degrees and then Republic_of_Korea at 26.9 degrees .

Example 229:
titleEntities: {'Subject': ['PUBG'], 'Date': ['2018']}
title: PUBG console and PC player base worldwide 2018
X_Axis['Month']: ['June_2018', 'December_2017', 'October_2017', 'September_2017', 'August_2017', 'July_2017', 'June_2017', 'May_2017']
Y_Axis['Number', 'of', 'players', 'in', 'millions']: ['50', '30', '10', '8', '7', '5', '3', '2']

gold: How many people play PUBG ? PlayerUnknown 's Battlegrounds ( PUBG ) , which is available on console and PC , crossed the 50 million player base mark in June 2018 - an impressive figure considering it was released little over a year earlier . The Battle Royale game developed by Bluehole was made available to the public in March 2017 . One of the biggest games on Steam While it is available on both PlayStation and Xbox One , PUBG 's origins lie in PC and , more specifically , on Steam .
gold_template: How many people play templateTitleSubject[0] ? PlayerUnknown 's Battlegrounds ( templateTitleSubject[0] ) , which is available on templateTitle[1] and templateTitle[2] , crossed the templateYValue[max] templateScale templateTitle[3] templateTitle[4] mark in templateXValue[0] - an impressive figure considering it was released little over a year earlier . The Battle Royale game developed by Bluehole was made available to the public in templateXValue[1] . One of the biggest games on Steam While it is available on both PlayStation and Xbox One , templateTitleSubject[0] 's origins lie in templateTitle[2] and , more specifically , on Steam .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the PUBG console PC player the Number of players they 've had .  \n It shows June_2018 has had 50 players , December_2017 has had the PUBG at 2 players , October_2017 has had 10 , September_2017 has had 8 , August_2017 has had the most players at 50 and May_2017 has had 2 players .

Example 230:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Leading banks in the U.S. 2018 , by number of employees
X_Axis['Bank', 'In', 'Usa']: ['Wells_Fargo_Bank', 'JPMorgan_Chase_Bank', 'Citibank', 'Bank_of_America', 'U.S._Bank', 'PNC_Bank', 'The_Bank_of_New_York_Mellon', 'Branch_Banking_and_Trust_Company', 'State_Street_Bank_and_Trust_Company', 'Capital_One', 'TD_Bank', 'Capital_One_Bank_(USA)', 'SunTrust_Bank', 'Regions_Bank', 'The_Northern_Trust_Company', 'KeyBank', 'Fifth_Third_Bank', 'Manufacturers_and_Traders_Trust_Company', 'Citizens_Bank', 'The_Huntington_National_Bank']
Y_Axis['Number', 'of', 'employees']: ['230338', '194680', '163581', '136502', '72144', '52319', '40742', '33401', '33004', '27679', '26305', '23764', '21405', '19906', '18436', '17737', '17420', '16341', '15343', '14802']

gold: The statistic depicts the leading banks in the United States as of December 31 , 2018 , by number of employees . Wells Fargo Bank was the largest U.S. employer in the banking sector in 2018 , with over 230 thousand employees . Employment in the banking sector – additional information Apart from the Wells Fargo Bank , other leading banks in terms of employment in the United States in 2018 , were JPMorgan Chase Bank , Citibank and Bank of America .
gold_template: The statistic depicts the templateTitle[0] templateTitle[1] in the templateTitle[2] as of 31 , templateTitleDate[0] , templateTitle[4] templateYLabel[0] of templateYLabel[1] . templateXValue[0] was the largest templateXValue[4] employer in the templateXValue[7] sector in templateTitleDate[0] , with over templateYValue[max] thousand templateYLabel[1] . Employment in the templateXValue[7] sector – additional information Apart from the templateXValue[0] , other templateTitle[0] templateTitle[1] in terms of employment in the templateTitle[2] in templateTitleDate[0] , were templateXValue[1] templateXValue[0] , templateXValue[2] and templateXValue[0] of templateXValue[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading banks in U.S. It shows Citibank was the Leading at just 14802 degrees and U.S._Bank was the warmest at 230338 degrees .  After Citibank , the next Leading banks are Wells_Fargo_Bank at 230338 degrees , followed by The_Huntington_National_Bank at 18 degrees , JPMorgan_Chase_Bank at 194680 degrees and then Bank_of_America at 136502 degrees .

Example 231:
titleEntities: {'Subject': ['Facebook', 'South Korea'], 'Date': ['2019']}
title: Most popular celebrities on Facebook from South Korea 2019 , ranked by number of fans
X_Axis['Facebook', 'Celebrity']: ['Lee_Minho', 'PSY', 'BIGBANG', '2NE1', 'BTS', 'Super_Junior', 'EXO', "Girl's_Generation", 'G-DRAGON', 'DJ_SODA']
Y_Axis['Number', 'of', 'fans', 'on', 'Facebook', 'in', 'millions']: ['17.3', '10.9', '10.8', '9.08', '8.31', '7.86', '7.8', '7.24', '7.08', '6.14']

gold: Lee Min-ho was ranked the most popular South Korean celebrity on Facebook , with around 17.3 million fans as of April 2019 . Min-ho is a South Korean actor and singer , initially gaining attention in 2009 with his role as Gu Jun-pyo in ‘ Boys Over Flowers ' _ . It comes as no surprise that the actor has so many fans , with the South Korean film industry booming not only locally , but on a global scale as well .
gold_template: templateXValue[0] Min-ho was templateTitle[8] the templateTitle[0] templateTitle[1] templateTitleSubject[0] Korean templateXLabel[1] on templateXLabel[0] , with around templateYValue[max] templateScale templateYLabel[1] as of templateTitleDate[0] . Min-ho is a templateTitleSubject[0] Korean actor and singer , initially templatePositiveTrend attention in 2009 with his role as Gu Jun-pyo in ‘ Boys Over Flowers ' _ . It comes as no surprise that the actor has so many templateYLabel[1] , with the templateTitleSubject[0] Korean film industry booming not only locally , but on a global scale as well .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most popular celebrities in the Facebook competirion .  \\n From the chart we see that the BTS Facebook made the Most fans by some margin , with only 6.14 .  PSY and Lee_Minho made a respectable 10.9 and 17.3 fans , with DJ_SODA and 2NE1 not far behind , at 6.14 and 9.08 respectively .

Example 232:
titleEntities: {'Subject': ['EU'], 'Date': ['2018']}
title: Payroll taxes in EU countries 2018
X_Axis['Country']: ['Sweden', 'France', 'Lithuania', 'Italy', 'Austria', 'Czech_Republic', 'Belgium', 'Slowakia', 'Estonia', 'Spain', 'Euro_area', 'Greece', 'Netherlands', 'EU', 'Latvia', 'Germany', 'Portugal', 'Finland', 'Hungary', 'Poland', 'United_Kingdom', 'Slovenia', 'Croatia', 'Bulgaria', 'Ireland', 'Cyprus', 'Denmark', 'Luxembourg', 'Malta', 'Romania']
Y_Axis['Payroll', 'taxes', 'of', '100', 'euros', 'gross', 'earnings']: ['48', '45', '43', '40', '38', '37', '37', '37', '35', '35', '34', '33', '30', '30', '29', '27', '26', '25', '25', '22', '20', '19', '19', '19', '18', '16', '16', '13', '8', '0']

gold: The statistic shows payroll taxes of 100 euros gross earnings in member states of the European Union in 2018 . Payroll taxes include social contributions , the cost of professional education and training , the taxes on payroll or number of employees , and other special expenses . In 2018 , payroll taxes of 100 euros gross earning amounted to 30 euros in the European Union .
gold_template: The statistic shows templateYLabel[0] templateYLabel[1] of templateYLabel[2] templateYLabel[3] templateYLabel[4] templateYLabel[5] in member states of the European Union in templateTitleDate[0] . templateYLabel[0] templateYLabel[1] include social contributions , the cost of professional education and training , the templateYLabel[1] on templateYLabel[0] or number of employees , and other special expenses . In templateTitleDate[0] , templateYLabel[0] templateYLabel[1] of templateYLabel[2] templateYLabel[3] templateYLabel[4] earning amounted to templateYValue[12] templateYLabel[3] in the European Union .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Payroll taxes in EU .  It shows Lithuania was the Payroll at just 0 degrees and Austria was the warmest at 48 degrees .  After Lithuania , the next Payroll taxes are Sweden at 48 degrees , followed by Romania at 18 degrees , France at 45 degrees and then Italy at 40 degrees .

Example 233:
titleEntities: {'Subject': ['Pharmaceutical'], 'Date': ['2017', '2030']}
title: Pharmaceutical sector growth worldwide 2017 - 2030 , by country
X_Axis['Country']: ['India', 'China', 'Indonesia', 'Saudi_Arabia', 'Brazil', 'World', 'Argentina', 'Mexico', 'Australia', 'Russia', 'South_Korea', 'Poland', 'United_States', 'Canada', 'Spain', 'France', 'United_Kingdom', 'Germany', 'Italy', 'Japan']
Y_Axis['Growth', 'in', 'percentage']: ['232', '230', '196', '171', '169', '160', '158', '154', '149', '147', '141', '140', '134', '131', '129', '129', '128', '118', '118', '117']

gold: This statistic shows the worldwide forecast of pharmaceutical sector growth between 2017 and 2030 , sorted by select country . The forecast predicts that between 2017 and 2030 the pharmaceutical sector worldwide will grow by 160 percent , with the biggest growth forecast given for India with 232 percent .
gold_template: This statistic shows the templateTitle[3] forecast of templateTitleSubject[0] templateTitle[1] templateYLabel[0] between templateTitleDate[min] and templateTitleDate[max] , sorted templateTitle[6] select templateXLabel[0] . The forecast predicts that between templateTitleDate[min] and templateTitleDate[max] the templateTitleSubject[0] templateTitle[1] templateTitle[3] will grow templateTitle[6] templateYValue[5] templateScale , with the biggest templateYLabel[0] forecast given for templateXValue[0] with templateYValue[max] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Pharmaceutical sector in Pharmaceutical .  It shows Indonesia was the Pharmaceutical at just 117 degrees and Brazil was the warmest at 232 degrees .  After Indonesia , the next Pharmaceutical sector are India at 232 degrees , followed by Japan at 18 degrees , China at 230 degrees and then Saudi_Arabia at 171 degrees .

Example 234:
titleEntities: {'Subject': ['Facebook'], 'Date': ['2013']}
title: Facebook : major stakeholders in 2013 , by ownership stake
X_Axis['Month']: ['Mark_Zuckerberg', 'Facebook_employees', 'Accel_Partners', 'Dustin_Moskovitz', 'Digital_Sky_Technologies', 'Eduardo_Saverin', 'Sean_Parker', 'Foreign_Goldman_Sachs_clients', 'Peter_Thiel', 'Greylock_Partners', 'MeriTech_Capital_Partners', 'Elevation_Partners']
Y_Axis['Ownership', 'stake']: ['28.2', '25', '11.4', '7.6', '5.5', '5', '4', '2.8', '2.5', '1.5', '1.5', '1.5']

gold: This statistic illustrates the major Facebook stakeholders as of January 2013 , by ownership stake . In June 2011 , Sean Parker owned 4 percent in Facebook stakes . Mark Zuckerberg owned 24 percent of Facebook
gold_template: This statistic illustrates the templateTitle[1] templateXValue[1] templateTitle[2] as of templateTitleDate[0] , templateTitle[4] templateYLabel[0] templateYLabel[1] . In 2011 , templateXValue[6] owned templateYValue[6] templateScale in templateXValue[1] stakes . templateXValue[0] owned 24 templateScale of templateXValue[1]

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Facebook major in Facebook .  It shows Accel_Partners was the Facebook at just 1.5 degrees and Digital_Sky_Technologies was the warmest at 28.2 stake .  After Accel_Partners , the next Facebook major are Mark_Zuckerberg at 28.2 degrees , followed by Elevation_Partners at 18 degrees , Facebook_employees at 25 degrees and then Dustin_Moskovitz at 7.6 degrees .

Example 235:
titleEntities: {'Subject': ['IQOS', 'Phillip Morris', 'France'], 'Date': ['2019']}
title: Price of tobacco sticks used with IQOS device from Phillip Morris in France 2019
X_Axis['Tobacco', 'sticks', 'used', 'with', 'IQOS', 'devices']: ['Heets_Amber_Label_(61g)_20_units', 'Heets_Blue_Label_(61g)_20_units', 'Heets_Turquoise_Label_(61g)_20_units', 'Heets_Yellow_Label_(61g)_20_units', 'Heets_Blue_Label_(62g)_20_units', 'Heets_Bronze_Label_(61g)_20_units', 'Heets_Sienna_Label_(61g)_20_units']
Y_Axis['Price', 'in', 'euros']: ['7', '7', '7', '7', '7', '7', '7']

gold: This statistic displays the price of tobacco sticks packs used with the IQOS smoking device from the brand Phillip Morris in France as of February 2019 . It shows that the Heets tobacco sticks were worth 7 euros per pack of 20 units .
gold_template: This statistic displays the templateYLabel[0] of templateXLabel[0] templateXLabel[1] packs templateXLabel[2] templateXLabel[3] the templateXLabel[4] smoking templateTitle[6] templateTitle[7] the brand templateTitleSubject[1] in templateTitleSubject[2] as of templateTitleDate[0] . It shows that the templateXValue[0] templateXLabel[0] templateXLabel[1] were worth templateYValue[max] templateYLabel[1] per pack of templateXValue[0] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Price of euros made by sticks in a used IQOS .  \\n From the chart we see that the Heets_Turquoise_Label_(61g)_20_units Tobacco was the Price tobacco in the IQOS with 7 euros .  The next Tobacco to make the most euros was the Heets_Yellow_Label_(61g)_20_units Tobacco with 7 euros closely followed by the Heets_Sienna_Label_(61g)_20_units Tobacco with 7 euros .

Example 236:
titleEntities: {'Subject': ['Europe'], 'Date': ['2017']}
title: Current smokers in Europe 2017 , by country
X_Axis['Country']: ['Greece', 'Bulgaria', 'France', 'Croatia', 'Poland', 'Latvia', 'Czechia', 'Slovenia', 'Spain', 'Romania', 'Austria', 'Cyprus', 'Hungary', 'Portugal', 'Slovakia', 'Germany', 'Italy', 'Malta', 'Estonia', 'Lithuania', 'Luxemburg', 'Finland', 'Denmark', 'Netherlands', 'Ireland', 'Belgium', 'United_Kingdom', 'Sweden']
Y_Axis['Share', 'of', 'respondents']: ['37', '36', '36', '35', '30', '29', '29', '28', '28', '28', '28', '28', '27', '26', '26', '25', '24', '24', '23', '21', '21', '20', '19', '19', '19', '19', '17', '7']

gold: This statistic displays the proportion of individuals who currently smoke cigarettes , cigars , cigarillos or a pipe in selected European countries in 2017 . In this period , Greece had the highest proportion of smokers in the EU with 37 percent . Cigarette prices differ across Europe : the most expensive country in which to purchase cigarettes is the United Kingdom ( UK ) .
gold_template: This statistic displays the proportion of individuals who currently smoke cigarettes , cigars , cigarillos or a pipe in selected European countries in templateTitleDate[0] . In this period , templateXValue[0] had the highest proportion of templateTitle[1] in the EU with templateYValue[max] templateScale . Cigarette prices differ across templateTitleSubject[0] : the most expensive templateXLabel[0] in which to purchase cigarettes is the templateXValue[26] ( UK ) .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Current smokers in Europe .  It shows France was the Current at just 7 degrees and Poland was the warmest at 37 degrees .  After France , the next Current smokers are Greece at 37 degrees , followed by Sweden at 18 degrees , Bulgaria at 36 degrees and then Croatia at 35 degrees .

Example 237:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: U.S. fire statistics : fire department responses , by type of call 2018
X_Axis['Type', 'of', 'call']: ['Medical_aid_responses_(ambulance_EMS_rescue)', 'All_other_responses_(smoke_scares_lock-outs_etc.)', 'False_alarms', 'Mutual_aid_or_assistance', 'Fire_incidents', 'Other_hazardous_responses_(arcing_wires_bomb_removal_etc.)', 'Hazardous_material_responses_(Spills_Leaks_etc.)']
Y_Axis['Number', 'of', 'calls', 'responded', '(in', 'thousands)']: ['23551.5', '6342.5', '2889.0', '1512.5', '1318.5', '706.5', '426.0']

gold: This statistic shows total number of calls responded by fire departments of the United States in 2018 . In 2018 , U.S. fire departments responded to 2,889,000 false alarms . This was an increase of 13 % from the previous year .
gold_template: This statistic shows total templateYLabel[0] of templateYLabel[1] templateYLabel[2] templateTitle[6] templateXValue[4] departments of the templateTitle[0] in templateTitleDate[0] . In templateTitleDate[0] , templateTitleSubject[0] templateXValue[4] departments templateYLabel[2] to templateYValue[2] templateXValue[2] . This was an templatePositiveTrend of 13 templateScale from the previous year .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Number of calls made by statistics in a fire department .  \\n From the chart we see that the False_alarms Type was the U.S. fire Type in the department with 23551.5 calls .  The next Type to make the most calls was the Mutual_aid_or_assistance Type with 1512.5 calls closely followed by the Hazardous_material_responses_(Spills_Leaks_etc.) Type with 426.0 calls .

Example 238:
titleEntities: {'Subject': ['Survey'], 'Date': ['2013']}
title: Survey on optimism or pessimism 2013
X_Axis['Response']: ['Pessimist', 'Somewhere_in_between', 'Optimist', "Don't_know_/_refused"]
Y_Axis['Share', 'of', 'respondents']: ['4', '43', '50', '3']

gold: This statistic shows the results of a survey , conducted in 2013 among adult Americans , on whether they believe the glass is half full or half empty . 50 percent of respondents said they consider themselves optimists . The optimism and pessimism of the American people Optimism is defined as a mental attitude or worldview that favors a positive outcome , while pessimism favors a negative outcome or prediction .
gold_template: This statistic shows the results of a templateTitleSubject[0] , conducted in templateTitleDate[0] among adult Americans , on whether they believe the glass is half full or half empty . templateYValue[max] templateScale of templateYLabel[1] said they consider themselves optimists . The templateTitle[1] and templateTitle[2] of the American people templateTitle[1] is defined as a mental attitude or worldview that favors a positive outcome , while templateTitle[2] favors a negative outcome or prediction .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ 290 ,000,000 was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Survey optimism on Survey in the 2013 on different continents .  The most Survey optimism was in Don't_know_/_refused where £ 290 ,000,000 was optimism .  The amount in Somewhere_in_between was a little lower at £ 43 ,000,000 .

Example 239:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2009', '2019']}
title: Quarterly U.S. e-commerce retail sales 2009 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11", "Q4_'10", "Q3_'10", "Q2_'10", "Q1_'10", "Q4_'09", "Q3_'09", "Q2_'09", "Q1_'09"]
Y_Axis['E-commerce', 'sales', 'in', 'million', 'U.S.', 'dollars']: ['158049', '153976', '147141', '140346', '134969', '132819', '129046', '122534', '118216', '114186', '110505', '106207', '101776', '99875', '96283', '92182', '88968', '86569', '83370', '80344', '77755', '75883', '73480', '70492', '68179', '65804', '63949', '62025', '60439', '58157', '56067', '54896', '52984', '49985', '48696', '46908', '45064', '43507', '41308', '39291', '38106', '37391', '35279', '34145']

gold: In the fourth quarter of 2019 , adjusted U.S. retail e-commerce sales amounted to over 158 billion U.S. dollars . Retail e-commerce sales in the United States are estimated from samples used for the Monthly Retail Trade Survey and exclude online travel services , ticket sales agencies and financial brokers . Online retail sales currently account for one tenth of total retail and approximately 5 percent of annual e-commerce revenue in the United States .
gold_template: In the fourth templateXLabel[0] of templateTitleDate[max] , adjusted templateYLabel[3] templateTitle[3] templateYLabel[0] templateYLabel[1] amounted to over templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . templateTitle[3] templateYLabel[0] templateYLabel[1] in the templateTitle[1] are estimated from samples used for the Monthly templateTitle[3] Trade Survey and exclude online travel services , ticket templateYLabel[1] agencies and financial brokers . Online templateTitle[3] templateYLabel[1] currently account for one tenth of total templateTitle[3] and approximately 5 templateScale of annual templateYLabel[0] revenue in the templateTitle[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Quarterly U.S. in .  It shows Q2_'19 was the Quarterly at just 34145 degrees and Q4_'18 was the warmest at 158049 degrees .  After Q2_'19 , the next Quarterly U.S. are Q4_'19 at 158049 degrees , followed by Q1_'09 at 18 degrees , Q3_'19 at 153976 degrees and then Q1_'19 at 140346 degrees .

Example 240:
titleEntities: {'Subject': ['NFL'], 'Date': ['2020', '2020']}
title: Number of conference championship game appearances of NFL teams 2020
X_Axis['American', 'Football', 'Teams']: ['Pittsburgh_Steelers', 'San_Francisco_49ers', 'New_England_Patriots', 'Dallas_Cowboys', 'L.A._/_Oakland_Raiders', 'Denver_Broncos', 'L.A._/_St._Louis_Rams', 'Minnesota_Vikings', 'Green_Bay_Packers', 'Miami_Dolphins', 'Baltimore_/_Indianapolis_Colts', 'Philadelphia_Eagles', 'Washington_Redskins', 'New_York_Giants', 'Chicago_Bears', 'Buffalo_Bills']
Y_Axis['Number', 'of', 'appearances']: ['16', '16', '15', '14', '11', '10', '10', '9', '8', '7', '7', '7', '6', '5', '5', '5']

gold: The Pittsburgh Steelers have played in the joint most conference championship games since the merger of the American Football League ( AFL ) and the National Football League ( NFL ) in 1970 . The Steelers have progressed to win the Super Bowl on six occasions , level with the New England Patriots for the most wins of all NFL teams . The NFL 's conference call The merger between the AFL and NFL before the 1970 season saw the formation of two new conferences : the American Football Conference ( AFC ) and the National Football Conference ( NFC ) .
gold_template: The templateXValue[0] have played in the joint most templateTitle[1] templateTitle[2] games since the merger of the templateXLabel[0] templateXLabel[1] League ( AFL ) and the National templateXLabel[1] League ( templateTitleSubject[0] ) in 1970 . The templateXValue[0] have progressed to win the Super Bowl on templateYValue[12] occasions , level with the templateXValue[2] for the most wins of all templateTitleSubject[0] templateXLabel[2] . The templateTitleSubject[0] 's templateTitle[1] call The merger between the AFL and templateTitleSubject[0] before the 1970 season saw the formation of two templateXValue[2] conferences : the templateXLabel[0] templateXLabel[1] templateTitle[1] ( AFC ) and the National templateXLabel[1] templateTitle[1] ( NFC ) .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number conference in NFL .  It shows New_England_Patriots was the Number at just 5 degrees and L.A._/_Oakland_Raiders was the warmest at 16 appearances .  After New_England_Patriots , the next Number conference are Pittsburgh_Steelers at 16 degrees , followed by Buffalo_Bills at 18 degrees , San_Francisco_49ers at 16 degrees and then Dallas_Cowboys at 14 degrees .

Example 241:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2016', '2019']}
title: MINI car sales in the United Kingdom ( UK ) 2016 to 2019
X_Axis['Month']: ['Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18', 'Jul_18', 'Jun_18', 'May_18', 'Apr_18', 'Mar_18', 'Feb_18', 'Jan_18', 'Dec_17', 'Nov_17', 'Oct_17', 'Sep_17', 'Aug_17', 'Jul_17', 'Jun_17', 'May_17', 'Apr_17', 'Mar_17', 'Feb_17', 'Jan_17', 'Dec_16', 'Nov_16', 'Oct_16', 'Sep_16', 'Aug_16', 'Jul_16']
Y_Axis['Units', 'sold']: ['6123', '4651', '3367', '12691', '1819', '2983', '8662', '3952', '2502', '12992', '1891', '3251', '7211', '5269', '5116', '10082', '1867', '3351', '8176', '5094', '3846', '12352', '1786', '2871', '7127', '6094', '3144', '12282', '1524', '3007', '9015', '4972', '3734', '12942', '2045', '2280', '7383', '5093', '4792', '13119', '1608', '3026']

gold: This statistic shows the monthly amount of cars sold by MINI in the United Kingdom ( UK ) between July 2016 and December 2019 . Peaks in registration numbers were recorded in March and September of each year , which was due to the issuing of license plates by the Driver & Vehicle Licensing Agency ( DVLA ) in those months . In September 2019 , around 12,700 new MINI cars had been sold .
gold_template: This statistic shows the monthly amount of cars templateYLabel[1] by templateTitle[0] in the templateTitleSubject[0] ( templateTitleSubject[1] ) between templateTitleDate[min] and templateTitleDate[max] . Peaks in registration numbers were recorded in and of each year , which was due to the issuing of license plates by the Driver & Vehicle Licensing Agency ( DVLA ) in those months . In templateTitleDate[max] , around 12,700 new templateTitle[0] cars had been templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the MINI car in United Kingdom .  It shows Oct_19 was the MINI at just 1524 degrees and Aug_19 was the warmest at 13119 degrees .  After Oct_19 , the next MINI car are Dec_19 at 6123 degrees , followed by Jul_16 at 18 degrees , Nov_19 at 4651 degrees and then Sep_19 at 12691 degrees .

Example 242:
titleEntities: {'Subject': ['EU'], 'Date': ['2019', '2019']}
title: Youth unemployment rate in EU countries August 2019
X_Axis['Country']: ['Greece_', 'Spain', 'Italy', 'Sweden', 'Croatia', 'France', 'Portugal', 'Finland', 'Cyprus', 'Romania', 'Euro_area', 'Slowakia', 'Ireland', 'EU', 'Belgium', 'Luxembourg', 'Estonia', 'Lithuania', 'Latvia', 'United_Kingdom', 'Poland', 'Hungary', 'Austria', 'Denmark', 'Malta', 'Bulgaria', 'Slovenia', 'Netherlands', 'Germany', 'Czech_Republic']
Y_Axis['Youth', 'unemployment', 'rate']: ['33', '32.2', '27.1', '19.7', '19.3', '19.2', '17.6', '17.1', '16.6', '16.2', '15.4', '15.1', '14.7', '14.2', '14.1', '14.1', '13.6', '12.3', '12.1', '11.2', '10.4', '9.9', '9.9', '9.7', '8.4', '8.2', '7.3', '6.9', '5.7', '5.1']

gold: The statistic shows the seasonally adjusted youth unemployment rate in EU member states as of August 2019 . The source defines youth unemployment as unemployment of those younger than 25 years . In August 2019 , the seasonally adjusted youth unemployment rate in Spain was at 32.2 percent .
gold_template: The statistic shows the seasonally adjusted templateYLabel[0] templateYLabel[1] templateYLabel[2] in templateXValue[13] member states as of templateTitle[5] templateTitleDate[0] . The source defines templateYLabel[0] templateYLabel[1] as templateYLabel[1] of those younger than 25 years . In templateTitle[5] templateTitleDate[0] , the seasonally adjusted templateYLabel[0] templateYLabel[1] templateYLabel[2] in templateXValue[1] was at templateYValue[1] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Youth unemployment in EU .  It shows Italy was the Youth at just 5.1 degrees and Croatia was the warmest at 33 degrees .  After Italy , the next Youth unemployment are Greece_ at 33 degrees , followed by Czech_Republic at 18 degrees , Spain at 32.2 degrees and then Sweden at 19.7 degrees .

Example 243:
titleEntities: {'Subject': ['Instagram'], 'Date': ['2017']}
title: Most hashtagged cities on Instagram worldwide 2017
X_Axis['State']: ['London', 'New_York', 'Paris', 'Dubai', 'Istanbul', 'Miami', 'Los_Angeles', 'Barcelona', 'Moscow', 'Chicago', 'Tokyo', 'Toronto', 'Berlin', 'Las_Vegas', 'Madrid', 'Hong_Kong', 'Amsterdam', 'Sydney', 'San_Fancisco', 'Bangkok']
Y_Axis['Number', 'of', 'hashtagged', 'posts', 'in', 'millions']: ['88.78', '88.51', '75.01', '59.64', '50.15', '44.27', '36.37', '34.11', '32.44', '31.37', '29.02', '26.31', '26.0', '24.63', '23.02', '21.74', '20.36', '20.27', '18.79', '17.66']

gold: This statistic presents the most popular cities worldwide on Instagram as of December 2017 , sorted by number of hashtagged posts . As of the measured period , London was the most popular city on Instagram with over 88.78 million mentions in hashtags .
gold_template: This statistic presents the templateTitle[0] popular templateTitle[2] templateTitle[4] on templateTitleSubject[0] as of templateTitleDate[0] , sorted by templateYLabel[0] of templateYLabel[1] templateYLabel[2] . As of the measured period , templateXValue[0] was the templateTitle[0] popular city on templateTitleSubject[0] with over templateYValue[max] templateScale mentions in hashtags .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most hashtagged in Instagram .  It shows Paris was the Most at just 17.66 degrees and Istanbul was the warmest at 88.78 degrees .  After Paris , the next Most hashtagged are London at 88.78 degrees , followed by Bangkok at 18 degrees , New_York at 88.51 degrees and then Dubai at 59.64 degrees .

Example 244:
titleEntities: {'Subject': ['Polish'], 'Date': ['2015']}
title: Polish banks ranked by brand value in 2015
X_Axis['Banking', 'Institution']: ['PKO_Bank_Polski', 'Bank_Pekao', 'Bank_Zachodni_WBK', 'mbank', 'Millennium']
Y_Axis['Brand', 'value', 'in', 'million', 'U.S.', 'dollars']: ['1594', '956', '902', '339', '295']

gold: This statistic illustrates five leading banks domiciled in Poland , ranked by the brand value as of 2015 . The highest position in the ranking was occupied by PKO Bank Polski , with a brand rank value of 1.6 billion U.S. dollars . The fifth in the ranking was Millennium , with the total brand value of 295 million U.S. dollars .
gold_template: This statistic illustrates five leading templateTitle[1] domiciled in Poland , templateTitle[2] templateTitle[3] the templateYLabel[0] templateYLabel[1] as of templateTitleDate[0] . The highest position in the ranking was occupied templateTitle[3] templateXValue[0] , with a templateYLabel[0] rank templateYLabel[1] of templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . The fifth in the ranking was templateXValue[last] , with the total templateYLabel[0] templateYLabel[1] of templateYValue[min] templateScale templateYLabel[3] templateYLabel[4] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Brand of value million at the Polish street .  \\n The highest Brand was 1594 in the mbank Banking followed by 956 million in the Bank_Pekao Banking , 1594 million in mbank and finally 295 million in Millennium .

Example 245:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Reported violent crime rate in the U.S. by state 2018
X_Axis['State', '/', 'Territory']: ['District_of_Columbia', 'Alaska', 'New_Mexico', 'Tennessee', 'Arkansas', 'Nevada', 'Louisiana', 'Alabama', 'Missouri', 'South_Carolina', 'Arizona', 'Maryland', 'Oklahoma', 'Michigan', 'California', 'Kansas', 'Delaware', 'Texas', 'South_Dakota', 'Illinois', 'Colorado', 'Florida', 'Indiana', 'North_Carolina', 'Montana', 'New_York', 'Massachusetts', 'Georgia', 'Virginia', 'Pennsylvania', 'West_Virginia', 'Washington', 'Oregon', 'Nebraska', 'North_Dakota', 'Ohio', 'Iowa', 'Hawaii', 'Wyoming', 'Mississippi', 'United_States', 'Idaho', 'Minnesota', 'Rhode_Island', 'Wisconsin', 'Kentucky', 'New_Jersey', 'Connecticut', 'Vermont', 'New_Hampshire', 'Utah', 'Maine']
Y_Axis['Reported', 'violent', 'crime', 'rate', 'per', '100,000', 'population']: ['995.9', '885.0', '856.6', '623.7', '543.6', '541.1', '537.5', '519.6', '502.1', '488.3', '474.9', '468.7', '466.1', '449.4', '447.4', '439.0', '423.6', '410.9', '404.7', '404.1', '397.2', '384.9', '382.3', '377.6', '374.1', '350.5', '338.1', '326.6', '311.5', '306.0', '295.4', '289.9', '285.5', '284.8', '280.6', '279.9', '250.1', '248.6', '237.5', '234.4', '233.1', '227.1', '220.4', '219.1', '212.2', '211.9', '208.1', '207.4', '200.0', '173.2', '172.0', '112.1']

gold: In 2018 , the District of Columbia had the highest reported violent crime rate in the United States , with 995.9 violent crimes per 100,000 of the population . Maine had the lowest reported violent crime rate , with 112.1 offenses per 100,000 of the population . Life in the District The District of Columbia has seen a fluctuating population over the past few decades .
gold_template: In templateTitleDate[0] , the templateXValue[0] of templateXValue[0] had the highest templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] in the templateXValue[40] , with templateYValue[max] templateYLabel[1] crimes templateYLabel[4] 100,000 of the templateYLabel[6] . templateXValue[last] had the lowest templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] , with templateYValue[min] offenses templateYLabel[4] 100,000 of the templateYLabel[6] . Life in the templateXValue[0] The templateXValue[0] of templateXValue[0] has seen a fluctuating templateYLabel[6] over the past few decades .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Reported violent in U.S. \n It demonstrates that Arkansas is the Reported , with a Reported of 995.9 violent , while New_Mexico is the coldest , with a Reported of 112.1 violent .

Example 246:
titleEntities: {'Subject': ['U.S.from'], 'Date': ['1900', '2016']}
title: Fatality numbers from heat waves and cold waves in the U.S.from 1900 to 2016
X_Axis['Type,', 'Year,', 'Location']: ['Heat_wave_1980_Kansas_City_Missouri_St_Loius', 'Heat_wave_1936_Illinois', 'Heat_wave_1995_Missouri_Oklahoma_Illinois', 'Heat_wave_1999_Illinois_Missouri_Wisconsin', 'Heat_wave_1983', 'Heat_wave_1966_St_Louis_Missouri', 'Heat_wave_2006_California', 'Cold_wave_1963', 'Heat_wave_1998_Arizona_Florida_Colorado', 'Heat_wave_2012_Washington_DC_Iowa_Virginia_North_Carolina']
Y_Axis['Number', 'of', 'fatalities']: ['1260', '1193', '670', '257', '188', '182', '164', '150', '130', '107']

gold: This statistic shows a list of heat waves and cold waves experienced in the United States from 1900 to 2016 , by the number of fatalities that occurred as a result . In the deadliest event on record , around 1,260 people lost their lives as a result of a heat wave in 1980 in Missouri and Tennessee .
gold_template: This statistic shows a list of templateXValue[0] templateTitle[4] and templateXValue[7] templateTitle[4] experienced in the country templateTitleSubject[0] templateTitleDate[min] to templateTitleDate[max] , by the templateYLabel[0] of templateYLabel[1] that occurred as a result . In the deadliest event on record , around templateYValue[max] people lost their lives as a result of a templateXValue[0] in templateXValue[0] in templateXValue[0] and Tennessee .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Fatality numbers from in the heat competirion .  \\n From the chart we see that the Heat_wave_1983 Type, made the Fatality fatalities by some margin , with only 107 .  Heat_wave_1936_Illinois and Heat_wave_1980_Kansas_City_Missouri_St_Loius made a respectable 1193 and 1260 fatalities , with Heat_wave_2012_Washington_DC_Iowa_Virginia_North_Carolina and Heat_wave_1999_Illinois_Missouri_Wisconsin not far behind , at 107 and 257 respectively .

Example 247:
titleEntities: {'Subject': ['Market'], 'Date': ['2016']}
title: Market share of leading global payment card manufacturers 2016
X_Axis['Manufactor']: ['Gemalto_(Netherlands)', 'Oberthur_(France)', 'Perfect_Plastic_(U.S.)', 'Giesecke_&_Devrient_(Germany)']
Y_Axis['Market', 'share']: ['15.6', '9.5', '9.1', '8.4']

gold: This statistic presents the market share of leading of leading payment card manufacturers worldwide in 2016 . Gemalto , a company headquartered in the Netherlands , led the ranking in 2016 , with a market share of 15.6 percent .
gold_template: This statistic presents the templateYLabel[0] templateYLabel[1] of templateTitle[2] of templateTitle[2] templateTitle[4] templateTitle[5] templateTitle[6] worldwide in templateTitleDate[0] . templateXValue[0] , a company headquartered in the Netherlands , led the ranking in templateTitleDate[0] , with a templateYLabel[0] templateYLabel[1] of templateYValue[max] templateScale .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Market share on Market in the payment 2016 on different continents .  The most Market share was in Giesecke_&_Devrient_(Germany) where £ 15.6 million was share .  The amount in Oberthur_(France) was a little lower at £ 9.5 ,000,000 .

Example 248:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2012']}
title: U.S. most often forgotten items on vaction 2012
X_Axis['Cell', 'Phone', 'Accessory']: ['Cell_phone_charger', 'Sunscreen', 'Razor', 'Toothbrush', 'Sunglasses']
Y_Axis['Percentage', 'of', 'respondents']: ['24', '20', '18', '15', '14']

gold: This survey depicts the most common items forgotten on vacation by U.S. consumers . Some 24 percent of respondents stated they are most likely to have forgotten to bring a charger for their cell phone .
gold_template: This survey depicts the templateTitle[1] common templateTitle[4] templateTitle[3] on vacation by templateTitleSubject[0] consumers . Some templateYValue[max] templateScale of templateYLabel[1] stated they are templateTitle[1] likely to have templateTitle[3] to bring a templateXValue[0] for their templateXValue[0] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at templateTitleSubject[0] . In templateXValue[0] there was templateYValue[max] fatalities . This templateNegativeTrend by 16.6 templateScale by templateXValue[1] and then there was a massive drop of 36 templateScale in templateXValue[2] .
generated: The chart shows the Percentage of respondents at U.S. In Cell_phone_charger there was 24 fatalities .  This decreased by 16.6 percentage by Sunscreen and then there was a massive drop of 36 percentage in Razor .

Example 249:
titleEntities: {'Subject': ['EPC'], 'Date': ['2019']}
title: Global EPC market value forecast by region 2019
X_Axis['Country']: ['North_America', 'Asia/Australia', 'Western_Europe', 'Middle_East', 'South_America', 'Eastern_Europe', 'Africa']
Y_Axis['Market', 'value', 'in', 'trillion', 'U.S.', 'dollars']: ['2.02', '1.95', '1.62', '0.63', '0.63', '0.53', '0.22']

gold: This statistic provides a projection of the engineering , procurement , and construction ( EPC ) market value at the end of 2019 , broken down by world region . By the end of that year , Western Europe 's EPC market is expected to reach a value of 1.62 trillion U.S. dollars .
gold_template: This statistic provides a projection of the engineering , procurement , and construction ( templateTitleSubject[0] ) templateYLabel[0] templateYLabel[1] at the end of templateTitleDate[0] , broken down templateTitle[5] world templateTitle[6] . templateTitle[5] the end of that year , templateXValue[2] 's templateTitleSubject[0] templateYLabel[0] is expected to reach a templateYLabel[1] of templateYValue[2] templateScale templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Global EPC market value the Market of value they 've had .  \n It shows North_America has had 2.02 value , Asia/Australia has had the Global at 0.22 value , Western_Europe has had 1.62 , Middle_East has had 0.63 , South_America has had the most value at 2.02 and Africa has had 0.22 value .

Example 250:
titleEntities: {'Subject': ['Washington'], 'Date': ['2018']}
title: Real GDP of Washington , by industry 2018
X_Axis['Industry']: ['Finance_insurance_real_estate_rental_and_leasing', 'Information', 'Government_and_government_enterprises', 'Manufacturing', 'Professional_and_business_services', 'Retail_trade', 'Educational_services_health_care_and_social_assistance', 'Wholesale_trade', 'Construction', 'Arts_entertainment_recreation_accommodation_and_food_services', 'Transportation_and_warehousing', 'Agriculture_forestry_fishing_and_hunting', 'Utilities', 'Mining_quarrying_and_oil_and_gas_extraction']
Y_Axis['Real', 'value', 'added', 'in', 'billion', 'chained', '(2012)', 'U.S.', 'dollars']: ['83.45', '72.82', '61.44', '59.03', '55.65', '45.77', '35.38', '26.47', '18.87', '17.69', '13.45', '9.65', '3.94', '0.65']

gold: This graph shows the real value added to the Gross Domestic Product ( GDP ) of Washington in 2018 , by industry . In 2018 , the construction industry added 18.87 billion chained 2012 U.S. dollars of value to the state GDP .
gold_template: This graph shows the templateXValue[0] templateYLabel[1] templateYLabel[2] to the Gross Domestic Product ( templateTitle[1] ) of templateTitleSubject[0] in templateTitleDate[0] , templateTitle[3] templateXLabel[0] . In templateTitleDate[0] , the templateXValue[8] templateXLabel[0] templateYLabel[2] templateYValue[8] templateScale templateYLabel[4] 2012 templateYLabel[6] templateYLabel[7] of templateYLabel[1] to the state templateTitle[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Real GDP in Washington .  It shows Government_and_government_enterprises was the Real at just 0.65 degrees and Professional_and_business_services was the warmest at 83.45 value .  After Government_and_government_enterprises , the next Real GDP are Finance_insurance_real_estate_rental_and_leasing at 83.45 degrees , followed by Mining_quarrying_and_oil_and_gas_extraction at 18 degrees , Information at 72.82 degrees and then Manufacturing at 59.03 degrees .

Example 251:
titleEntities: {'Subject': ['Canada'], 'Date': ['2017', '2017']}
title: Leading convention centers in Canada as of June 2017 , by size
X_Axis['Buildings']: ['Enercare_Centre', 'The_Toronto_Congress_Centre', 'The_International_Centre_Toronto', 'Metro_Toronto_Convention_Centre', 'Evraz_Place', 'Olympic_Park', 'Northlands', 'Calgary_Stampede_Park', 'Place_Bonaventure', 'Vancouver_Convention_Centre']
Y_Axis['Exhibition', 'space', 'in', 'thousand', 'square', 'feet']: ['1000.0', '1000.0', '500.0', '460.0', '452.0', '410.0', '401.0', '400.0', '315.0', '311.5']

gold: This statistic shows the leading convention centers in Canada as of June 2017 , by size . The Enercare Centre and The Toronto Congress Centre were the largest convention centers in Canada at one million square feet each .
gold_template: This statistic shows the templateTitle[0] templateXValue[3] templateTitle[2] in templateTitleSubject[0] as of templateTitle[4] templateTitleDate[0] , templateTitle[6] templateTitle[7] . The templateXValue[0] and The templateXValue[1] templateXValue[0] were the largest templateXValue[3] templateTitle[2] in templateTitleSubject[0] at templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] each .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading convention centers in the Canada competirion .  \\n From the chart we see that the Evraz_Place Buildings made the Leading space by some margin , with only 311.5 The_Toronto_Congress_Centre and Enercare_Centre made a respectable 1000.0 and space , with Vancouver_Convention_Centre and Metro_Toronto_Convention_Centre not far behind , at 311.5 and 460.0 respectively .

Example 252:
titleEntities: {'Subject': ['Japan'], 'Date': ['2017']}
title: Main export partners for Japan 2017
X_Axis['Country']: ['United_States', 'China', 'South_Korea', 'Hong_Kong', 'Thailand']
Y_Axis['Share', 'of', 'total', 'exports']: ['19.4', '19', '7.6', '5.1', '4.2']

gold: The statistic shows the main export partners for Japan in 2017 . In 2017 , the most important export partner for Japan were the United States , accounting for 19.4 percent of all exports .
gold_template: The statistic shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitleSubject[0] in templateTitleDate[0] . In templateTitleDate[0] , the most important templateTitle[1] partner templateTitle[3] templateTitleSubject[0] were the templateXValue[0] , accounting templateTitle[3] templateYValue[max] templateScale of all templateYLabel[2] .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Share of Japan partners in Japan .  We can see that both China and South_Korea have a very small amount whilst Thailand , Hong_Kong and United_States have a much higher amount . 

Example 253:
titleEntities: {'Subject': ['CAGR'], 'Date': ['2018']}
title: The world 's fastest growing retailers in 2018 , based on retail revenue CAGR
X_Axis['Retailers', '']: ['Reliance_Industries_Limited/Reliance_Retail', 'Wayfair_Inc.', 'Vipshop_Holdings_Limited', 'JD.com_Inc.', 'A101_Yeni_Mağazacılık_A.S', 'Action_Nederland_BV', 'JD_Sports_Fashion_Plc', 'Zalando_SE', 'Albertsons_Companies_Inc.', 'Dollar_Tree_Inc.']
Y_Axis['FY', '2013-2018', 'retail', 'revenue', 'CAGR']: ['55.8', '49.2', '47.8', '44.1', '43.6', '29.6', '28', '25', '24.7', '23.8']

gold: This statistic shows the world 's fastest growing retailers in 2018 , based on retail revenue compound annual growth rate from FY 2013 to 2018 . Reliance Industries Limited/Reliance Retail was the world 's fastest growing retailer in that period , with a retail revenue CAGR of 55.8 percent . The company had retail revenues of 18.5 billion U.S. dollars that year .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateXLabel[0] in templateTitleDate[0] , templateTitle[6] on templateXValue[0] templateYLabel[3] compound annual growth rate from templateYLabel[0] 2013 to templateTitleDate[0] . templateXValue[0] was the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] retailer in that period , with a templateXValue[0] templateYLabel[3] templateYLabel[4] of templateYValue[max] templateScale . The company had templateXValue[0] revenues of 18.5 templateScale U.S. dollars that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the world 's fastest in the growing competirion .  \\n From the chart we see that the A101_Yeni_Mağazacılık_A.S Retailers made the world 2013-2018 by some margin , with only 23.8 Wayfair_Inc. and Reliance_Industries_Limited/Reliance_Retail made a respectable 49.2 and 55.8 2013-2018 , with Dollar_Tree_Inc. and JD.com_Inc. not far behind , at 23.8 and 44.1 respectively .

Example 254:
titleEntities: {'Subject': ['Android', 'UK'], 'Date': ['2017']}
title: Leading Android gaming app reach in the UK 2017
X_Axis['Android', 'game', 'apps']: ['Candy_Crush_Saga', 'Subway_Surfers', 'Candy_Crush_Soda_Saga', 'Temple_Run_2', 'Pou', 'Pet_Rescue_Saga', 'Despicable_Me', 'Temple_Run', 'Farm_Heroes_Saga', 'My_Talking_Tom', 'Solitaire', 'Bubble_Shooter', 'Fast_Racing_3D', 'Hill_Climb_Racing', 'Angry_Birds', 'Angry_Birds_Star_Wars', 'Hay_Day', 'Hungry_Shark_Evolution', 'Trivia_Crack', 'Angry_Birds_Rio']
Y_Axis['Penetration', 'rate', 'among', 'Android', 'mobile', 'device', 'users']: ['22.22', '18.33', '11.67', '11.11', '9.44', '7.22', '6.11', '6.11', '5.56', '5', '5', '4.44', '4.44', '3.89', '3.33', '3.33', '3.33', '3.33', '3.33', '2.78']

gold: This statistic gives information on the market reach of the most popular Android gaming apps in the United Kingdom ( UK ) as of June 2017 . During a survey period , Shared2you found that Candy Crush Saga had a 22.22 percent reach among Android mobile device users in the United Kingdom .
gold_template: This statistic gives information on the market templateTitle[4] of the most popular templateXLabel[0] templateTitle[2] templateXLabel[2] in the United Kingdom ( templateTitleSubject[1] ) as of templateTitleDate[0] . During a survey period , Shared2you found that templateXValue[0] had a templateYValue[max] templateScale templateTitle[4] templateYLabel[2] templateXLabel[0] templateYLabel[4] templateYLabel[5] templateYLabel[6] in the United Kingdom .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading Android in .  It shows Candy_Crush_Soda_Saga was the Leading at just 2.78 degrees and Pou was the warmest at 22.22 degrees .  After Candy_Crush_Soda_Saga , the next Leading Android are Candy_Crush_Saga at 22.22 degrees , followed by Angry_Birds_Rio at 18 degrees , Subway_Surfers at 18.33 degrees and then Temple_Run_2 at 11.11 degrees .

Example 255:
titleEntities: {'Subject': ['Obamacare U.S.'], 'Date': ['2019']}
title: Number of sign-ups during 2019 Obamacare open enrollment , by U.S. state
X_Axis['State']: ['Florida', 'California', 'Texas', 'North_Carolina', 'Georgia', 'Pennsylvania', 'Virginia', 'Illinois', 'Massachusetts', 'Michigan', 'New_York', 'New_Jersey', 'Washington', 'Tennessee', 'Missouri', 'South_Carolina', 'Ohio', 'Wisconsin', 'Utah', 'Colorado', 'Alabama', 'Arizona', 'Maryland', 'Oklahoma', 'Indiana', 'Oregon', 'Minnesota', 'Connecticut', 'Idaho', 'Louisiana', 'Kansas', 'Mississippi', 'Nebraska', 'Kentucky', 'Nevada', 'Maine', 'Arkansas', 'Iowa', 'Montana', 'New_Mexico', 'New_Hampshire', 'Rhode_Island', 'South_Dakota', 'Vermont', 'Wyoming', 'West_Virginia', 'Delaware', 'North_Dakota', 'District_of_Columbia', 'Hawaii', 'Alaska']
Y_Axis['Number', 'of', 'signups']: ['1783304', '1513883', '1087240', '501271', '458437', '365888', '328020', '312280', '300085', '274058', '271873', '255246', '222636', '221533', '220461', '214956', '206871', '205118', '194570', '169672', '166128', '160456', '156963', '150759', '148404', '148180', '123731', '111066', '103154', '92948', '89993', '88542', '87416', '84620', '83449', '70987', '67413', '49210', '45374', '45001', '44581', '34533', '29069', '25223', '24852', '22599', '22562', '21820', '20894', '20193', '17805']

gold: This statistic displays the number of Affordable Care Act ( Obamacare ) sign-ups during the 2019 open enrollment period as of February 2019 , by U.S. state . Until February 2019 , there were around 1.51 million sign-ups in California . Open enrollment allows U.S. citizens to enroll , switch plans , and get subsidies on various plans under the Affordable Care Act .
gold_template: This statistic displays the templateYLabel[0] of Affordable Care Act ( templateTitleSubject[0] ) templateTitle[1] templateTitle[2] the templateTitleDate[0] templateTitle[5] templateTitle[6] period as of templateTitleDate[0] , templateTitle[7] templateTitle[8] templateXLabel[0] . Until templateTitleDate[0] , there were around templateYValue[1] templateScale templateTitle[1] in templateXValue[1] . templateTitle[5] templateTitle[6] allows templateTitle[8] citizens to enroll , switch plans , and get subsidies on various plans under the Affordable Care Act .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Number sign-ups during in the 2019 competirion .  \\n From the chart we see that the Georgia State made the Number signups by some margin , with only 17805 .  California and Florida made a respectable 1513883 and 1783304 signups , with Alaska and North_Carolina not far behind , at 17805 and 501271 respectively .

Example 256:
titleEntities: {'Subject': ['Canada Goose'], 'Date': ['2019']}
title: Revenue of Canada Goose by region 2019
X_Axis['Country']: ['Total', 'Canada', 'United_States', 'Rest_of_world']
Y_Axis['Revenue', 'in', 'million', 'Canadan', 'dollars']: ['830.5', '293.3', '251.1', '286.1']

gold: Canada Goose , originally known as Metro Sportswear Ltd. , is a Canadian owned apparel company focusing on the production and sale of winter clothing . The worldwide revenue of Canada Goose amounted to approximately 830.5 million Canadian dollars in the 2019 financial year . Around 293 million dollars of this total revenue was generated in Canada , and around 251 million dollars in the United States .
gold_template: templateXValue[1] templateTitleSubject[0] , originally known as Metro Sportswear Ltd. , is a Canadian owned apparel company focusing on the production and sale of winter clothing . The worldwide templateYLabel[0] of templateXValue[1] templateTitleSubject[0] amounted to approximately templateYValue[max] templateScale Canadian templateYLabel[3] in the templateTitleDate[0] financial year . Around templateYValue[1] templateScale templateYLabel[3] of this templateXValue[0] templateYLabel[0] was generated in templateXValue[1] , and around templateYValue[min] templateScale templateYLabel[3] in the templateXValue[2] .

generated_template: This chart shows the amount of dollars ( templateScale ) that was templateTitle[1] on templateTitleSubject[0] in different continents . templateXValue[2] templateTitle[1] the most with templateYValue[max] templateScale , followed by templateXValue[0] with templateYValue[0] templateScale , templateXValue[1] with templateYValue[1] templateScale templateTitle[1] and lastly templateXValue[last] with templateYValue[min] templateScale . You expect templateXValue[last] to be last to to poverty and lack of access to templateTitleSubject[0] .
generated: This chart shows the amount of dollars ( million ) that was Canada on Canada Goose in different continents .  United_States Canada the most with 830.5 million , followed by Total with 830.5 million , Canada with 293.3 million Canada and lastly Rest_of_world with 251.1 million .  You expect Rest_of_world to be last to poverty and lack of access to Canada Goose .

Example 257:
titleEntities: {'Subject': ['Instagram', 'United States'], 'Date': ['2019']}
title: Instagram usage frequency in the United States 2019
X_Axis['Response']: ['Several_times_a_day', 'Daily', 'Several_times_a_week', 'Weekly', 'Several_times_a_month', 'Monthly', 'Less_often', "Don't_know"]
Y_Axis['Share', 'of', 'respondents']: ['37', '22', '20', '9', '5', '3', '4', '0']

gold: As of the third quarter of 2019 , it was found that 37 percent of Instagram users in the United States accessed the photo sharing app several times a day . A further 22 percent of respondents claimed that they used Instagram on a daily basis .
gold_template: As of the third quarter of templateTitleDate[0] , it was found that templateYValue[max] templateScale of templateTitleSubject[0] users in the templateTitleSubject[1] accessed the photo sharing app templateXValue[0] a templateXValue[0] . A further templateYValue[1] templateScale of templateYLabel[1] claimed that they used templateTitleSubject[0] on a templateXValue[1] basis .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Instagram usage frequency in the United competirion .  \\n From the chart we see that the Several_times_a_month Response made the Instagram respondents by some margin , with only 0 .  Daily and Several_times_a_day made a respectable 22 and 37 respondents , with Don't_know and Weekly not far behind , at 0 and 9 respectively .

Example 258:
titleEntities: {'Subject': ['Leading'], 'Date': ['2018']}
title: Leading insurance brokers worldwide 2018 , by revenue
X_Axis['Month']: ['Marsh_&_McLennan_Cos._Inc._(U.S.)', 'Aon_PLC_(UK)', 'Willis_Towers_Watson_PLC_(UK)', 'Arthur_J._Gallagher_&_Co._(U.S.)', 'Hub_International_Ltd._(U.S.)', 'BB&T_Insurance_Holdings_Inc._(U.S.)', 'Brown_&_Brown_Inc._(U.S.)', 'Lockton_Cos._LLC_(U.S.)', 'USI_Insurance_Services_LLC_(U.S.)', 'Acrisure_LLC_(U.S.)']
Y_Axis['Revenue', 'in', 'billion', 'U.S.', 'dollars']: ['16.84', '10.72', '8.41', '5.11', '2.15', '2.02', '2.01', '1.71', '1.67', '1.38']

gold: The statistic presents the leading insurance brokers worldwide in 2018 , by revenue . With revenue amounting to over 16 billion U.S. dollars in 2018 , Marsh & McLennan Cos. Inc. topped the list of leading global insurance brokers globally . Insurance brokers – additional information An insurance broker ( or insurance agent ) is an insurance specialist offering consulting services both to individuals and commercial businesses .
gold_template: The statistic presents the templateTitleSubject[0] templateXValue[5] templateTitle[2] templateTitle[3] in templateTitleDate[0] , templateTitle[5] templateYLabel[0] . With templateYLabel[0] amounting to over 16 templateScale templateYLabel[2] templateYLabel[3] in templateTitleDate[0] , templateXValue[0] topped the list of templateTitleSubject[0] global templateXValue[5] templateTitle[2] globally . templateXValue[5] templateTitle[2] – additional information An templateXValue[5] broker ( or templateXValue[5] agent ) is an templateXValue[5] specialist offering consulting templateXValue[8] both to individuals and commercial businesses .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading insurance brokers in the worldwide competirion .  \\n From the chart we see that the Hub_International_Ltd._(U.S.) Month made the Leading billion by some margin , with only 1.38 .  Aon_PLC_(UK) and Marsh_&_McLennan_Cos._Inc._(U.S.) made a respectable 10.72 and 16.84 billion , with Acrisure_LLC_(U.S.) and Arthur_J._Gallagher_&_Co._(U.S.) not far behind , at 1.38 and 5.11 respectively .

Example 259:
titleEntities: {'Subject': ['Obama'], 'Date': ['2009']}
title: Obama presidential job approval 2009 to 2017
X_Axis['Month']: ["Jan_'17", "Dec_'16", "Nov_'16", "Oct_'16", "Sep_'16", "Aug_'16", "Jul_'16", "Jun_'16", "May_'16", "Apr_'16", "Mar_'16", "Feb_'16", "Jan_'16", "Dec_'15", "Nov_'15", "Oct_'15", "Sep_'15", "Aug_'15", "Jul_'15", "Jun_'15", "May_'15", "Apr_'15", "Mar_'15", "Feb_'15", "Jan_'15", "Dec_'14", "Nov_'14", "Oct_'14", "Sep_'14", "Aug_'14", "Jul_'14", "Jun_'14", "May_'14", "Apr_'14", "Mar_'14", "Feb_'14", "Jan_'14", "Dec_'13", "Nov_'13", "Oct_'13", "Sep_'13", "Aug_'13", "Jul_'13", "Jun_'13", "May_'13", "Apr_'13", "Mar_'13", "Feb_'13", "Jan_'13", "Dec_'12", "Nov_'12", "Oct_'12", "Sep_'12", "Aug_'12", "Jul_'12", "Jun_'12", "May_'12", "Apr_'12", "Mar_'12", "Feb_'12", "Jan_'12", "Dec_'11", "Nov_'11", "Oct_'11", "Sep_'11", "Aug_'11", "Jul_'11", "Jun_'11", "May_'11", "Apr_'11", "Mar_'11", "Feb_'11", "Jan_'11", "Dec_'10", "Nov_'10", "Oct_'10", "Sep_'10", "Aug_'10", "Jul_'10", "Jun_'10", "May_'10", "Apr_'10", "Mar_'10", "Feb_'10", "Jan_'10", "Dec_'09", "Nov_'09", "Oct_'09", "Sep_'09", "Aug_'09", "Jul_'09", "Jun_'09", "May_'09", "Apr_'09", "Mar_'09", "Feb_'09", "Jan_'09"]
Y_Axis['Approval', 'rate']: ['57', '56', '56', '54', '52', '51', '51', '52', '51', '50', '51', '48', '48', '46', '47', '46', '47', '45', '46', '46', '47', '47', '46', '46', '47', '44', '42', '41', '42', '42', '42', '42', '44', '44', '43', '42', '41', '41', '41', '44', '44', '45', '46', '47', '49', '49', '48', '51', '52', '53', '51', '50', '49', '45', '46', '46', '47', '47', '46', '45', '45', '43', '43', '41', '41', '41', '44', '46', '50', '44', '47', '47', '49', '46', '45', '45', '45', '44', '46', '46', '48', '48', '49', '50', '49', '50', '51', '53', '52', '57', '61', '61', '65', '63', '62', '64', '66']

gold: This statistic shows the job approval ratings of U.S. president Barack Obama , on a monthly basis during his time in office from 2009 to 2017 . The survey is conducted doing telephone interviews among about 15,000 adults per month in the U.S . The graph shows the results for the monthly aggregate to depict an annual trend .
gold_template: This statistic shows the templateTitle[2] templateYLabel[0] ratings of U.S. president Barack templateTitleSubject[0] , on a monthly basis during his time in office from templateTitleDate[min] to templateTitleDate[max] . The survey is conducted doing telephone interviews among about 15,000 adults per templateXLabel[0] in the U.S . The graph shows the results for the monthly aggregate to depict an annual trend .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Obama presidential in Obama .  \n It demonstrates that Sep_'16 is the Obama , with a Approval of 66 rate , while Nov_'16 is the coldest , with a Approval of 41 rate .

Example 260:
titleEntities: {'Subject': ['TV'], 'Date': ['2018']}
title: U.S. TV consumption : average viewing time in 2018 , by gender
X_Axis['Gender']: ['Men', 'Women']
Y_Axis['Time', 'in', 'hours']: ['3.09', '2.61']

gold: This statistic shows the average daily time per capita spent watching TV in the United States in 2018 , by gender . Overall , women spent an average of 2.61 hours per day watching T.V .
gold_template: This statistic shows the templateTitle[3] daily templateYLabel[0] per capita spent watching templateTitleSubject[0] in the templateTitle[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] . Overall , templateXValue[last] spent an templateTitle[3] of templateYValue[min] templateYLabel[1] per day watching T.V .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the U.S. TV consumption , expressed in percentage three different countries .  The Women and Men have similar U.S. TV gaps at around 20 % whilst Women is doing a little better at 2.61 % .

Example 261:
titleEntities: {'Subject': ['Countries'], 'Date': ['2013']}
title: Countries with the lowest prevalence of condom use among its male population 2013
X_Axis['Country']: ['Niger', 'Madagascar', 'Mali', 'Sierra_Leone', 'Burundi', 'Ethiopia', 'DC_Congo', 'East_Timor', 'Uganda', 'Nigeria', 'Senegal', 'Benin', 'Liberia']
Y_Axis['Percentage', 'of', 'males', 'aged', '15-49']: ['4', '7', '10', '13', '14', '16', '16', '19', '19', '20', '21', '22', '24']

gold: This statistic depicts the countries with lowest prevalence of condom use among its male population worldwide as of 2013 . As of that year , Niger had the lowest prevalence of condom use among men worldwide . Only four percent of its male population aged 15 - 49 years used condoms .
gold_template: This statistic depicts the templateTitleSubject[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] templateTitle[6] templateTitle[7] templateTitle[8] templateTitle[9] worldwide as of templateTitleDate[0] . As of that year , templateXValue[0] had the templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] templateTitle[6] men worldwide . Only templateYValue[min] templateScale of templateTitle[7] templateTitle[8] templateTitle[9] templateYLabel[2] 15 - 49 years used condoms .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Countries lowest prevalence condom the Percentage of males they 've had .  \n It shows Niger has had 4 males , Madagascar has had the Countries at 4 males , Mali has had 10 , Sierra_Leone has had 13 , Burundi has had the most males at 24 and Liberia has had 24 males .

Example 262:
titleEntities: {'Subject': ['UK'], 'Date': ['2011', '2019']}
title: UK hospitality small and medium enterprise ( SME ) with growth plans Q1 2011 to Q2 2019
X_Axis['Quarter']: ['Q2_2019', 'Q1_2019', 'Q4_2018', 'Q3_2018', 'Q2_2018', 'Q1_2018', 'Q4_2017', 'Q3_2017', 'Q2_2017', 'Q1_2017', 'Q4_2016', 'Q3_2016', 'Q2_2016', 'Q1_2016', 'Q4_2015', 'Q3_2015', 'Q2_2015', 'Q1_2015', 'Q4_2014', 'Q3_2014', 'Q2_2014', 'Q1_2014', 'Q4_2013', 'Q3_2013', 'Q2_2013', 'Q1_2013', 'Q4_2012', 'Q3_2012', 'Q2_2012', 'Q1_2012', 'Q4_2011']
Y_Axis['Percentage', 'of', 'SMEs']: ['44', '52', '45', '52', '49', '46', '45', '44', '47', '52', '46', '45', '50', '49', '51', '48', '40', '45', '41', '40', '46', '50', '42', '53', '49', '40', '38', '42', '33', '39', '45']

gold: This statistic shows the share of small and medium enterprises ( SME ) in the hospitality sector with growth plans for the next 12 months in the United Kingdom ( UK ) from fourth quarter 2011 to second quarter 2019 . The peak of the period was in third quarter 2013 , when 53 percent of hospitality sector SMEs stated that they planned to grow in the following 12 months .
gold_template: This statistic shows the share of templateTitle[2] and templateTitle[3] enterprises ( templateTitleSubject[1] ) in the templateTitle[1] sector templateTitle[6] templateTitle[7] templateTitle[8] for the next 12 months in the United Kingdom ( templateTitleSubject[0] ) from fourth templateXLabel[0] templateXValue[last] to second templateXLabel[0] templateXValue[0] . The peak of the period was in third templateXLabel[0] templateXValue[22] , when templateYValue[max] templateScale of templateTitle[1] sector templateYLabel[1] stated that they planned to grow in the following 12 months .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the UK hospitality in UK .  It shows Q4_2018 was the UK at just 33 degrees and Q2_2018 was the warmest at 53 degrees .  After Q4_2018 , the next UK hospitality are Q2_2019 at 44 degrees , followed by Q4_2011 at 18 degrees , Q1_2019 at 52 degrees and then Q3_2018 at 52 degrees .

Example 263:
titleEntities: {'Subject': ['Overwatch'], 'Date': ['2018']}
title: Number of Overwatch players worldwide 2018
X_Axis['Month']: ['May_2018', 'October_2017', 'April_2017', 'January_2017', 'October_2016', 'August_2016', 'May_2016']
Y_Axis['Number', 'of', 'players', 'in', 'millions']: ['40', '35', '30', '25', '20', '15', '7']

gold: How many people play Overwatch ? Overwatch , a team-based first-person shooter video game , launched in May 2016 and already a week later it was reported to have had seven million players . As of May 2018 , Overwatch had 40 million players worldwide . Overwatch 's eSports success While the number of gamers playing Overwatch has increased dramatically , so has the appeal of the game as an eSport .
gold_template: How many people play templateTitleSubject[0] ? templateTitleSubject[0] , a team-based first-person shooter video game , launched in templateXValue[0] templateXValue[4] and already a week later it was reported to have had templateYValue[min] templateScale templateYLabel[1] . As of templateXValue[0] , templateTitleSubject[0] had templateYValue[max] templateScale templateYLabel[1] templateTitle[3] . templateTitleSubject[0] 's eSports success While the templateYLabel[0] of gamers playing templateTitleSubject[0] has templatePositiveTrend dramatically , so has the appeal of the game as an eSport .

generated_template: The chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] by templateYLabel[0] . The warmest templateXLabel[0] recorded is templateXValue[4] at over 35 degrees centigrade , followed closely templateXValue[3] and templateXValue[1] . templateXValue[last] and templateXValue[0] are not far behind templateXValue[2] is the templateTitle[0] templateXLabel[0] at a little over 15 degrees .
generated: The chart shows the Number Overwatch in by Number .  The warmest Month recorded is October_2016 at over 35 degrees centigrade , followed closely January_2017 and October_2017 .  May_2016 and May_2018 are not far behind April_2017 is the Number Month at a little over 15 degrees .

Example 264:
titleEntities: {'Subject': ['International'], 'Date': ['2018']}
title: International overnight visitors in the most popular city destinations worldwide 2018
X_Axis['Country']: ['Bangkok', 'Paris', 'London', 'Dubai', 'Singapore', 'Kuala_Lumpur', 'New_York', 'Istanbul', 'Tokyo', 'Antalya', 'Seoul', 'Osaka', 'Makkah', 'Phuket', 'Pattaya', 'Milan', 'Barcelona', 'Palma_de_Mallorca', 'Bali', 'Hong_Kong']
Y_Axis['Number', 'of', 'international', 'overnight', 'visitors', 'in', 'millions']: ['22.78', '19.1', '19.09', '15.93', '14.67', '13.79', '13.6', '13.4', '12.93', '12.41', '11.25', '10.14', '10.0', '9.89', '9.44', '9.1', '9.09', '8.96', '8.26', '8.23']

gold: Bangkok had the most international overnight visitors in 2018 with 22.78 million , followed by Paris and London with 19.1 and 19.09 million , respectively . Is Bangkok the world 's number one tourist destination ? Bangkok has become increasingly popular as a tourist attraction over the past years , and its popularity looks unlikely to wane any time soon . The number of overnight visitors to Thailand 's capital has more than doubled since 2010 .
gold_template: templateXValue[0] had the templateTitle[3] templateYLabel[1] templateYLabel[2] templateYLabel[3] in templateTitleDate[0] with templateYValue[max] templateScale , followed by templateXValue[1] and templateXValue[2] with templateYValue[1] and templateYValue[2] templateScale , respectively . Is templateXValue[0] the world 's templateYLabel[0] one tourist destination ? templateXValue[0] has become increasingly templateTitle[4] as a tourist attraction over the past years , and its popularity looks unlikely to wane any time soon . The templateYLabel[0] of templateYLabel[2] templateYLabel[3] to Thailand 's capital has more than doubled since 2010 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the International overnight in International .  It shows London was the International at just 8.23 degrees and Singapore was the warmest at 22.78 degrees .  After London , the next International overnight are Bangkok at 22.78 degrees , followed by Hong_Kong at 18 degrees , Paris at 19.1 degrees and then Dubai at 15.93 degrees .

Example 265:
titleEntities: {'Subject': ['Share'], 'Date': ['2018']}
title: Share of global fentanyl consumption in 2018 , by country
X_Axis['Country']: ['United_States', 'Germany', 'United_Kingdom', 'Spain', 'Italy', 'France', 'Canada', 'Netherlands', 'Australia', 'Belgium', 'Other_countries']
Y_Axis['Percentage', 'of', 'consumption']: ['20.8', '17.5', '15.6', '8.2', '4.7', '4.5', '3.1', '3.1', '2.1', '2', '18.4']

gold: This statistic displays the distribution of global fentanyl consumption by region in 2018 . During this year , the United Kingdom consumed approximately 15.6 percent of the world 's fentanyl . This drug can be used as an analgesic and is about 100 times more potent than morphine .
gold_template: This statistic displays the distribution of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[5] region in templateTitleDate[0] . During this year , the templateXValue[0] templateXValue[2] consumed approximately templateYValue[2] templateScale of the world 's templateTitle[2] . This drug can be used as an analgesic and is about 100 times more potent than morphine .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Share global fentanyl consumption the Percentage of consumption they 've had .  \n It shows United_States has had 20.8 consumption , Germany has had the Share at 2 consumption , United_Kingdom has had 15.6 , Spain has had 8.2 , Italy has had the most consumption at 20.8 and Other_countries has had 18.4 consumption .

Example 266:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2016', '2016']}
title: Most googled car hire keywords in the United Kingdom ( UK ) in January 2016
X_Axis['Keywords']: ['car_hire', 'car_rental', 'rent_a_car', 'rental_cars', 'car_hire_uk', 'cheap_car_hire', 'car_hire_usa', 'car_hire_spain', 'car_hire_orlando', 'car_hire_comparison', 'Other_keywords']
Y_Axis['Searches', 'in', 'thousands']: ['90.5', '40.5', '33.1', '27.1', '27.1', '18.1', '12.1', '12.1', '9.9', '9.9', '933.1']

gold: This statistic displays the most searched car hire and car rental related keywords on Google UK in January 2016 . Most popular was the term `` car hire `` , which was searched approximately 90.5 thousand times that month .
gold_template: This statistic displays the templateTitle[0] searched templateXValue[0] and templateXValue[0] templateXValue[1] related templateXValue[last] on Google templateXValue[4] in templateTitle[8] templateTitleDate[0] . templateTitle[0] popular was the term `` templateXValue[0] `` , which was searched approximately templateYValue[0] thousand times that month .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most googled car in the hire competirion .  \\n From the chart we see that the car_hire_uk Keywords made the Most thousands by some margin , with only 9.9 car_rental and car_hire made a respectable 40.5 and 90.5 thousands , with Other_keywords and rental_cars not far behind , at 933.1 and 27.1 respectively .

Example 267:
titleEntities: {'Subject': ['APAC'], 'Date': ['2018', '2018']}
title: Corruption perception index APAC 2018 , by country
X_Axis['Country']: ['New_Zealand', 'Singapore', 'Australia', 'Hong_Kong', 'Japan', 'Bhutan', 'Taiwan', 'South_Korea', 'Malaysia', 'India', 'China', 'Sri_Lanka', 'Indonesia', 'Mongolia', 'Philippines', 'Thailand', 'Timor-Leste', 'Vietnam', 'Pakistan', 'Nepal', 'Myanmar', 'Laos', 'Papua_New_Guinea', 'Bangladesh', 'Cambodia', 'Afghanistan', 'North_Korea']
Y_Axis['Index', 'score']: ['87', '85', '77', '76', '73', '68', '63', '57', '47', '41', '39', '38', '38', '37', '36', '36', '35', '33', '33', '31', '29', '29', '28', '26', '20', '16', '14']

gold: This statistic shows the perceived corruption of the countries in the Asia Pacific region , as calculated by the Corruption Perception Index in 2018 . In that year , New Zealand was perceived as the least corrupt country with an index score of 87 out of 100 .
gold_template: This statistic shows the perceived templateTitle[0] of the countries in the Asia Pacific region , as calculated templateTitle[5] the templateTitle[0] templateTitle[1] templateYLabel[0] in templateTitleDate[0] . In that year , templateXValue[0] was perceived as the least corrupt templateXLabel[0] with an templateYLabel[0] templateYLabel[1] of templateYValue[max] out of 100 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Corruption perception in APAC .  It shows Australia was the Corruption at just 14 degrees and Japan was the warmest at 87 degrees .  After Australia , the next Corruption perception are New_Zealand at 87 degrees , followed by North_Korea at 18 degrees , Singapore at 85 degrees and then Hong_Kong at 76 degrees .

Example 268:
titleEntities: {'Subject': ['U.S. GDP'], 'Date': ['2018']}
title: Value added to U.S. GDP , by industry 2018
X_Axis['Industry']: ['Finance_insurance_real_estate_rental_and_leasing', 'Professional_and_business_services', 'Government', 'Manufacturing', 'Educational_services_health_care_and_social_assistance', 'Wholesale_trade', 'Retail_trade', 'Information', 'Construction', 'Arts_entertainment_recreation_accommodation_and_food_services', 'Transportation_and_warehousing', 'Other_services_except_government', 'Mining', 'Utilities', 'Agriculture_forestry_fishing_and_hunting']
Y_Axis['Value', 'added', 'in', 'billion', 'U.S.', 'dollars']: ['4239.3', '2576.2', '2504.7', '2334.6', '1780.3', '1234.0', '1132.5', '1125.9', '840.0', '839.1', '648.0', '434.7', '321.1', '319.4', '164.2']

gold: In 2018 , the finance , real estate , insurance , rental , and leasing industry added the most value to the GDP to the United States in 2018 . In that year , this industry added 4.23 trillion U.S. dollars to the national GDP . Gross Domestic Product Gross domestic product is a measure of how much a country produces in a certain amount of time .
gold_template: In templateTitleDate[0] , the templateXValue[0] , templateXValue[0] , templateXValue[0] , templateXValue[0] , and templateXValue[0] templateXLabel[0] templateYLabel[1] the most templateYLabel[0] to the templateTitleSubject[0] to the templateTitle[2] in templateTitleDate[0] . In that year , this templateXLabel[0] templateYLabel[1] 4.23 templateScale templateYLabel[3] templateYLabel[4] to the national templateTitleSubject[0] . Gross Domestic Product Gross domestic product is a measure of how much a country produces in a certain amount of time .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Value added in U.S. GDP .  It shows Government was the Value at just 164.2 degrees and Educational_services_health_care_and_social_assistance was the warmest at 4239.3 added .  After Government , the next Value added are Finance_insurance_real_estate_rental_and_leasing at 4239.3 degrees , followed by Agriculture_forestry_fishing_and_hunting at 18 degrees , Professional_and_business_services at 2576.2 degrees and then Manufacturing at 2334.6 degrees .

Example 269:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2000', '2029']}
title: U.S. customs duty revenue and forecast 2000 to 2029
X_Axis['Fiscal', 'Year']: ["'29", "'28", "'27", "'26", "'25", "'24", "'23", "'22", "'21", "'20", "'19", "'18", "'17", "'16", "'15", "'14", "'13", "'12", "'11", "'10", "'09", "'08", "'07", "'06", "'05", "'04", "'03", "'02", "'01", "'00"]
Y_Axis['Revenue', 'in', 'billion', 'U.S.', 'dollars']: ['105.0', '102.0', '100.0', '97.0', '93.0', '90.0', '88.0', '85.0', '82.0', '79.0', '74.0', '41.3', '34.6', '34.8', '35.0', '33.9', '31.8', '30.3', '29.5', '25.3', '22.5', '27.6', '26.0', '24.8', '23.4', '21.1', '19.9', '18.6', '19.4', '19.9']

gold: The statistic shows the customs duty revenue from 2000 to 2018 with an additional forecast from 2019 to 2029 . Revenue from customs duty amounted to 41.3 billion U.S. dollars in 2018 . The forecast predicts an increase in customs duty revenue up to 105 billion U.S. dollars in 2029 .
gold_template: The statistic shows the templateTitle[1] templateTitle[2] templateYLabel[0] from templateTitleDate[min] to 2018 with an additional templateTitle[4] from 2019 to templateTitleDate[max] . templateYLabel[0] from templateTitle[1] templateTitle[2] amounted to templateYValue[11] templateScale templateYLabel[2] templateYLabel[3] in 2018 . The templateTitle[4] predicts an templatePositiveTrend in templateTitle[1] templateTitle[2] templateYLabel[0] up to templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] in templateTitleDate[max] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the U.S. customs in U.S. It shows '27 was the U.S. at just 18.6 degrees and '25 was the warmest at 105.0 degrees .  After '27 , the next U.S. customs are '29 at 105.0 degrees , followed by '00 at 18 degrees , '28 at 102.0 degrees and then '26 at 97.0 degrees .

Example 270:
titleEntities: {'Subject': ['European'], 'Date': ['2017']}
title: Number of opticians in selected European countries 2017
X_Axis['Country']: ['France', 'Switzerland', 'Belgium', 'Bulgaria', 'Italy', 'Germany', 'Netherlands', 'Slovenia', 'Portugal', 'Cyprus', 'Croatia', 'Hungary', 'Austria', 'Czech_Republic', 'Poland', 'Slovakia', 'United_Kingdom', 'Greece', 'Turkey', 'Ukraine', 'Denmark', 'Serbia', 'Ireland', 'Latvia', 'Estonia', 'Romania', 'Norway']
Y_Axis['Number', 'of', 'opticians', 'per', '10,000', 'population']: ['5.34', '3.25', '3.1', '3.08', '2.68', '2.59', '2.47', '2.42', '2.42', '2.16', '2.08', '1.83', '1.76', '1.52', '1.29', '1.01', '1.01', '0.91', '0.81', '0.67', '0.35', '0.34', '0.32', '0.25', '0.23', '0.21', '0.0']

gold: This statistic displays the number of opticians per 10,000 population working in selected countries in Europe in 2017 . In this year , France had the highest number of opticians with 5.34 opticians per 10,000 population , this was closely followed by Switzerland with 3.25 opticians per 10,000 population and Belgium with 3.1 opticians per 10,000 population . The source provides the information that the professions of Optometry and Optics in Spain and the Nordic countries are combined in one , as optometrists .
gold_template: This statistic displays the templateYLabel[0] of templateYLabel[1] templateYLabel[2] 10,000 templateYLabel[4] working in templateTitle[2] templateTitle[4] in Europe in templateTitleDate[0] . In this year , templateXValue[0] had the highest templateYLabel[0] of templateYLabel[1] with templateYValue[max] templateYLabel[1] templateYLabel[2] 10,000 templateYLabel[4] , this was closely followed by templateXValue[1] with templateYValue[1] templateYLabel[1] templateYLabel[2] 10,000 templateYLabel[4] and templateXValue[2] with templateYValue[2] templateYLabel[1] templateYLabel[2] 10,000 templateYLabel[4] . The source provides the information that the professions of Optometry and Optics in Spain and the Nordic templateTitle[4] are combined in templateYValue[14] , as optometrists .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number opticians in European .  It shows Belgium was the Number at just 0.0 degrees and Italy was the warmest at 5.34 degrees .  After Belgium , the next Number opticians are France at 5.34 degrees , followed by Norway at 18 degrees , Switzerland at 3.25 degrees and then Bulgaria at 3.08 degrees .

Example 271:
titleEntities: {'Subject': ['Major'], 'Date': []}
title: Major rice importing countries worldwide 2018/2019
X_Axis['Country']: ['China', 'Philippines', 'Nigeria', 'European_Union', 'Bangladesh', "Cote_d'Ivoire", 'Iran', 'Iraq', 'Saudi_Arabia', 'Senegal']
Y_Axis['Import', 'in', 'thousand', 'metric', 'tons']: ['4500', '2300', '2200', '2000', '1600', '1600', '1400', '1300', '1300', '1250']

gold: This statistic shows the principal rice importing countries worldwide in 2018/2019 , measured in 1,000 metric tons . As of February 2019 , rice import to China is projected to amount to about 4.5 million metric tons in 2018/2019 . The total production of milled rice worldwide amounted to about 481.1 million metric tons that year .
gold_template: This statistic shows the principal templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] in templateTitle[5] , measured in 1,000 templateYLabel[2] templateYLabel[3] . As of 2019 , templateTitle[1] templateYLabel[0] to templateXValue[0] is projected to amount to about templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] in templateTitle[5] . The total production of milled templateTitle[1] templateTitle[4] amounted to about 481.1 templateScale templateYLabel[2] templateYLabel[3] that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Major rice importing countries the Import of thousand they 've had .  \n It shows China has had 4500 thousand , Philippines has had the Major at 1250 thousand , Nigeria has had 2200 , European_Union has had 2000 , Bangladesh has had the most thousand at 4500 and Senegal has had 1250 thousand .

Example 272:
titleEntities: {'Subject': ['Digital Market Outlook', 'CAGR'], 'Date': ['2019', '2023']}
title: Digital Market Outlook : retail e-commerce sales CAGR in selected markets 2019 to 2023
X_Axis['Country']: ['India', 'Spain', 'China', 'Indonesia', 'Argentina', 'South_Africa', 'Saudi_Arabia', 'Global', 'Mexico', 'United_States', 'France', 'Canada', 'Germany', 'Australia', 'United_Kingdom', 'Japan', 'South_Korea', 'Turkey', 'Brazil']
Y_Axis['Compound', 'annual', 'growth', 'rate']: ['17.8', '11.1', '11', '10.3', '10.1', '9.9', '9.5', '8.9', '8.6', '7.8', '7.7', '6.8', '6.3', '6.2', '5.7', '4.9', '4', '2.9', '2']

gold: This statistic shows the retail e-commerce sales compound annual growth rate from 2019 to 2023 in leading countries . According to Statista calculations , India will rank first in terms of B2C e-commerce development with a compound annual growth rate of 17.8 in the projected period . Online shopping is one of the most popular internet activities worldwide - with some product categories being more popular than others .
gold_template: This statistic shows the templateTitle[3] templateTitle[4] templateTitle[5] templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] from templateTitleDate[min] to templateTitleDate[max] in leading countries . According to Statista calculations , templateXValue[0] will rank first in terms of B2C templateTitle[4] development with a templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] of templateYValue[max] in the projected period . Online shopping is one of the most popular internet activities worldwide - with some product categories being more popular than others .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Digital Market in Digital Market Outlook .  It shows China was the Digital at just 2 degrees and Argentina was the warmest at 17.8 degrees .  After China , the next Digital Market are India at 17.8 degrees , followed by Brazil at 18 degrees , Spain at 11.1 degrees and then Indonesia at 10.3 degrees .

Example 273:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Most popular entertainment apps in the U.S. 2019 , by reach
X_Axis['Entertainment', 'Apps']: ['YouTube_(main)', 'IMDb_(main)', 'Netflix_(main)', 'Apple_Music', 'Spotify', 'Pandora_Radio', 'Hulu', 'iHeartRadio', 'Google_Play_Music', 'Amazon_Prime_Video', 'Amazon_Music', 'SoundCloud', 'Vimeo_(main)', 'Shazam', 'Fandango_(main)']
Y_Axis['Mobile', 'reach']: ['87.7', '27.3', '24.9', '23.8', '23.7', '16.9', '14.2', '13.9', '11.7', '10.5', '8.8', '8.2', '8.1', '7', '6.8']

gold: In September 2019 , 87.7 percent of mobile users accessed the YouTube app , making it the most popular mobile music and video apps in the United States . Spotify had a mobile U.S. audience reach of 23.7 percent among mobile U.S. audiences .
gold_template: In templateTitleDate[0] , templateYValue[max] templateScale of templateYLabel[0] users accessed the templateXValue[0] app , making it the templateTitle[0] templateTitle[1] templateYLabel[0] templateXValue[3] and templateXValue[9] templateXLabel[1] in the templateTitle[4] . templateXValue[4] had a templateYLabel[0] templateTitleSubject[0] audience templateYLabel[1] of templateYValue[4] templateScale among templateYLabel[0] templateTitleSubject[0] audiences .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most popular in U.S. It shows Netflix_(main) was the Most at just 6.8 degrees and Spotify was the warmest at 87.7 reach .  After Netflix_(main) , the next Most popular are YouTube_(main) at 87.7 degrees , followed by Fandango_(main) at 18 degrees , IMDb_(main) at 27.3 degrees and then Apple_Music at 23.8 degrees .

Example 274:
titleEntities: {'Subject': ['Dublin'], 'Date': ['2019']}
title: Prime office rental prices in Dublin Q1 2015-Q3 2019
X_Axis['Quarter']: ["Q1_'15", "Q2_'15", "Q3_'15", "Q4_'15", "Q1_'16", "Q2_'16", "Q3_'16", "Q4_'16", "Q1_'17", "Q2_'17", "Q3_'17", "Q4_'17", "Q1_'18_", "Q2_'18", "Q3_'18", "Q4_'18", "Q1_'19", "Q2_'19", "Q3_'19"]
Y_Axis['Cost', 'per', 'square', 'meter', 'in', 'euros']: ['538', '552', '592', '619', '619', '619', '646', '646', '646', '646', '673', '673', '0', '673', '673', '0', '673', '673', '673']

gold: The statistic displays the rental costs per square meter of prime office spaces in Dublin , Ireland , from the first quarter of 2015 to the third quarter of 2019 . It can be seen that the price of prime office properties in Dublin grew over time , reaching 673 euros per square meter per year as of the 3rd quarter of 2017 and remaining constant up until the third quarter 2019 .
gold_template: The statistic displays the templateTitle[2] costs templateYLabel[1] templateYLabel[2] templateYLabel[3] of templateTitle[0] templateTitle[1] spaces in templateTitleSubject[0] , Ireland , from the first templateXLabel[0] of 2015 to the third templateXLabel[0] of templateTitleDate[0] . It can be seen that the price of templateTitle[0] templateTitle[1] properties in templateTitleSubject[0] templatePositiveTrend over time , reaching templateYValue[max] templateYLabel[4] templateYLabel[1] templateYLabel[2] templateYLabel[3] templateYLabel[1] year as of the 3rd templateXLabel[0] of 2017 and remaining constant up until the third templateXLabel[0] templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Prime office in Dublin .  It shows Q3_'15 was the Prime at just 0 degrees and Q1_'16 was the warmest at 673 degrees .  After Q3_'15 , the next Prime office are Q1_'15 at 538 degrees , followed by Q3_'19 at 18 degrees , Q2_'15 at 552 degrees and then Q4_'15 at 619 degrees .

Example 275:
titleEntities: {'Subject': ['Biggest'], 'Date': ['2010', '2017']}
title: Biggest data leaks worldwide 2010 to 2017
X_Axis['Data', 'Leak']: ['The_Panama_Papers_(2016)', 'The_Paradise_Papers_(2017)', 'Offshore_Leaks_(2013)', 'Luxemburg_Leaks_(2014)', 'Swiss_Leaks_/_HSBC_files_(2015)', 'Cablegate_/_Wikileaks_(2010)']
Y_Axis['Data', 'leak', 'volume']: ['2600.0', '1400.0', '260.0', '4.0', '3.3', '1.7']

gold: This statistic compares the scale of November 2017 Paradise Papers data leak compared to other data leaks worldwide as of November 2017 . The Paradise Papers leak comprised 1.4 terabytes of data , compared to only 260 gigabytes of data revealed by the ICIJ in the Offshore Leaks in 2013 . The biggest data leak so far is the Panama Papers data leak , which amounted to 2.6 terabytes .
gold_template: This statistic compares the scale of templateTitleDate[max] templateXValue[1] templateXValue[0] templateXLabel[0] templateXLabel[1] compared to other templateXLabel[0] templateXValue[2] templateTitle[3] as of templateTitleDate[max] . The templateXValue[1] templateXValue[0] templateXLabel[1] comprised 1.4 terabytes of templateXLabel[0] , compared to only templateYValue[2] gigabytes of templateXLabel[0] revealed by the ICIJ in the templateXValue[2] in 2013 . The templateTitleSubject[0] templateXLabel[0] templateXLabel[1] so far is the templateXValue[0] templateXLabel[0] templateXLabel[1] , which amounted to 2.6 terabytes .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Data of leak made by leaks in a worldwide 2010 .  \\n From the chart we see that the Offshore_Leaks_(2013) Data was the Biggest data in the 2010 with 2600.0 leak .  The next Data to make the most leak was the Luxemburg_Leaks_(2014) Data with 4.0 leak closely followed by the Cablegate_/_Wikileaks_(2010) Data with 1.7 leak .

Example 276:
titleEntities: {'Subject': ['France'], 'Date': ['2019']}
title: Grocery market share in France 2019
X_Axis['Grocery', 'Stores']: ['E._Leclerc_Group', 'Carrefour_Group', 'Intermarché_Group', 'Système_U_Group', 'Casino_Group', 'Auchan_Group', 'Lidl_Group', 'Delhaize_Group', 'Aldi_Group', 'Other']
Y_Axis['Market', 'share', 'of', 'total', 'grocers']: ['21.6', '19.8', '15.3', '10.7', '10.6', '10', '6.2', '2.8', '2.3', '0.7']

gold: This statistic shows the market share of grocery stores in France for the 12 weeks ending December 17 , 2019 . E. Leclerc holds the largest market share with 21.6 percent , followed by Carrefour with a 19.8 percent share . The grocery retail landscape in France has been dominated by the Leclerc Group and Carrefour group , who have been fighting neck in neck for the lead position .
gold_template: This statistic shows the templateYLabel[0] templateYLabel[1] of templateXLabel[0] templateXLabel[1] in templateTitleSubject[0] for the 12 weeks ending 17 , templateTitleDate[0] . templateXValue[0] holds the largest templateYLabel[0] templateYLabel[1] with templateYValue[max] templateScale , followed by templateXValue[1] with a templateYValue[1] templateScale templateYLabel[1] . The templateXLabel[0] retail landscape in templateTitleSubject[0] has been dominated by the templateXValue[0] and templateXValue[1] templateXValue[0] , who have been fighting neck in neck for the lead position .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .
generated: This chart shows the Market of share made by the share .  \\n In the France , the Grocery share were made by Intermarché_Group , with 21.6 share .  \\n The Grocery market share were Carrefour_Group and Casino_Group .

Example 277:
titleEntities: {'Subject': ['Loan-to-deposit'], 'Date': ['2011']}
title: Loan-to-deposit ratio in the global bank industry 2011
X_Axis['Country']: ['Banks_worldwide', 'China', 'United_States', 'Japan', 'Europe']
Y_Axis['Loan-to-deposit', 'ratio']: ['94.4', '60.6', '72', '99.5', '115.5']

gold: The statistic shows the loan-to-deposit ratio in the global bank industry as of October 2011 . If the granted loans amount to more than 100 percent in relation to customer deposits at the banks , the deposits are not sufficient for a refinancing of the loans . Thus , the banks depend on other means of refinancing .
gold_template: The statistic shows the templateYLabel[0] templateYLabel[1] in the templateTitle[2] templateTitle[3] templateTitle[4] as of templateTitleDate[0] . If the granted loans amount to more than templateYValue[3] templateScale in relation to customer deposits at the templateXValue[0] , the deposits are not sufficient for a refinancing of the loans . Thus , the templateXValue[0] depend on other means of refinancing .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Loan-to-deposit of global Loan-to-deposit in .  We can see that both China and United_States have a very small amount whilst Europe , Japan and Banks_worldwide have a much higher amount . 

Example 278:
titleEntities: {'Subject': ['United States'], 'Date': ['1900', '2016']}
title: Earthquakes that caused the most fatalities in the United States 1900 to 2016
X_Axis['States']: ['San_Francisco_California_(April_18_1906)', 'Aleutian_Islands_Alaska_(April_1_1946)', 'Prince_William_Sound_Alaska_(March_28_1964)', 'Long_Beach_California_(March_11_1933)', 'Mona_Passage_(October_11_1918)', 'San_Fernando_California_(February_9_1971)', 'Santa_Cruz_County_California_(October_18_1989)', 'Chile_South_America_(May_22_1960)', 'Northridge_California_(January_17_1994)', 'Hebgen_Lake_Montana_(August_18_1959)']
Y_Axis['Number', 'of', 'fatalities']: ['2000', '165', '131', '116', '116', '65', '62', '61', '60', '28']

gold: This statistic shows the ten earthquakes in the United States that resulted in the most fatalities from 1900 to 2016 . Approximately 2,000 people were killed by the earthquake and resulting fires in San Francisco , California on April 18 , 1906 .
gold_template: This statistic shows the ten templateTitle[0] in the templateTitleSubject[0] templateXLabel[0] templateTitle[1] resulted in the templateTitle[3] templateYLabel[1] from templateTitleDate[min] to templateTitleDate[max] . Approximately templateYValue[max] people were killed by the earthquake and resulting fires in templateXValue[0] , templateXValue[0] on templateXValue[0] , 1906 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Earthquakes that caused in the most competirion .  \\n From the chart we see that the Mona_Passage_(October_11_1918) States made the Earthquakes fatalities by some margin , with only 28 .  Aleutian_Islands_Alaska_(April_1_1946) and San_Francisco_California_(April_18_1906) made a respectable 165 and 2000 fatalities , with Hebgen_Lake_Montana_(August_18_1959) and Long_Beach_California_(March_11_1933) not far behind , at 28 and 116 respectively .

Example 279:
titleEntities: {'Subject': ['Middle East'], 'Date': ['2019']}
title: Number of internet users in the Middle East 2019 , by country
X_Axis['Country']: ['Iran', 'Saudi_Arabia', 'Iraq', 'United_Arab_Emirates', 'Jordan', 'Yemen', 'Israel', 'Syria', 'Lebanon', 'Kuwait', 'Oman', 'Palestine_(West_Bank_and_Gaza)', 'Qatar', 'Bahrain']
Y_Axis['Number', 'of', 'internet', 'users', 'in', 'millions']: ['62.7', '30.26', '19.95', '9.39', '8.7', '7.9', '7.0', '6.34', '5.55', '4.16', '4.01', '3.38', '2.63', '1.57']

gold: This statistic presents the number of internet users in selected Middle Eastern countries as of April 2019 . As of that month , Iran had 62.7 million internet users , followed by Saudi Arabia with 30.26 million internet users .
gold_template: This statistic presents the templateYLabel[0] of templateYLabel[1] templateYLabel[2] in selected templateTitleSubject[0] Eastern countries as of templateTitleDate[0] . As of that month , templateXValue[0] had templateYValue[max] templateScale templateYLabel[1] templateYLabel[2] , followed templateTitle[6] templateXValue[1] with templateYValue[1] templateScale templateYLabel[1] templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number internet in Middle East .  It shows Iraq was the Number at just 1.57 degrees and Jordan was the warmest at 62.7 degrees .  After Iraq , the next Number internet are Iran at 62.7 degrees , followed by Bahrain at 18 degrees , Saudi_Arabia at 30.26 degrees and then United_Arab_Emirates at 9.39 degrees .

Example 280:
titleEntities: {'Subject': ['Twitter'], 'Date': ['2019']}
title: World leaders with the most Twitter followers 2019
X_Axis['Account', 'Name']: ['Donald_Trump_United_States__@RealDonaldTrump', 'Pope_Francis_Vatican__@Pontifex', 'Narendra_Modi_India__@NarendraModi_(personal_account)', 'Narendra_Modi_India__@PMOIndia_(institutional_account)', 'President_United_States_@POTUS', 'The_White_House_United_States_@WhiteHouse', 'Recep_Tayyip_Erdoğan_Turkey__@RTErdogan', 'Joko_Widodo_Indonesia_@Jokowi', 'Queen_Rania_Jordan_@QueenRania', 'Imran_Khan_Pakistan_@imrankhanpti']
Y_Axis['Twitter', 'followers', 'in', 'millions']: ['61', '48', '48', '29', '26', '18', '13', '11', '10', '9']

gold: In 2019 , 187 countries were represented through an official presence on Twitter , either by personal or institutional accounts run by heads of state and government and foreign ministers . During the measured period , U.S. President Donald Trump was ranked first , having accumulated over 61 million Twitter followers on his personal account . The official @ POTUS account was ranked fifth with 26 million followers worldwide .
gold_template: In templateTitleDate[0] , 187 countries were represented through an official presence on templateYLabel[0] , either by personal or institutional accounts run by heads of state and government and foreign ministers . During the measured period , U.S. templateXValue[4] templateXValue[0] was ranked first , having accumulated over templateYValue[max] templateScale templateYLabel[0] templateYLabel[1] on his personal templateXLabel[0] . The official @ POTUS templateXLabel[0] was ranked fifth templateTitle[2] templateYValue[4] templateScale templateYLabel[1] worldwide .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the World leaders in Twitter .  It shows Narendra_Modi_India__@NarendraModi_(personal_account) was the World at just 9 degrees and President_United_States_@POTUS was the warmest at 61 followers .  After Narendra_Modi_India__@NarendraModi_(personal_account) , the next World leaders are Donald_Trump_United_States__@RealDonaldTrump at 61 degrees , followed by Imran_Khan_Pakistan_@imrankhanpti at 18 degrees , Pope_Francis_Vatican__@Pontifex at 48 degrees and then Narendra_Modi_India__@PMOIndia_(institutional_account) at 29 degrees .

Example 281:
titleEntities: {'Subject': ['Major League Baseball'], 'Date': ['2019']}
title: Major League Baseball hot dog prices by team 2019
X_Axis['Baseball', 'Teams']: ['Washington_Nationals', 'New_York_Mets', 'Los_Angeles_Dodgers', 'Chicago_Cubs', 'San_Francisco_Giants', 'Seattle_Mariners', 'Texas_Rangers', 'Milwaukee_Brewers', 'Kansas_City_Royals', 'Oakland_Athletics', 'Houston_Astros', 'Colorado_Rockies', 'Cincinnati_Reds', 'Boston_Red_Sox', 'San_Diego_Padres', 'Los_Angeles_Angels', 'Tampa_Bay_Rays', 'Detroit_Tigers', 'St._Louis_Cardinals', 'MLB_league_average', 'Chicago_White_Sox', 'Atlanta_Braves', 'Cleveland_Indians', 'Toronto_Blue_Jays', 'Minnesota_Twins', 'Philadelphia_Phillies', 'Pittsburgh_Pirates', 'New_York_Yankees', 'Miami_Marlins', 'Arizona_Diamondbacks', 'Baltimore_Orioles']
Y_Axis['Hot', 'dog', 'price', 'in', 'U.S.', 'dollars']: ['7.0', '6.75', '6.75', '6.5', '6.5', '6.5', '6.0', '6.0', '5.75', '5.75', '5.5', '5.5', '5.5', '5.25', '5.25', '5.0', '5.0', '5.0', '5.0', '4.95', '4.5', '4.25', '4.25', '4.13', '4.0', '4.0', '3.5', '3.0', '3.0', '2.0', '1.5']

gold: No game of baseball is complete without a trip to the concessions stand , but how much money a fan needs to part with in order to get their hands on a hot dog varies widely from team to team . While a hot dog at the home games of the Baltimore Orioles would set you back just 1.5 U.S. dollars , the same snack at Citi Field during a New York Mets game would cost you 6.75 U.S. dollars . Digging deep for snacks It seems that baseball in the Big Apple does not come cheap .
gold_template: No game of templateXLabel[0] is complete without a trip to the concessions stand , but how much money a fan needs to part with in order to get their hands on a templateYLabel[0] templateYLabel[1] varies widely from templateTitle[7] to templateTitle[7] . While a templateYLabel[0] templateYLabel[1] at the home games of the templateXValue[last] would set you back just templateYValue[min] templateYLabel[3] templateYLabel[4] , the same snack at Citi Field during a templateXValue[1] game would cost you templateYValue[1] templateYLabel[3] templateYLabel[4] . Digging deep for snacks It seems that templateXLabel[0] in the Big Apple does not come cheap .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Major League in Major League Baseball .  It shows Los_Angeles_Dodgers was the Major at just 1.5 degrees and San_Francisco_Giants was the warmest at 7.0 degrees .  After Los_Angeles_Dodgers , the next Major League are Washington_Nationals at 7.0 degrees , followed by Baltimore_Orioles at 18 degrees , New_York_Mets at 6.75 degrees and then Chicago_Cubs at 6.5 degrees .

Example 282:
titleEntities: {'Subject': ['Italy'], 'Date': ['2018', '2020']}
title: Average monthly housing rent in Italy 2018 to 2020
X_Axis['Month']: ['Jan_20', 'Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18', 'Jul_18', 'Jun_18', 'May_18', 'Apr_18', 'Mar_18', 'Feb_18', 'Jan_18']
Y_Axis['Price', 'in', 'euros', 'per', 'square', 'meter']: ['9.66', '9.79', '9.68', '9.72', '9.72', '9.72', '9.68', '9.6', '9.65', '9.64', '9.61', '9.62', '9.58', '9.51', '9.49', '9.47', '9.49', '9.5', '9.47', '9.47', '9.42', '9.43', '9.4', '9.35', '9.36']

gold: The average monthly housing rent in Italy in January 2020 was nearly 9.7 euros per square meter . However , this figure differed significantly according to the region in which the rental was looked for . In Aosta Valley , the tiniest region in the country which borders France and Switzerland , the average housing rent in December 2018 peaked at over 20 euros per square meter .
gold_template: The templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] in templateTitleSubject[0] in templateTitleDate[max] was nearly templateYValue[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] templateYLabel[4] . However , this figure differed significantly according to the region in which the rental was looked for . In Aosta Valley , the tiniest region in the country which borders France and Switzerland , the templateTitle[0] templateTitle[2] templateTitle[3] in templateTitleDate[min] peaked at over templateXValue[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average monthly in Italy .  It shows Nov_19 was the Average at just 9.35 degrees and Sep_19 was the warmest at 9.79 degrees .  After Nov_19 , the next Average monthly are Jan_20 at 9.66 degrees , followed by Jan_18 at 18 degrees , Dec_19 at 9.79 degrees and then Oct_19 at 9.72 degrees .

Example 283:
titleEntities: {'Subject': ['France'], 'Date': ['2017']}
title: Leading export markets of champagne from France 2017
X_Axis['Country']: ['United_Kingdom', 'USA', 'Germany', 'Japan', 'Belgium', 'Australia', 'Italy', 'Switzerland', 'Spain', 'Sweden']
Y_Axis['Number', 'of', 'bottles', 'in', 'millions']: ['27.76', '23.1', '12.29', '12.87', '9.07', '8.53', '7.37', '5.6', '4.12', '3.31']

gold: During the year 2017 , the total champagne exports from France to the United Kingdom amounted to about 27 millions of 75 cl . bottles . The UK is the first export market for French champagne .
gold_template: During the year templateTitleDate[0] , the total templateTitle[3] exports templateTitle[4] templateTitleSubject[0] to the templateXValue[0] amounted to about 27 templateScale of 75 cl . templateYLabel[1] . The UK is the first templateTitle[1] market for French templateTitle[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Leading export markets champagne the Number of bottles they 've had .  \n It shows United_Kingdom has had 27.76 bottles , USA has had the Leading at 3.31 bottles , Germany has had 12.29 , Japan has had 12.87 , Belgium has had the most bottles at 27.76 and Sweden has had 3.31 bottles .

Example 284:
titleEntities: {'Subject': ['Countries'], 'Date': ['2018']}
title: Countries with the largest number of cosmetic procedures 2018
X_Axis['Country']: ['United_States', 'Brazil', 'Mexico', 'Germany', 'India', 'Italy', 'Argentina', 'Colombia', 'Australia', 'Thailand']
Y_Axis['Number', 'of', 'procedures']: ['4361867', '2267405', '1043247', '922056', '895896', '854208', '608960', '408789', '202642', '140123']

gold: Cosmetic procedures are popular among people that want to enhance select features of their body through surgical and nonsurgical methods . As of 2018 , the United States had the largest number of cosmetic procedures during that year with over 4.3 million procedures . Brazil had the second largest number of cosmetic procedures with almost 2.3 million procedures during that year .
gold_template: templateTitle[4] templateYLabel[1] are popular among people that want to enhance select features of their body through surgical and nonsurgical methods . As of templateTitleDate[0] , the templateXValue[0] had the templateTitle[2] templateYLabel[0] of templateTitle[4] templateYLabel[1] during that year templateTitle[1] over 4.3 templateScale templateYLabel[1] . templateXValue[1] had the second templateTitle[2] templateYLabel[0] of templateTitle[4] templateYLabel[1] templateTitle[1] almost templateYValue[1] templateScale templateYLabel[1] during that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Countries largest number cosmetic the Number of procedures they 've had .  \n It shows United_States has had 4361867 procedures , Brazil has had the Countries at 140123 procedures , Mexico has had 1043247 , Germany has had 922056 , India has had the most procedures at 4361867 and Thailand has had 140123 procedures .

Example 285:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: U.S. binge drinking among adults by state 2018
X_Axis['State']: ['District_of_Columbia', 'North_Dakota', 'Wisconsin', 'Iowa', 'Nebraska', 'Illinois', 'Minnesota', 'Alaska', 'Montana', 'Hawaii', 'Colorado', 'Ohio', 'Missouri', 'Massachusetts', 'New_Hampshire', 'Pennsylvania', 'Louisiana', 'Rhode_Island', 'Michigan', 'Wyoming', 'Maine', 'Nevada', 'Texas', 'California', 'New_York', 'South_Dakota', 'United_States', 'Vermont', 'Kansas', 'New_Jersey', 'Indiana', 'Oregon', 'Virginia', 'Kentucky', 'Washington', 'South_Carolina', 'North_Carolina', 'Connecticut', 'Maryland', 'Arizona', 'Florida', 'Idaho', 'Arkansas', 'Delaware', 'New_Mexico', 'Oklahoma', 'Tennessee', 'Georgia', 'Mississippi', 'Alabama', 'Utah', 'West_Virginia']
Y_Axis['Percentage', 'of', 'binge', 'drinkers']: ['25.9', '23.3', '22.7', '21.1', '20.6', '20.3', '20', '19.6', '19.5', '19.5', '18.9', '18.9', '18.8', '18.8', '18.7', '18.2', '18.1', '18.1', '18.1', '18', '17.9', '17.9', '17.8', '17.6', '17.5', '17.4', '17.4', '17.4', '17.2', '16.7', '16.6', '16.1', '16', '15.8', '15.6', '15.5', '15.4', '15.4', '15.3', '15.2', '15.1', '15.1', '15.1', '14.8', '14.7', '13.4', '13.1', '12.9', '12.6', '12.4', '11.5', '11.5']

gold: This statistic represents the percentage of binge in the United States of America as of 2018 , in the last 30 days by state . As of that year , 17.8 percent of adults in Texas consumed more than 4 ( women ) or 5 ( men ) alcoholic beverages on a single occasion within the preceding 30 days .
gold_template: This statistic represents the templateScale of templateYLabel[1] in the templateXValue[26] of America as of templateTitleDate[0] , in the last 30 days templateTitle[5] templateXLabel[0] . As of that year , templateYValue[22] templateScale of templateTitle[4] in templateXValue[22] consumed more than 4 ( women ) or 5 ( men ) alcoholic beverages on a single occasion within the preceding 30 days .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale .
generated: This chart shows the U.S. binge in U.S. It shows Wisconsin was the U.S. at just 11.5 degrees and Nebraska was the warmest at 25.9 percentage .  After Wisconsin , the next U.S. binge are District_of_Columbia at 25.9 percentage , followed by West_Virginia at 18 percentage .

Example 286:
titleEntities: {'Subject': ['Home Depot', 'Canada'], 'Date': ['2018']}
title: Total number of Home Depot stores in Canada by province 2018
X_Axis['Province']: ['Total', 'Ontario', 'Alberta', 'British_Columbia', 'Quebec', 'Manitoba', 'Saskatchewan', 'Nova_Scotia', 'New_Brunswick', 'Newfoundland', 'Prince_Edward_Island']
Y_Axis['Number', 'of', 'stores']: ['182', '88', '27', '26', '22', '6', '4', '4', '3', '1', '1']

gold: There were 182 Home Depot stores across Canada in 2018 . Ontario was home to 88 , the most stores by far . Alberta and British Columbia were ranked in second and third places , with 27 and 26 stores located in each province respectively .
gold_template: There were templateYValue[max] templateTitleSubject[0] templateYLabel[1] across templateTitleSubject[1] in templateTitleDate[0] . templateXValue[1] was templateTitleSubject[0] to templateYValue[1] , the most templateYLabel[1] templateTitle[6] far . templateXValue[2] and templateXValue[3] were ranked in second and third places , with templateYValue[2] and templateYValue[3] templateYLabel[1] located in each templateXLabel[0] respectively .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Total number Home in the Depot competirion .  \\n From the chart we see that the Quebec Province made the Total stores by some margin , with only 1 .  Ontario and Total made a respectable 88 and 182 stores , with Prince_Edward_Island and British_Columbia not far behind , at 1 and 26 respectively .

Example 287:
titleEntities: {'Subject': ['France'], 'Date': ['2014']}
title: Construction cost per kilometer of high-speed line in France 2014
X_Axis['High-speed', 'Line']: ['LGV_Paris-Lyon', 'LGV_Atlantic', 'LGV_North', 'LGV_Rhône-Alpes', 'North-South_interconnection', 'LGV_East', 'LGV_Rhine-Rhone', 'LGV_Mediterranean']
Y_Axis['Construction', 'cost', 'per', 'kilometer', 'in', 'millions', 'of', 'euros']: ['5.5', '10.4', '10.8', '13.4', '15.5', '15.7', '17.5', '19.7']

gold: Here is a statistic about the construction cost per kilometer of high-speed lines ( HSL ) in France in 2014 ( in millions of euros ) . It shows that the construction of the Mediterranean high-speed line , which links the Provence-Alpes-Côte d'Azur and Languedoc-Roussillon regions , cost around 20 million euros per kilometer .
gold_template: Here is a statistic about the templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] of templateXLabel[0] lines ( HSL ) in templateTitleSubject[0] in templateTitleDate[0] ( in templateScale of templateYLabel[5] ) . It shows that the templateYLabel[0] of the templateXValue[last] templateXLabel[0] templateXLabel[1] , which links the Provence-Alpes-Côte d'Azur and Languedoc-Roussillon regions , templateYLabel[1] around templateYValue[max] templateScale templateYLabel[5] templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Construction cost in France .  It shows LGV_North was the Construction at just 5.5 degrees and North-South_interconnection was the warmest at 19.7 cost .  After LGV_North , the next Construction cost are LGV_Paris-Lyon at 5.5 degrees , followed by LGV_Mediterranean at 18 degrees , LGV_Atlantic at 10.4 degrees and then LGV_Rhône-Alpes at 13.4 degrees .

Example 288:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2015']}
title: Share of U.S. travelers who have had items stolen or lost 2015
X_Axis['Response']: ['Smartphone', 'Credit_card', 'Debit_card', 'License', 'Passport']
Y_Axis['Share', 'of', 'respondents']: ['10', '9', '8', '6', '4']

gold: The statistic shows the share of U.S. survey respondents who have had items with sensitive information lost or stolen , while traveling . 10 percent of respondents have lost or had a smartphone stolen whilst traveling .
gold_template: The statistic shows the templateYLabel[0] of templateTitleSubject[0] survey templateYLabel[1] templateTitle[3] templateTitle[4] templateTitle[5] templateTitle[6] with sensitive information templateTitle[8] or templateTitle[7] , while traveling . templateYValue[max] templateScale of templateYLabel[1] templateTitle[4] templateTitle[8] or templateTitle[5] a templateXValue[0] templateTitle[7] whilst traveling .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Share of U.S. travelers in U.S. We can see that both Credit_card and Debit_card have a very small amount whilst Passport , License and Smartphone have a much higher amount . 

Example 289:
titleEntities: {'Subject': ['IT'], 'Date': ['2017']}
title: IT functions outsourced worldwide 2017
X_Axis['Response']: ['Software_application_development', 'Software_application_maintenance', 'Data_centers', 'IT_infrastructure', 'Service_desk_/_help_desk', 'Networks', 'Systems_integration', 'HR_BPO', 'IT_department', 'IT_BPO', 'KPO']
Y_Axis['Share', 'of', 'respondents']: ['64', '51', '40', '32', '32', '29', '29', '12', '12', '12', '6']

gold: The statistic reveals the IT functions most commonly outsourced by IT leaders worldwide , as of 2017 . In 2017 , software application development was outsourced by 64 percent of respondents .
gold_template: The statistic reveals the IT templateTitle[0] most commonly templateTitle[1] by IT leaders templateTitle[2] , as of templateTitleDate[0] . In templateTitleDate[0] , templateXValue[0] was templateTitle[1] by templateYValue[max] templateScale of templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the functions outsourced worldwide in the 2017 competirion .  \\n From the chart we see that the Service_desk_/_help_desk Response made the functions respondents by some margin , with only 6 .  Software_application_maintenance and Software_application_development made a respectable 51 and 64 respondents , with KPO and IT_infrastructure not far behind , at 6 and 32 respectively .

Example 290:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018', '2018']}
title: U.S. population share by generation 2018
X_Axis['Generations']: ['The_Greatest_Generation_(born_before_1928)', 'The_Silent_Generation_(born_1928-1945)', 'The_Baby_Boomer_Generation_(born_1946-1964)', 'Generation_X_(born_1965-1980)', 'The_Millennial_Generation_(born_1981-1996)', 'Generation_Z_(born_1997_and_later)']
Y_Axis['Population', 'share']: ['0.64', '7.47', '22.18', '20', '22.03', '27.68']

gold: The statistic depicts the distribution of the U.S. population in 2018 , by generation . In that year , Millennials made up about 22 percent of the population in the United States .
gold_template: The statistic depicts the distribution of the templateTitleSubject[0] templateYLabel[0] in templateTitleDate[0] , templateTitle[3] templateXValue[0] . In that year , Millennials made up about templateYValue[2] templateScale of the templateYLabel[0] in the templateTitle[0] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Population of share made by share in a by generation .  \\n From the chart we see that the The_Baby_Boomer_Generation_(born_1946-1964) Generations was the U.S. population Generations in the generation with 27.68 share .  The next Generations to make the most share was the Generation_X_(born_1965-1980) Generations with 20 share closely followed by the Generation_Z_(born_1997_and_later) Generations with 27.68 share .

Example 291:
titleEntities: {'Subject': ['BMW', 'United Kingdom'], 'Date': ['2014', '2019']}
title: Monthly BMW car market share in the United Kingdom 2014 to 2019
X_Axis['Month']: ['Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18', 'Jul_18', 'Jun_18', 'May_18', 'Apr_18', 'Mar_18', 'Feb_18', 'Jan_18', 'Dec_17', 'Nov_17', 'Oct_17', 'Sep_17', 'Aug_17', 'Jul_17', 'Jun_17', 'May_17', 'Apr_17', 'Mar_17', 'Feb_17', 'Jan_17', 'Dec_16', 'Nov_16', 'Oct_16', 'Sep_16', 'Aug_16', 'Jul_16', 'Jun_16', 'May_16', 'Apr_16', 'Mar_16', 'Feb_16', 'Jan_16', 'Dec_15', 'Nov_15', 'Oct_15', 'Sep_15', 'Aug_15', 'Jul_15', 'Jun_15', 'May_15', 'Apr_15', 'Mar_15', 'Feb_15', 'Jan_15', 'Dec_14', 'Nov_14', 'Oct_14', 'Sep_14', 'Aug_14', 'Jul_14']
Y_Axis['Market', 'share']: ['9.47', '7.43', '8.44', '8.11', '5.24', '5.85', '8.94', '6.76', '6.75', '6.62', '8.38', '5.93', '8.05', '8.08', '7.37', '8.25', '6.37', '6.09', '9.78', '6.72', '5.41', '6.68', '8.35', '5.5', '8.84', '7.82', '6.99', '7.38', '6.03', '5.61', '7.87', '6.83', '7.42', '6.2', '7.36', '4.86', '8.46', '8.33', '7.52', '6.94', '5.82', '5.43', '7.32', '7.58', '5.79', '6.26', '6.91', '4.87', '9.54', '6.69', '7.85', '6.42', '6.13', '5.26', '6.69', '6.14', '5.86', '5.46', '6.62', '4.86', '7.49', '7.17', '5.87', '5.84', '4.92', '5.76']

gold: This graph shows the monthly United Kingdom ( UK ) market share for BMW from July 2014 to December 2019 . The company 's market share had a range between 4.9 and 9.8 percent during this time period . In December 2019 , BMW 's market share was around 9.5 percent .
gold_template: This graph shows the templateTitle[0] templateTitleSubject[0] ( UK ) templateYLabel[0] templateYLabel[1] for templateTitle[1] from templateTitleDate[min] to templateTitleDate[max] . The company 's templateYLabel[0] templateYLabel[1] had a range between templateYValue[min] and templateYValue[max] templateScale during this time period . In templateTitleDate[max] , templateTitle[1] 's templateYLabel[0] templateYLabel[1] was around templateYValue[0] templateScale .

generated_template: The chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . templateXValue[4] is the templateTitle[0] at templateYValue[max] degrees , followed by templateXValue[3] at templateYValue[3] degrees , and templateXValue[1] at 35 degrees . Next is templateXValue[last] at templateYValue[last] degrees , followed by templateXValue[0] at templateYValue[0] degrees and finally templateXValue[2] at templateYValue[min] degrees ( approximate ) .
generated: The chart shows the Monthly BMW in .  Aug_19 is the Monthly at 9.78 degrees , followed by Sep_19 at 8.11 degrees , and Nov_19 at 35 degrees .  Next is Jul_14 at 5.76 degrees , followed by Dec_19 at 9.47 degrees and finally Oct_19 at 4.86 degrees ( approximate ) .

Example 292:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2011']}
title: Personal care products most frequently used by college students in the U.S. 2011
X_Axis['Response']: ['Toothpaste', 'Deodorant_or_antiperspirant', 'Facial_soap_or_wash', 'Body_soap_or_wash', 'Lip_balm', 'Facial_moisturizer', 'Hand_or_body_moisturizer', 'Shampoo', 'Mascara', 'Hair_conditioner', 'Mouthwash', 'Perfume_cologne_body_spray', 'Foundation', 'Eyeliner', 'Lipstick_or_lip_gloss', 'Hair_styling_products', 'Acne_products', 'Blush', 'Other_makeup', 'Eye_shadow', 'Facial_toner', 'Facial_mask_or_scrub', 'Sunscreen_or_body', 'Shaving_cream_or_gel']
Y_Axis['Share', 'of', 'respondents']: ['97.8', '81.1', '69.5', '69.1', '65.9', '59.4', '54', '43', '38.9', '36.5', '34.3', '33.9', '30.6', '28.3', '28', '27.8', '26.7', '25.5', '22.9', '22.5', '20.8', '10.5', '8.3', '4.6']

gold: This statistic provides information regarding the personal care products most frequently used by college students in the United States in 2011 . The survey revealed that 97.8 percent of the respondents claimed that they used toothpaste on a daily basis .
gold_template: This statistic provides information regarding the templateTitle[0] templateTitle[1] templateXValue[15] templateTitle[3] templateTitle[4] templateTitle[5] templateTitle[6] templateTitle[7] templateTitle[8] in the templateTitle[9] in templateTitleDate[0] . The survey revealed that templateYValue[max] templateScale of the templateYLabel[1] claimed that they templateTitle[5] templateXValue[0] on a daily basis .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Personal care in U.S. It shows Facial_soap_or_wash was the Personal at just 4.6 degrees and Lip_balm was the warmest at 97.8 degrees .  After Facial_soap_or_wash , the next Personal care are Toothpaste at 97.8 degrees , followed by Shaving_cream_or_gel at 18 degrees , Deodorant_or_antiperspirant at 81.1 degrees and then Body_soap_or_wash at 69.1 degrees .

Example 293:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2018']}
title: Political party membership in the United Kingdom ( UK ) in 2018
X_Axis['Party']: ['Labour', 'Conservatives', 'Scottish_National_Party', 'Liberal_Democrats', 'Green', 'UKIP', 'Plaid_Cymru']
Y_Axis['Number', 'of', 'members', '(in', '1,000s)']: ['540', '124', '125', '99', '39', '24', '8']

gold: In early 2018 the Labour Party was estimated to have over half a million members , by far the most of any political party in the United Kingdom . The next three largest parties in terms of members were the Conservatives , the Scottish National Party and the Liberal Democrats which all had membership numbers that numbered over 100 thousand . More members but less voters While the Labour Party clearly had more party members than the Conservative Party , it has also not been in power since 2010 and has struggled to oust successive Tory governments .
gold_template: In early templateTitleDate[0] the templateXValue[0] templateXValue[2] was estimated to have over half a templateScale templateYLabel[1] , by far the most of any templateTitle[0] templateXValue[2] in the templateTitleSubject[0] . The next three largest parties in terms of templateYLabel[1] were the templateXValue[1] , the templateXValue[2] and the templateXValue[3] which all had templateTitle[2] numbers that numbered over 100 thousand . More templateYLabel[1] but less voters While the templateXValue[0] templateXValue[2] clearly had more templateXValue[2] templateYLabel[1] than the Conservative templateXValue[2] , it has also not been in power since 2010 and has struggled to oust successive Tory governments .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Number of members made by membership in a United Kingdom .  \\n From the chart we see that the Scottish_National_Party Party was the Political party in the Kingdom with 540 members .  The next Party to make the most members was the Liberal_Democrats Party with 99 members closely followed by the Plaid_Cymru Party with 8 members .

Example 294:
titleEntities: {'Subject': ['S.A.'], 'Date': ['2018']}
title: Total S.A. 's proved reserves by region 2018
X_Axis['Country']: ['Europe_&_Central_Asia', 'Middle_East_&_North_Africa', 'Americas', 'Africa', 'Asia_Pacific', 'Total']
Y_Axis['Proved', 'reserves', 'in', 'million', 'barrels', 'oil', 'equivalent']: ['4431', '3171', '1937', '1668', '843', '12050']

gold: This statistic shows Total S.A. 's proved reserves by geographical region in 2018 , measured in million barrels of oil equivalent . In the Americas , there was a total of approximately 1.94 billion barrels of oil equivalent in 2018 . Total S.A. is one of the world 's largest oil and gas companies .
gold_template: This statistic shows templateXValue[last] templateTitleSubject[0] templateTitle[2] templateYLabel[0] templateYLabel[1] templateTitle[5] geographical templateTitle[6] in templateTitleDate[0] , measured in templateScale templateYLabel[3] of templateYLabel[4] templateYLabel[5] . In the templateXValue[2] , there was a templateXValue[last] of approximately templateYValue[2] templateScale templateYLabel[3] of templateYLabel[4] templateYLabel[5] in templateTitleDate[0] . templateXValue[last] templateTitleSubject[0] is one of the world templateTitle[2] largest templateYLabel[4] and gas companies .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Total S.A. 's proved the of reserves they 've had .  \n It shows Europe_&_Central_Asia has had 4431 reserves , Middle_East_&_North_Africa has had the Total at 843 reserves , Americas has had 1937 , Africa has had 1668 , Asia_Pacific has had the most reserves at 12050 and Total has had 12050 reserves .

Example 295:
titleEntities: {'Subject': ['Portugal'], 'Date': ['2019']}
title: Portugal : national football players with most goals scored of all time as of 2019
X_Axis['Player']: ['Cristiano_Ronaldo', 'Pauleta', 'Eusebio', 'Luis_Figo', 'Nuno_Gomes', 'Helder_Postiga', 'Rui_Costa', 'Joao_Vieira_Pinto', 'Nani', 'Simao', 'Nene', 'Hugo_Almeida', 'Jordao', 'Jose_Torres', 'Fernando_Peyroteo', 'Fernando_Gomes', 'Sergio_Conceicao', 'Jose_Aguas', "Lucas_da_Fonseca_'Matateu'", 'Bruno_Alves']
Y_Axis['Goals', 'scored']: ['88', '47', '41', '32', '29', '27', '26', '23', '24', '22', '21', '19', '15', '14', '14', '13', '12', '11', '11', '11']

gold: Christiano Ronaldo has been playing for the Portuguese national football team since 2003 and scored 88 goals for the team . As the top scorer of the national team and the star of the top tier clubs Manchester United , Real Madrid and Juventus , Ronaldo is without any doubt among the most renowned football players in the world . Portugal 's national football team out in quarter finals during last World Cup During the Fifa World Cup in 2018 , Portugal 's national team failed before the quarter finals , losing a match against Uruguay .
gold_template: Christiano templateXValue[0] has been playing for the Portuguese templateTitle[1] templateTitle[2] team since 2003 and templateYLabel[1] templateYValue[max] templateYLabel[0] for the team . As the top scorer of the templateTitle[1] team and the star of the top tier clubs Manchester United , Real Madrid and Juventus , templateXValue[0] is without any doubt among the templateTitle[5] renowned templateTitle[2] templateTitle[3] in the world . templateTitleSubject[0] 's templateTitle[1] templateTitle[2] team out in quarter finals during last World Cup During the Fifa World Cup in 2018 , templateTitleSubject[0] 's templateTitle[1] team failed before the quarter finals , losing a match against Uruguay .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Portugal national in Portugal .  It shows Eusebio was the Portugal at just 11 degrees and Nuno_Gomes was the warmest at 88 degrees .  After Eusebio , the next Portugal national are Cristiano_Ronaldo at 88 degrees , followed by Bruno_Alves at 18 degrees , Pauleta at 47 degrees and then Luis_Figo at 32 degrees .

Example 296:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: Abortion rate in the U.S. in 2017 , by state
X_Axis['State']: ['District_of_Columbia', 'New_York', 'New_Jersey', 'Maryland', 'Florida', 'Connecticut', 'Georgia', 'Rhode_Island', 'Illinois', 'California', 'Nevada', 'North_Carolina', 'Michigan', 'U.S._total', 'Massachusetts', 'Pennsylvania', 'Kansas', 'Washington', 'Hawaii', 'Oregon', 'New_Mexico', 'Vermont', 'Colorado', 'Louisiana', 'Delaware', 'Virginia', 'Minnesota', 'Ohio', 'Texas', 'Arizona', 'Tennessee', 'New_Hampshire', 'Maine', 'Alaska', 'Montana', 'North_Dakota', 'Alabama', 'Iowa', 'Oklahoma', 'Indiana', 'Wisconsin', 'Arkansas', 'Nebraska', 'South_Carolina', 'West_Virginia', 'Utah', 'Mississippi', 'Missouri', 'Idaho', 'Kentucky', 'South_Dakota', 'Wyoming']
Y_Axis['Number', 'of', 'abortions', 'per', '1,000', 'women']: ['30.2', '26.3', '26.3', '25.0', '18.6', '17.7', '16.9', '16.7', '16.6', '16.4', '16.4', '14.6', '14.2', '13.5', '13.5', '13.1', '12.2', '12.1', '12.0', '11.9', '11.7', '11.4', '10.9', '10.6', '10.5', '10.2', '10.1', '9.4', '9.4', '9.2', '9.2', '9.2', '8.8', '8.6', '8.3', '7.9', '6.4', '6.3', '6.2', '5.9', '5.9', '5.5', '5.5', '5.3', '4.4', '4.4', '4.3', '4.0', '3.9', '3.8', '3.1', '1.3']

gold: As of 2017 , the states with the highest rates of abortion included New York , New Jersey , Maryland , and Florida . As of that time , there were around 26 abortions per 1,000 women in the state of New York . The overall rate of legal abortions in the United States has gradually decreased since the mid-1980s .
gold_template: As of templateTitleDate[0] , the states with the highest rates of templateTitle[0] included templateXValue[1] , templateXValue[1] templateXValue[2] , templateXValue[3] , and templateXValue[4] . As of that time , there were around templateYValue[1] templateYLabel[1] templateYLabel[2] 1,000 templateYLabel[4] in the templateXLabel[0] of templateXValue[1] . The overall templateTitle[1] of legal templateYLabel[1] in the templateTitle[2] has gradually templateNegativeTrend since the mid-1980s .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale .
generated: This chart shows the Abortion rate in U.S. It shows New_Jersey was the Abortion at just 1.3 degrees and Florida was the warmest at 30.2 % .  After New_Jersey , the next Abortion rate are District_of_Columbia at 30.2 % , followed by Wyoming at 18 % .

Example 297:
titleEntities: {'Subject': ['India'], 'Date': ['2018']}
title: Production of turmeric in India 2018 by state
X_Axis['States', 'in', 'India', '']: ['Telangana', 'Maharashtra', 'Tamil_Nadu', 'Gujarat', 'Orissa', 'West_Bengal', 'Madhya_Pradesh', 'Mizoram', 'Haryana', 'Assam', 'Meghalaya', 'Nagaland', 'Tripura', 'Kerala', 'Punjab', 'Bihar', 'Uttarakhand', 'Chattisgarh', 'Rajasthan', 'Himachal_Pradesh', 'Jammu_&_Kashmir', 'Others']
Y_Axis['Production', 'in', 'thousand', 'metric', 'tons']: ['294.56', '190.09', '116.0', '78.91', '54.5', '45.5', '39.05', '29.82', '22.0', '19.17', '16.5', '10.19', '10.08', '8.82', '3.19', '2.83', '1.74', '0.96', '0.47', '0.12', '0.01', '2.14']

gold: Telangana produced the largest volume of turmeric in fiscal year 2018 across India . This amounted to nearly 295 thousand metric tons , or about 31 percent of total production in the country that year . Maharashtra followed , with Tamil Nadu ranking third that same year .
gold_template: templateXValue[0] produced the largest volume of templateTitle[1] in fiscal year templateTitleDate[0] across templateXLabel[1] . This amounted to nearly templateYValue[max] thousand templateYLabel[2] templateYLabel[3] , or about 31 templateScale of total templateYLabel[0] in the country that year . templateXValue[1] followed , with templateXValue[2] ranking third that same year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Production turmeric in India .  It shows Tamil_Nadu was the Production at just 0.01 degrees and Orissa was the warmest at 294.56 degrees .  After Tamil_Nadu , the next Production turmeric are Telangana at 294.56 degrees , followed by Others at 18 degrees , Maharashtra at 190.09 degrees and then Gujarat at 78.91 degrees .

Example 298:
titleEntities: {'Subject': ['Distribution'], 'Date': ['2018']}
title: Distribution of global animal health care market by species 2018
X_Axis['Animal', 'Type']: ['Food_animal', 'Companion_animal']
Y_Axis['Distribution', 'of', 'animal', 'health', 'care', 'market', 'volume']: ['62', '38']

gold: This statistic shows the distribution of the global animal health care market volume in 2018 , by species . In that year , health products for companion animals generated some 38 percent of the total global animal health market volume .
gold_template: This statistic shows the templateYLabel[0] of the templateTitle[1] templateXValue[0] templateYLabel[2] templateYLabel[3] templateYLabel[4] templateYLabel[5] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . In that year , templateYLabel[2] products for templateXValue[last] animals generated some templateYValue[min] templateScale of the total templateTitle[1] templateXValue[0] templateYLabel[2] templateYLabel[4] templateYLabel[5] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Distribution global animal in Food_animal 2018 compared with that in Companion_animal and the Companion_animal .  In Food_animal there was a 62 % difference in the salaries of men and women .  In Companion_animal the difference was 38 % .

Example 299:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2014']}
title: Wealthiest independent recording artists in U.S. 2014
X_Axis['Recording', 'Artist']: ['"Ray_J"_Norwood', 'Ben_Haggerty_"Macklemore"', 'Early_Stevens_aka_"E-40"', 'Aaron_Dontez_Yates_"Tech_N9NE"', 'Malcom_James_McCormick_"Mac_Miller"', 'Donald_Glover_"Childish_Gambino"', 'Atmosphere', 'David_Styles_"Styles_P"']
Y_Axis['Net', 'worth', 'in', 'million', 'U.S.', 'dollars']: ['18.0', '16.0', '8.0', '8.0', '6.0', '4.5', '3.8', '3.0']

gold: The statistic illustrates the leading independent recording artists in the United States as of May 2014 , by net worth . The second highest earning independent recording artist of 2014 was Ben Haggerty also known as `` Macklemore `` with an estimated net worth of 16 million U.S. dollars
gold_template: The statistic illustrates the leading templateTitle[1] templateXLabel[0] templateTitle[3] in the templateTitle[4] as of templateTitleDate[0] , by templateYLabel[0] templateYLabel[1] . The second highest earning templateTitle[1] templateXLabel[0] templateXLabel[1] of templateTitleDate[0] was templateXValue[1] also known as `` Macklemore `` with an estimated templateYLabel[0] templateYLabel[1] of templateYValue[1] templateScale templateYLabel[3] templateYLabel[4]

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Wealthiest independent recording in the artists competirion .  \\n From the chart we see that the Malcom_James_McCormick_"Mac_Miller" Recording made the Wealthiest worth by some margin , with only 3.0 Ben_Haggerty_"Macklemore" and "Ray_J"_Norwood made a respectable 16.0 and 18.0 worth , with David_Styles_"Styles_P" and Aaron_Dontez_Yates_"Tech_N9NE" not far behind , at 3.0 and 8.0 respectively .

Example 300:
titleEntities: {'Subject': ['Vogue', 'United Kingdom', 'UK'], 'Date': ['2003', '2016']}
title: Readership of Vogue magazine in the United Kingdom ( UK ) 2003 to 2016
X_Axis['Bi-Annually', '']: ['H2_16', 'H1_16', 'H2_15', 'H1_15', 'H2_14', 'H1_14', 'H2_13', 'H1_13', 'H2_12', 'H1_12', 'H2_11', 'H1_11', 'H2_10', 'H1_10', 'H2_09', 'H1_09', 'H2_08', 'H1_08', 'H2_07', 'H1_07', 'H2_06', 'H1_06', 'H2_05', 'H1_05', 'H2_04', 'H1_04', 'H2_03', 'H1_03']
Y_Axis['AIR', 'in', 'millions']: ['1.07', '1.11', '1.33', '1.2', '1.21', '1.15', '1.24', '1.4', '1.33', '1.14', '1.3', '1.31', '1.32', '1.1', '1.31', '1.34', '1.24', '1.18', '1.25', '1.21', '1.26', '1.01', '1.04', '1.12', '1.03', '1.04', '1.06', '1.18']

gold: This statistic displays the readership trend of Vogue magazine in the United Kingdom from first half 2003 to second half 2016 . In second half 2015 , the magazine was read by an average 1.3 million readers per issue .
gold_template: This statistic displays the templateTitle[0] trend of templateTitle[1] templateTitle[2] in the templateTitleSubject[0] from first half templateTitleDate[min] to second half templateTitleDate[max] . In second half 2015 , the templateTitle[2] was read by an average templateYValue[2] templateScale readers per issue .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Readership Vogue in .  It shows H2_15 was the Readership at just 1.01 degrees and H2_14 was the warmest at 1.4 degrees .  After H2_15 , the next Readership Vogue are H2_16 at 1.07 degrees , followed by H1_03 at 18 degrees , H1_16 at 1.11 degrees and then H1_15 at 1.2 degrees .

Example 301:
titleEntities: {'Subject': ['Instagram', 'FMCG'], 'Date': []}
title: Instagram : most-followed FMCG brands 2017
X_Axis['Month']: ['Too_Faced_Cosmetics', 'Urban_Decay', 'Red_Bull', 'Benefit_Cosmetics_US', 'Tarte_Cosmetics', 'Monster_Energy', 'Make_Up_For_Ever', 'Smashbox_Cosmetics', 'Bath_and_Body_Works', 'Bobbi_Brown_Cosmetics', 'Oreo', 'Milani_Cosmetics', 'Coca_Cola', 'House_of_Lashes', 'Marc_Jacobs_Beauty']
Y_Axis['Number', 'of', 'Instagram', 'followers', 'in', 'millions']: ['9.6', '9.2', '8.0', '7.4', '7.3', '4.4', '4.2', '3.7', '3.3', '2.6', '2.4', '2.3', '2.3', '2.2', '1.7']

gold: This statistic presents a ranking of leading FMCG brands on Instagram as of December 2017 , based on the number of followers . As of the survey period , Red Bull ranked third with 8 million followers . Too Faced Cosmetics was ranked first with 9.6 million followers .
gold_template: This statistic presents a ranking of leading templateTitleSubject[1] templateTitle[3] on templateYLabel[1] as of templateTitleDate[0] , based on the templateYLabel[0] of templateYLabel[2] . As of the survey period , templateXValue[2] ranked third with templateYValue[2] templateScale templateYLabel[2] . templateXValue[0] was ranked first with templateYValue[max] templateScale templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Instagram most-followed in Instagram .  It shows Red_Bull was the Instagram at just 1.7 degrees and Tarte_Cosmetics was the warmest at 9.6 Instagram .  After Red_Bull , the next Instagram most-followed are Too_Faced_Cosmetics at 9.6 degrees , followed by Marc_Jacobs_Beauty at 18 degrees , Urban_Decay at 9.2 degrees and then Benefit_Cosmetics_US at 7.4 degrees .

Example 302:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Music song consumption U.S. 2018 , by genre
X_Axis['Genre']: ['Hip-Hop/Rap', 'Pop', 'Rock', 'R&B', 'Latin', 'Country', 'EDM', 'Religious', 'Stage_&_Screen', 'World', 'Reggae', 'Jazz', 'Classical', "Children's", 'New_Age']
Y_Axis['Share', 'of', 'consumption']: ['24.7', '19', '11.7', '11.2', '10.8', '7.9', '4.3', '2.9', '2.2', '1.6', '1.1', '0.8', '0.7', '0.6', '0.5']

gold: The statistic above presents the distribution of music song consumption in the United States in 2018 , by genre . In 2018 , rock music song consumption accounted for 11.7 percent of total music consumption .
gold_template: The statistic above presents the distribution of templateTitle[0] templateTitle[1] templateYLabel[1] in the templateTitle[3] in templateTitleDate[0] , templateTitle[5] templateXLabel[0] . In templateTitleDate[0] , templateXValue[2] templateTitle[0] templateTitle[1] templateYLabel[1] accounted for templateYValue[2] templateScale of total templateTitle[0] templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Music song in U.S. It shows Rock was the Music at just 0.5 degrees and Latin was the warmest at 24.7 consumption .  After Rock , the next Music song are Hip-Hop/Rap at 24.7 degrees , followed by New_Age at 18 degrees , Pop at 19 degrees and then R&B at 11.2 degrees .

Example 303:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Burglary rate , by state U.S. 2018
X_Axis['State']: ['New_Mexico', 'Mississippi', 'Oklahoma', 'Louisiana', 'Arkansas', 'North_Carolina', 'Alabama', 'Nevada', 'South_Carolina', 'Alaska', 'Washington', 'Tennessee', 'Missouri', 'Arizona', 'Georgia', 'Kansas', 'California', 'Ohio', 'Texas', 'Hawaii', 'Oregon', 'Kentucky', 'Indiana', 'United_States', 'Colorado', 'North_Dakota', 'Iowa', 'Florida', 'Delaware', 'Michigan', 'Utah', 'Maryland', 'Illinois', 'Montana', 'West_Virginia', 'South_Dakota', 'Minnesota', 'Idaho', 'Nebraska', 'Rhode_Island', 'Wyoming', 'District_of_Columbia', 'Wisconsin', 'Vermont', 'Connecticut', 'New_Jersey', 'Pennsylvania', 'Maine', 'Massachusetts', 'Virginia', 'New_York', 'New_Hampshire']
Y_Axis['Burglary', 'rate', 'per', '100,000', 'inhabitants']: ['767.8', '697.8', '681.1', '668.1', '636.8', '599.9', '590.1', '584.7', '579.7', '539.6', '533.5', '489.4', '444.9', '439.7', '431.3', '430.6', '416.2', '412.2', '410.8', '396.4', '389.1', '384.7', '377.6', '376.0', '375.2', '358.4', '352.6', '337.7', '326.5', '316.6', '315.3', '312.6', '306.7', '306.6', '296.5', '291.4', '288.4', '281.6', '271.9', '265.8', '264.0', '254.5', '242.5', '234.2', '222.5', '215.9', '211.6', '202.7', '200.8', '182.8', '159.3', '136.2']

gold: In 2017 , New Mexico had the highest burglary rate in the United States . That year , they had 767.8 occurrences per 100,000 residents . Mississippi followed with 697.8 incidents per 100,000 residents .
gold_template: In 2017 , templateXValue[0] had the highest templateYLabel[0] templateYLabel[1] in the templateXValue[23] . That year , they had templateYValue[max] occurrences templateYLabel[2] 100,000 residents . templateXValue[1] followed with templateYValue[1] incidents templateYLabel[2] 100,000 residents .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Burglary rate in U.S. \n It demonstrates that Arkansas is the Burglary , with a Burglary of 767.8 rate , while Oklahoma is the coldest , with a Burglary of 136.2 rate .

Example 304:
titleEntities: {'Subject': ['Share'], 'Date': ['2015']}
title: Share of the global agricultural machinery market , by region 2015
X_Axis['Country']: ['European_Union', 'NAFTA', 'China', 'South_America', 'India', 'Commonwealth_of_Independent_States', 'Japan', 'Turkey', 'Rest_of_World']
Y_Axis['Share', 'of', 'market']: ['26', '22', '15', '8', '6', '6', '4', '3', '10']

gold: This statistic shows the share of the global farming machinery market in 2015 , by region . The European Union and NAFTA accounted for 48 percent of the agricultural machinery market in this year , though China in third place is one of the fastest growing markets .
gold_template: This statistic shows the templateYLabel[0] of the templateTitle[1] farming templateTitle[3] templateYLabel[1] in templateTitleDate[0] , templateTitle[5] templateTitle[6] . The templateXValue[0] and templateXValue[1] accounted for 48 templateScale of the templateTitle[2] templateTitle[3] templateYLabel[1] in this year , though templateXValue[2] in third place is one of the fastest templatePositiveTrend markets .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Share global agricultural machinery the Share of market they 've had .  \n It shows European_Union has had 26 market , NAFTA has had the Share at 3 market , China has had 15 , South_America has had 8 , India has had the most market at 26 and Rest_of_World has had 10 market .

Example 305:
titleEntities: {'Subject': ['Nintendo Switch'], 'Date': ['2019']}
title: Top selling Nintendo Switch games worldwide in 2019
X_Axis['Month']: ['Mario_Kart_8_Deluxe', 'Super_Smash_Bros._Ultimate', 'Super_Mario_Odyssey', 'The_Legend_of_Zelda:__Breath_of_the_Wild', "Pokémon:_Let's_Go_Pikachu!/_Pokémon:_Let's_Go_Eevee!", 'Splatoon_2', 'Super_Mario_Party', 'New_Super_Mario_Bros._U_Deluxe', 'Super_Mario_Maker_2', "The_Legend_of_Zelda:_Link's_Awakening"]
Y_Axis['Sales', 'in', 'million', 'units']: ['19.01', '15.71', '15.38', '14.54', '11.28', '9.28', '7.59', '4.59', '3.93', '3.13']

gold: This statistic shows the top selling Nintendo Switch titles worldwide as of September 2019 . With 19.01 million units sold , Mario Kart 8 Deluxe was the top selling Nintendo Switch game as of September 2019 .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateTitleSubject[0] titles templateTitle[5] as of templateTitleDate[0] . With templateYValue[max] templateScale templateYLabel[2] sold , templateXValue[0] was the templateTitle[0] templateTitle[1] templateTitleSubject[0] game as of templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Top selling Nintendo in the Switch competirion .  \\n From the chart we see that the Pokémon:_Let's_Go_Pikachu!/_Pokémon:_Let's_Go_Eevee! Month made the Top million by some margin , with only 3.13 .  Super_Smash_Bros._Ultimate and Mario_Kart_8_Deluxe made a respectable 15.71 and 19.01 million , with The_Legend_of_Zelda:_Link's_Awakening and The_Legend_of_Zelda:__Breath_of_the_Wild not far behind , at 3.13 and 14.54 respectively .

Example 306:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2019']}
title: Social network penetration in the United Kingdom ( UK ) 2019
X_Axis['Platform']: ['Youtube', 'Facebook', 'WhatsApp', 'FB_Messenger', 'Instagram', 'Twitter', 'LinkedIn', 'Pinterest', 'Snapchat', 'Skype', 'Reddit', 'Twitch', 'Tumblr', 'WeChat', 'TikTok', 'Viber']
Y_Axis['Share', 'of', 'population']: ['78', '73', '62', '58', '49', '45', '28', '25', '25', '21', '16', '12', '11', '9', '8', '7']

gold: YouTube is the most active social network among internet users in the United Kingdom ( UK ) , with 78 percent of people reporting use of the service . Facebook was very close behind , with a rate of 73 percent . YouTube 's broad audience in the United Kingdom YouTube reaches a broad audience in the UK , making it an attractive partner for advertisers of almost any product .
gold_template: templateXValue[0] is the most active templateTitle[0] templateTitle[1] among internet users in the templateTitleSubject[0] ( templateTitleSubject[1] ) , with templateYValue[max] templateScale of people reporting use of the service . templateXValue[1] was very close behind , with a rate of templateYValue[1] templateScale . templateXValue[0] 's broad audience in the templateTitleSubject[0] templateXValue[0] reaches a broad audience in the templateTitleSubject[1] , making it an attractive partner for advertisers of almost any product .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Social network in United Kingdom .  It shows WhatsApp was the Social at just 7 degrees and Instagram was the warmest at 78 degrees .  After WhatsApp , the next Social network are Youtube at 78 degrees , followed by Viber at 18 degrees , Facebook at 73 degrees and then FB_Messenger at 58 degrees .

Example 307:
titleEntities: {'Subject': ['LinkedIn'], 'Date': ['2016', '2016']}
title: Weekly LinkedIn usage of registered users 2016
X_Axis['Hours']: ['0-2_hours', '3-4_hours', '5-6_hours', '7-8_hours', '8+_hours']
Y_Axis['Percentage', 'of', 'respondents']: ['53', '22', '10', '5', '10']

gold: This statistic provides information on average number of weekly hours that LinkedIn users spend on the social networking site . During a March 2016 survey , it was found that 53 percent of LinkedIn users only spend zero to two hours on the site per week .
gold_template: This statistic provides information on average number of templateTitle[0] templateXValue[0] that templateTitleSubject[0] templateTitle[4] spend on the social networking site . During a templateTitleDate[0] survey , it was found that templateYValue[max] templateScale of templateTitleSubject[0] templateTitle[4] only spend zero to two templateXValue[0] on the site per week .

generated_template: The chart shows the templateYLabel[0] of templateTitle[0] in templateTitle[2] templateTitle[3] templateTitle[4] in templateTitleSubject[0] . \\n The highest percentages of templateTitle[0] are found in the templateTitle[4] of templateXValue[last] ( templateYValue[max] templateScale ) , templateXValue[0] ( templateYValue[0] templateScale ) and templateXValue[2] ( 54 templateScale ) . \\n The lowest templateScale ( 22 templateScale ) is in templateXValue[3] while in templateXValue[1] the level is just over 30 .
generated: The chart shows the Percentage of Weekly in usage registered users in LinkedIn .  \\n The highest percentages of Weekly are found in the users of 8+_hours ( 53 percentage ) , 0-2_hours ( 53 percentage ) and 5-6_hours ( 54 percentage ) .  \\n The lowest percentage ( 22 percentage ) is in 7-8_hours while in 3-4_hours the level is just over 30 .

Example 308:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2016']}
title: Leading trends in appetizers on restaurant menus in the U.S. in 2016
X_Axis['Response']: ['Fresh/house-made_sausage', 'House-cured_meats/charcuterie', 'Vegetarian_appetizers', 'Ethnic/street_food-inspired_appetizers_(e.g._tempura_taquitos_kabobs)', 'Seafood_charcuterie', "Amuse-bouche/bite-size_hors_d'oeuvre", 'Ethnic_dips_(e.g._hummus_tabbouleh_baba_ganoush_tzatziki)', 'Poke/ceviche', 'Bone_marrow', 'Jerky_(e.g._beef_fish_turkey_boar_bison)', 'Flatbread_appetizers', 'Oysters', 'Sliders/mini-burgers']
Y_Axis['Share', 'of', 'respondents']: ['67', '59', '59', '53', '52', '51', '41', '33', '32', '32', '30', '25', '24']

gold: This statistic shows the leading trends in appetizers on restaurant menus in the United States as forecasted by professional chefs for 2016 . During the survey , 59 percent of the respondents stated that house-cured meats/charcuterie was a `` hot trend `` for restaurant menus in 2016 .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] in templateXValue[2] on templateTitle[3] templateTitle[4] in the templateTitle[5] as forecasted by professional chefs for templateTitleDate[0] . During the survey , templateYValue[1] templateScale of the templateYLabel[1] stated that templateXValue[1] was a `` hot trend `` for templateTitle[3] templateTitle[4] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading trends in U.S. It shows Vegetarian_appetizers was the Leading at just 24 degrees and Seafood_charcuterie was the warmest at 67 respondents .  After Vegetarian_appetizers , the next Leading trends are Fresh/house-made_sausage at 67 degrees , followed by Sliders/mini-burgers at 18 degrees , House-cured_meats/charcuterie at 59 degrees and then Ethnic/street_food-inspired_appetizers_(e.g._tempura_taquitos_kabobs) at 53 degrees .

Example 309:
titleEntities: {'Subject': ['European'], 'Date': ['2019']}
title: Active social media penetration in European countries 2019
X_Axis['Country']: ['Albania', 'Andorra', 'Austria', 'Belarus', 'Belgium', 'Bosnia_&_Herzegovina', 'Bulgaria', 'Croatia', 'Czechia', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Gibraltar', 'Greece', 'Guernsey', 'Hungary', 'Iceland', 'Republic_of_Ireland', 'Italy', 'Kosovo', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'Norway', 'Poland', 'Portugal', 'Romania', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'The_Faroe_Islands', 'Ukraine', 'United_Kingdom_(UK)']
Y_Axis['Active', 'social', 'media', 'penetration']: ['51', '65', '50', '40', '65', '49', '54', '48', '54', '71', '57', '59', '58', '46', '72', '54', '58', '62', '83', '66', '59', '40', '51', '44', '59', '62', '88', '30', '99', '60', '64', '71', '47', '65', '56', '43', '50', '53', '60', '72', '51', '75', '39', '67']

gold: Monaco is the European nation with the highest active social media penetration , as of January 2019 . Monaco 's unique status as a small wealthy nation obviously plays a role in this rate . Malta , the country with the second highest rate , has an active social media penetration rate that is 11 percent lower .
gold_template: templateXValue[28] is the templateTitleSubject[0] nation with the highest templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] , as of templateTitleDate[0] . templateXValue[28] 's unique status as a small wealthy nation obviously plays a role in this rate . templateXValue[26] , the templateXLabel[0] with the second highest rate , has an templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] rate that is 11 templateScale lower .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Active social in European .  It shows Austria was the Active at just 30 degrees and Belgium was the warmest at 99 degrees .  After Austria , the next Active social are Albania at 51 degrees , followed by United_Kingdom_(UK) at 18 degrees , Andorra at 65 degrees and then Belarus at 40 degrees .

Example 310:
titleEntities: {'Subject': ['Hawaii'], 'Date': ['2016']}
title: Number of registered automobiles in Hawaii 2016
X_Axis['Ownership', 'Type']: ['Publicly_owned', 'Private_and_commercial_(including_taxicabs)', 'Total']
Y_Axis['Number', 'of', 'registered', 'automobiles']: ['7995', '508549', '516544']

gold: The statistic represents the total number of registered automobiles in Hawaii in 2016 . In that year , Hawaii had approximately 508,549 private and commercial automobiles ( including taxicabs ) registered .
gold_template: The statistic represents the templateXValue[last] templateYLabel[0] of templateYLabel[1] templateYLabel[2] in templateTitleSubject[0] in templateTitleDate[0] . In that year , templateTitleSubject[0] had approximately templateYValue[1] templateXValue[1] and templateXValue[1] templateYLabel[2] ( including taxicabs ) templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Number registered automobiles in Publicly_owned 2016 compared with that in Private_and_commercial_(including_taxicabs) and the Total .  In Publicly_owned there was a 516544 % difference in the salaries of men and women .  In Private_and_commercial_(including_taxicabs) the difference was 7995 % .

Example 311:
titleEntities: {'Subject': ['Toronto'], 'Date': ['2019']}
title: Player expenses ( payroll ) of Toronto FC 2019
X_Axis['Month']: ['Michael_Bradley', 'Jozy_Altidore', 'Alejandro_Pozuelo_Melero', 'Jonathan_Osorio', 'Chris_Mavinga', 'Laurent_Ciman', 'Alex_Bono', 'Drew_Moor', 'Justin_Morrow', 'Eriq_Zavaleta', 'Auro', 'Marco_Delgado', 'Terrence_Boyd', 'Nick_DeLeon', 'Jay_Chapman', 'Jordan_Hamilton', 'Griffin_Dorsey', 'Ashtone_Morgan', 'Ayo_Akinola', 'Quentin_Westberg', 'Liam_Fraser', 'Tsubasa_Endoh', 'Caleb_Patterson-Sewell', 'Jon_Bakero', 'Ryan_Telfer', 'Noble_Okello', 'Aidan_Daniels', 'Julian_Dunn', 'Richie_Karyea']
Y_Axis['Payroll', 'in', 'thousand', 'U.S.', 'dollars']: ['6500.0', '6332.25', '3800.0', '776.25', '663.33', '435.63', '382.0', '375.0', '330.0', '296.96', '276.67', '253.0', '213.83', '175.27', '138.5', '137.66', '134.0', '133.5', '124.26', '115.25', '75.88', '74.25', '70.88', '70.25', '70.25', '68.06', '57.23', '57.23', '56.25']

gold: The statistic shows the player expenses ( payroll ) of Toronto FC of Major League Soccer by player in 2019 . Michael Bradley received a salary of 6.5 million U.S. dollars .
gold_template: The statistic shows the templateTitle[0] templateTitle[1] ( templateYLabel[0] ) of templateTitleSubject[0] templateTitle[4] of Major League Soccer by templateTitle[0] in templateTitleDate[0] . templateXValue[0] received a salary of templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Player expenses in Toronto .  It shows Alejandro_Pozuelo_Melero was the Player at just 56.25 degrees and Chris_Mavinga was the warmest at 6500.0 degrees .  After Alejandro_Pozuelo_Melero , the next Player expenses are Michael_Bradley at 6500.0 degrees , followed by Richie_Karyea at 18 degrees , Jozy_Altidore at 6332.25 degrees and then Jonathan_Osorio at 776.25 degrees .

Example 312:
titleEntities: {'Subject': ['Steam DAU MAU'], 'Date': ['2018']}
title: Number of Steam DAU and MAU 2018
X_Axis['Mobile', 'Engagement']: ['DAU', 'MAU']
Y_Axis['Number', 'of', 'users', 'in', 'millions']: ['47', '90']

gold: The statistic shows the number of daily and monthly active users of Steam worldwide in 2018 . Steam 's owner , Valve , reported that the online video games distribution platform had 90 million monthly active users in 2018 .
gold_template: The statistic shows the templateYLabel[0] of daily and monthly active templateYLabel[1] of templateTitle[1] worldwide in templateTitleDate[0] . templateTitle[1] 's owner , Valve , reported that the online video games distribution platform had templateYValue[max] templateScale monthly active templateYLabel[1] in templateTitleDate[0] .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the Number Steam DAU , expressed in millions three different countries .  The MAU and DAU have similar Number Steam gaps at around 20 millions whilst MAU is doing a little better at 47 millions .

Example 313:
titleEntities: {'Subject': ['World Cup Number'], 'Date': ['1930', '2018']}
title: FIFA World Cup : Number of goals scored at each tournament 1930 to 2018
X_Axis['Countries']: ['Russia_2018', 'Brazil_2014', 'South_Africa_2010', 'Germany_2006', 'South_Korea_/_Japan_2002', 'France_1998', 'USA_1994', 'Italy_1990', 'Mexico_1986', 'Spain_1982', 'Argentina_1978', 'Germany_1974', 'Mexico_1970', 'England_1966', 'Chile_1962', 'Sweden_1958', 'Switzerland_1954', 'Brazil_1950', 'France_1938', 'Italy_1934', 'Uruguay_1930']
Y_Axis['Number', 'of', 'goals', 'scored']: ['169', '171', '143', '147', '161', '171', '141', '115', '132', '146', '102', '97', '95', '89', '89', '126', '140', '88', '84', '70', '70']

gold: How many goals were scored in the 2014 FIFA World Cup ? A total of 171 goals were scored across the 2014 FIFA World Cup held in Brazil . This marked a joint record for the tournament along with France 1998 . The goal-fest in 2014 was thanks to some unusually high-scoring games , including Netherlands beating Spain 5 - 1 in the group stages and , most famously , Germany embarrassing Brazil 7 - 1 at the semi-final stage .
gold_template: How many templateYLabel[1] were templateYLabel[2] in the templateXValue[1] templateTitleSubject[0] ? A total of templateYValue[max] templateYLabel[1] were templateYLabel[2] across the templateXValue[1] templateTitleSubject[0] held in templateXValue[1] . This marked a joint record for the templateTitle[7] along with templateXValue[5] . The goal-fest in templateXValue[1] was thanks to some unusually high-scoring games , including Netherlands beating templateXValue[9] 5 - 1 in the group stages and , most famously , templateXValue[3] embarrassing templateXValue[1] 7 - 1 at the semi-final stage .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the FIFA World in World Cup Number .  It shows South_Africa_2010 was the FIFA at just 70 degrees and South_Korea_/_Japan_2002 was the warmest at 171 degrees .  After South_Africa_2010 , the next FIFA World are Russia_2018 at 169 degrees , followed by Uruguay_1930 at 18 degrees , Brazil_2014 at 171 degrees and then Germany_2006 at 147 degrees .

Example 314:
titleEntities: {'Subject': ['Renewable'], 'Date': ['2018']}
title: Renewable energy capacity - country ranking 2018
X_Axis['Country']: ['China', 'U.S.', 'Brazil', 'Germany', 'India', 'Canada', 'Japan', 'Italy', 'Russia', 'France']
Y_Axis['Capacity', 'in', 'gigawatts']: ['695.87', '245.25', '135.67', '120.01', '117.92', '99.04', '90.15', '53.29', '52.22', '50.5']

gold: The leading countries for installed renewable energy in 2018 were China , the U.S. , and Brazil . China was leading in renewable energy installations with a capacity of around 696 gigawatts . The U.S. , in second place , had a capacity of around 245 gigawatts .
gold_template: The leading countries for installed templateTitleSubject[0] templateTitle[1] in templateTitleDate[0] were templateXValue[0] , the templateXValue[1] , and templateXValue[2] . templateXValue[0] was leading in templateTitleSubject[0] templateTitle[1] installations with a templateYLabel[0] of around templateYValue[max] templateYLabel[1] . The templateXValue[1] , in second place , had a templateYLabel[0] of around templateYValue[1] templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Renewable energy capacity country the Capacity of gigawatts they 've had .  \n It shows China has had 695.87 gigawatts , U.S. has had the Renewable at 50.5 gigawatts , Brazil has had 135.67 , Germany has had 120.01 , India has had the most gigawatts at 695.87 and France has had 50.5 gigawatts .

Example 315:
titleEntities: {'Subject': ['American'], 'Date': ['2013']}
title: Frequency of American families having dinner together at home 2013
X_Axis['Response']: ['0_to_3_nights', '4_to_5_nights', '6_to_7_nights']
Y_Axis['Share', 'of', 'respondents']: ['21', '28', '53']

gold: This statistic shows the results of a survey , conducted in 2013 , among adult Americans on the frequency of having dinner at home as a family . In December 2013 , 53 percent of the respondents answered that their family eat dinner together at home on 6 to 7 nights a week .
gold_template: This statistic shows the results of a survey , conducted in templateTitleDate[0] , among adult Americans on the templateTitle[0] of templateTitle[3] templateTitle[4] at templateTitle[6] as a family . In templateTitleDate[0] , templateYValue[max] templateScale of the templateYLabel[1] answered that their family eat templateTitle[4] templateTitle[5] at templateTitle[6] on templateXValue[last] to templateXValue[last] templateXValue[0] a week .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Frequency American families in 0_to_3_nights 2013 compared with that in 4_to_5_nights and the 6_to_7_nights .  In 0_to_3_nights there was a 53 % difference in the salaries of men and women .  In 4_to_5_nights the difference was 21 % .

Example 316:
titleEntities: {'Subject': ['Alibaba', 'MAU'], 'Date': ['2019']}
title: Alibaba : mobile user MAU Q4 2016-Q4 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16"]
Y_Axis['Active', 'Alibaba', 'mobile', 'users', 'in', 'millions']: ['824', '785', '755', '721', '699', '666', '634', '617', '580', '549', '529', '507', '493']

gold: This statistic gives information on the consolidated number of monthly active mobile users ( MAU ) across Alibaba 's online shopping properties from the fourth quarter of 2016 to the fourth quarter of 2019 . As of the last quarter of 2019 , Alibaba 's Chinese e-commerce properties had been accessed by around 824 million mobile MAU .
gold_template: This statistic gives information on the consolidated number of monthly templateYLabel[0] templateYLabel[2] templateYLabel[3] ( templateTitleSubject[1] ) across templateYLabel[1] 's online shopping properties from the fourth templateXLabel[0] of 2016 to the fourth templateXLabel[0] of templateTitleDate[0] . As of the last templateXLabel[0] of templateTitleDate[0] , templateYLabel[1] 's Chinese e-commerce properties had been accessed by around templateYValue[max] templateScale templateYLabel[2] templateTitleSubject[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Alibaba mobile in Alibaba .  It shows Q2_'19 was the Alibaba at just 493 degrees and Q4_'18 was the warmest at 824 Alibaba .  After Q2_'19 , the next Alibaba mobile are Q4_'19 at 824 degrees , followed by Q4_'16 at 18 degrees , Q3_'19 at 785 degrees and then Q1_'19 at 721 degrees .

Example 317:
titleEntities: {'Subject': ['Google'], 'Date': ['2008', '2019']}
title: Google : quarterly revenue as 2008 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11", "Q4_'10", "Q3_'10", "Q2_'10", "Q1_'10", "Q4_'09", "Q3_'09", "Q2_'09", "Q1_'09", "Q4_'08", "Q3_'08", "Q2_'08", "Q1_'08"]
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['45812', '40344', '38782', '36169', '38998', '33594', '32512', '30996', '32192', '27470', '25913', '24618', '25802', '22254', '21315', '20092', '21179', '18534', '17653', '17178', '17997', '16523', '15955', '15420', '15707', '13754', '13107', '12951', '12905', '11526', '10964', '10645', '10584', '9720', '9026', '8575', '8440', '7286', '6820', '6775', '6674', '5945', '5523', '5509', '5701', '5541', '5637', '5186']

gold: In the fourth quarter of 2019 , Google 's revenue amounted to 45.8 billion U.S. dollars , up from 40.34 billion U.S. dollars in the preceding quarter . Google 's main revenue source is advertising through Google sites and its network . In 2019 , Google accounted for the majority of parent company Alphabet 's revenues with 113.26 billion U.S. dollars in Google website ad revenues alone .
gold_template: In the fourth templateXLabel[0] of templateTitleDate[max] , templateTitleSubject[0] 's templateYLabel[0] amounted to templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] , up from templateYValue[1] templateScale templateYLabel[2] templateYLabel[3] in the preceding templateXLabel[0] . templateTitleSubject[0] 's main templateYLabel[0] source is advertising through templateTitleSubject[0] sites and its network . In templateTitleDate[max] , templateTitleSubject[0] accounted for the majority of parent company Alphabet 's revenues with 113.26 templateScale templateYLabel[2] templateYLabel[3] in templateTitleSubject[0] website ad revenues alone .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Google quarterly revenue in the 2008 competirion .  \\n From the chart we see that the Q4_'18 Quarter made the Google million by some margin , with only 5186 .  Q3_'19 and Q4_'19 made a respectable 40344 and 45812 million , with Q1_'08 and Q1_'19 not far behind , at 5186 and 36169 respectively .

Example 318:
titleEntities: {'Subject': ['Mobile', 'United Kingdom', 'UK'], 'Date': ['2018']}
title: Mobile operators : carrier market shares in the United Kingdom ( UK ) 2018
X_Axis['Mobile', 'Carrier']: ['BT_(including_EE)', 'O2', 'Vodafone', 'Three', 'Tesco_Mobile', 'Virgin_Mobile', 'Talk_Talk', 'iD_Mobile', 'Sky']
Y_Axis['Market', 'share']: ['28', '26', '21', '12', '6', '4', '1', '1', '1']

gold: This statistic shows the market shares held by mobile operators in the United Kingdom ( UK ) as at 31 December 2017 . BT , including Everything Everywhere ( EE ) held the greatest share of the market with 28 percent followed by O2 who held 26 percent . The four main mobile network operators ( MNO ) in the UK are Vodafone , Three ( 3 ) , EE and O2 .
gold_template: This statistic shows the templateYLabel[0] templateTitle[4] held by templateXValue[4] templateTitle[1] in the templateTitleSubject[0] ( templateTitleSubject[1] ) as at 31 2017 . templateXValue[0] , including Everything Everywhere ( EE ) held the greatest templateYLabel[1] of the templateYLabel[0] with templateYValue[max] templateScale followed by templateXValue[1] who held templateYValue[1] templateScale . The templateYValue[5] main templateXValue[4] network templateTitle[1] ( MNO ) in the templateTitleSubject[1] are templateXValue[2] , templateXValue[3] ( templateXValue[3] ) , EE and templateXValue[1] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .
generated: This chart shows the Market of share made by the carrier .  \\n In the market , the Mobile share were made by Vodafone , with 28 share .  \\n The Mobile operators carrier were O2 and Tesco_Mobile .

Example 319:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Most popular social media apps in the U.S. 2019 , by session length
X_Axis['Platform']: ['TikTok', 'Pinterest', 'Reddit', 'Facebook_(main)', 'Skype_(main)', 'Tumblr', 'Twitter_(main)', 'Instagram_(main)', 'Telegram', 'Google_Hangouts_(main)', 'Kik', 'Discord_-_Chat_for_Games', 'TikTok_(main)', 'WhatsApp', 'Snapchat', 'Facebook_Messenger', 'Messenger_by_Google', 'WeChat', 'LINE', 'GroupMe', 'Google+']
Y_Axis['Average', 'session', 'duration', 'in', 'minutes']: ['10.85', '5.06', '4.96', '4.82', '4.76', '4.04', '3.53', '2.95', '2.45', '2.4', '2.24', '2.17', '2.11', '2.04', '1.63', '1.48', '1.28', '1.28', '1.18', '1.06', '0.48']

gold: This statistic gives information on the most popular social networking apps in the United States as of September 2019 , ranked by average session length . During the measured period , mobile Instagram users spent an average of 2.95 minutes on the social networking platform per session .
gold_template: This statistic gives information on the templateTitle[0] templateTitle[1] templateTitle[2] networking templateTitle[4] in the templateTitle[5] as of templateTitleDate[0] , ranked templateXValue[16] templateYLabel[0] templateYLabel[1] templateTitle[9] . During the measured period , mobile templateXValue[7] users spent an templateYLabel[0] of templateYValue[7] templateYLabel[3] on the templateTitle[2] networking templateXLabel[0] per templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most popular in U.S. It shows Reddit was the Most at just 0.48 degrees and Skype_(main) was the warmest at 10.85 degrees .  After Reddit , the next Most popular are TikTok at 10.85 degrees , followed by Google+ at 18 degrees , Pinterest at 5.06 degrees and then Facebook_(main) at 4.82 degrees .

Example 320:
titleEntities: {'Subject': ['French'], 'Date': ['2018', '2018']}
title: Leading French YouTube comedy channels as of June 2018 , by number of subscribers
X_Axis['Youtube', 'Channel']: ['Cyprien', 'Norman', 'Squeezie', 'Rémi_Gaillard', 'Le_rire_jaune', 'Natoo', 'Mister_V', 'Amixem', 'Seb', 'Andy']
Y_Axis['Number', 'of', 'subscribers', 'in', 'thousands']: ['12151', '10792', '10719', '6648', '4345', '4324', '4305', '4085', '3666', '3409']

gold: As of June 2018 , the most popular YouTube comedy channel was that of Cyprien , accounting for more than 12 million subscribers . In second and third places came Norman fait des vidéos ( 9.5 million ) and Rémi Gaillard ( 6.4 million ) . Moreover , in a ranking of the most popular YouTube channels in France in general , Cyprien and Norman fait des vidéos also ranked as first youtubers the same year .
gold_template: As of templateTitle[5] templateTitleDate[0] , the most popular templateXLabel[0] templateTitle[3] templateXLabel[1] was that of templateXValue[0] , accounting for more than templateYValue[max] templateScale templateYLabel[1] . In second and third places came templateXValue[1] fait des vidéos ( 9.5 templateScale ) and templateXValue[3] ( 6.4 templateScale ) . Moreover , in a ranking of the most popular templateXLabel[0] templateTitle[4] in France in general , templateXValue[0] and templateXValue[1] fait des vidéos also ranked as first youtubers the same year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading French YouTube in the comedy competirion .  \\n From the chart we see that the Le_rire_jaune Youtube made the Leading subscribers by some margin , with only 3409 .  Norman and Cyprien made a respectable 10792 and 12151 subscribers , with Andy and Rémi_Gaillard not far behind , at 3409 and 6648 respectively .

Example 321:
titleEntities: {'Subject': ['Largest'], 'Date': ['2019']}
title: Largest donors of humanitarian aid worldwide 2019 , by country
X_Axis['Country']: ['United_States', 'Germany', 'United_Kingdom', 'European_commission', 'Saudi_Arabia', 'United_Arab_Emirates', 'Canada', 'Central_Emergency_Response_Fund', 'Sweden', 'EU_Commission_-_EU_facility_for_refugees_in_Turkey']
Y_Axis['Aid', '(in', 'million', 'U.S.', 'dollars)']: ['6496.3', '1483.8', '1439.3', '1168.1', '990.8', '425.0', '406.2', '398.5', '351.2', '349.4']

gold: This statistic shows the top donors of humanitarian aid worldwide in 2019 . In this year , the United States government donated nearly 6.5 billion U.S. dollars in humanitarian aid worldwide .
gold_template: This statistic shows the top templateTitle[1] of templateTitle[2] templateYLabel[0] templateTitle[4] in templateTitleDate[0] . In this year , the templateXValue[0] government donated nearly templateYValue[max] templateScale templateYLabel[3] dollars in templateTitle[2] templateYLabel[0] templateTitle[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Largest donors humanitarian aid the of (in they 've had .  \n It shows United_States has had 6496.3 (in , Germany has had the Largest at 349.4 (in , United_Kingdom has had 1439.3 , European_commission has had 1168.1 , Saudi_Arabia has had the most (in at 6496.3 and EU_Commission_-_EU_facility_for_refugees_in_Turkey has had 349.4 (in .

Example 322:
titleEntities: {'Subject': ['Amtrak'], 'Date': ['2017']}
title: Amtrak 's most punctual routes , by on-time performance ( OTP ) 2017
X_Axis['Amtrak', 'Routes']: ['Hiawatha_Milwaukee-Chicago', 'Capitol_Corridor_Auburn-Sacramento-Emeryville-Oakland-San_Jose', 'Keystone_New_York-Philadelphia-Harrisburg', 'Empire_Service_New_York-Albany-Syracuse-Rochester-Buffalo-Niagara_Falls', 'Ethan_Allen_Express_Rutland-Albany-New_York', 'Missouri_River_Runner_St._Louis-Jefferson_City-Kansas_City', 'Pennsylvanian_New_York-Pittsburgh', 'Heartland_Flyer_Oklahoma_City-Fort_Worth', 'Northeast_Regional', 'San_Joaquins_San_Francisco_Bay_Area/_Sacramento_-_Bakersfield/_Southern_California', 'Acela_Express', 'Maple_Leaf_Toronto-Niagara_Falls_New_York', 'Hoosier_State_Indianapolis-Chicago', 'Downeaster_Brunswick-Portland-Boston', 'Vermonter_St.Albans-Burlington-Springfield-New_York-Washington_DC']
Y_Axis['Share', 'of', 'punctual', 'trains']: ['95', '91', '86', '84', '81', '81', '81', '78', '77', '77', '76', '75', '73', '72', '70']

gold: The statistic depicts Amtrak 's most punctual routes for the 12 months ending September 2017 , ranked by on-time performance . In the last 12 months , Amtrak 's Hiawatha route between Milwaukee and Chicago , was the most punctual route with 95 percent of its trains arriving on time at the end point . Amtrak 's flagship - Acela ExpressThe Acela Express is Amtrak 's most distinctive Northeast Corridor 's rail service , traveling between Washington , DC and Boston with 14 intermediate stops including Baltimore , Philadelphia and New York City 's busiest rail hub , New York Penn Station .
gold_template: The statistic depicts templateXLabel[0] templateTitle[1] templateTitle[2] templateYLabel[1] templateXLabel[1] for the 12 months ending templateTitleDate[0] , ranked templateTitle[5] templateTitle[6] templateTitle[7] . In the last 12 months , templateXLabel[0] templateTitle[1] templateXValue[0] route between Milwaukee and Chicago , was the templateTitle[2] templateYLabel[1] route with templateYValue[max] templateScale of its templateYLabel[2] arriving on time at the end point . templateXLabel[0] templateTitle[1] flagship - templateXValue[10] ExpressThe templateXValue[10] templateXValue[4] is templateXLabel[0] templateTitle[1] templateTitle[2] distinctive templateXValue[8] templateXValue[1] templateTitle[1] rail templateXValue[3] , traveling between Washington , templateXValue[last] and Boston with 14 intermediate stops including Baltimore , Philadelphia and templateXValue[2] templateXValue[4] templateXValue[5] templateTitle[1] busiest rail hub , templateXValue[2] templateXValue[4] Penn Station .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Amtrak 's in Amtrak .  It shows Keystone_New_York-Philadelphia-Harrisburg was the Amtrak at just 70 degrees and Ethan_Allen_Express_Rutland-Albany-New_York was the warmest at 95 punctual .  After Keystone_New_York-Philadelphia-Harrisburg , the next Amtrak 's are Hiawatha_Milwaukee-Chicago at 95 degrees , followed by Vermonter_St.Albans-Burlington-Springfield-New_York-Washington_DC at 18 degrees , Capitol_Corridor_Auburn-Sacramento-Emeryville-Oakland-San_Jose at 91 degrees and then Empire_Service_New_York-Albany-Syracuse-Rochester-Buffalo-Niagara_Falls at 84 degrees .

Example 323:
titleEntities: {'Subject': ['InfoWars'], 'Date': ['2017']}
title: InfoWars credibility in the U.S. 2017
X_Axis['Response']: ['Never_heard_of', 'Heard_of_no_opinion', 'Not_at_all_credible', 'Not_too_credible', 'Somewhat_credible', 'Very_credible']
Y_Axis['Share', 'of', 'respondents']: ['43', '16', '12', '12', '10', '6']

gold: This timeline presents data on the credibility of InfoWars in the United States as of November 2017 . During a survey , six percent of respondents stated that they found the website very credible .
gold_template: This timeline presents data on the templateTitle[1] of templateTitleSubject[0] in the templateTitle[2] as of templateTitleDate[0] . During a survey , templateYValue[min] templateScale of templateYLabel[1] stated that they found the website templateXValue[last] templateXValue[2] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Share of respondents made by U.S. in a 2017 .  \\n From the chart we see that the Not_at_all_credible Response was the InfoWars credibility Response in the 2017 with 43 respondents .  The next Response to make the most respondents was the Not_too_credible Response with 12 respondents closely followed by the Very_credible Response with 6 respondents .

Example 324:
titleEntities: {'Subject': ['United States'], 'Date': ['2017']}
title: Uber users in the United States 2017 , by device
X_Axis['Device']: ['Smartphone', 'Tablet', 'Desktop', 'Mobile-only']
Y_Axis['Number', 'of', 'visits']: ['17.7', '1.2', '6.8', '16.6']

gold: By far the most common method to access the ride-sharing platform Uber in the United States is via smartphone ; around 17.7 million U.S. adults had accessed Uber via smartphone as of April 2017 – significantly higher than the next most popular platform , desktop computers , with 6.8 million users . The U.S. ride sharing market Uber is the largest ride-sharing platform in the United States , accounting for just under 70 percent of the total market as of October 2018 . However Lyft , the next-largest ride sharing platform in the U.S. , has seen significant growth in ridership over the last five years , narrowing the gap between it and Uber .
gold_template: templateTitle[5] far the most common method to access the ride-sharing platform templateTitle[0] in the templateTitleSubject[0] is via templateXValue[0] ; around templateYValue[max] templateScale templateTitle[3] adults had accessed templateTitle[0] via templateXValue[0] as of templateTitleDate[0] – significantly higher than the next most popular platform , templateXValue[2] computers , with templateYValue[2] templateScale templateTitle[1] . The templateTitle[3] ride sharing market templateTitle[0] is the largest ride-sharing platform in the templateTitleSubject[0] , accounting for just under 70 templateScale of the total market as of 2018 . However Lyft , the next-largest ride sharing platform in the templateTitle[3] , has seen significant growth in ridership over the last five years , narrowing the gap between it and templateTitle[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ 290 ,000,000 was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Uber users on United States in the 2017 on different continents .  The most Uber users was in Mobile-only where £ 290 ,000,000 was users .  The amount in Tablet was a little lower at £ 1.2 ,000,000 .

Example 325:
titleEntities: {'Subject': ['Bitcoin'], 'Date': ['2010', '2019']}
title: Bitcoin blockchain size 2010 - 2019 , by quarter
X_Axis['Quarter']: ["Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11", "Q4_'10", "Q3_'10"]
Y_Axis['Blockchain', 'size', 'in', 'megabytes']: ['242386.0', '226596.0', '210557.0', '197224.0', '184622.0', '173170.04', '162685.27', '149113.62', '134715.95', '122298.19', '108974.54', '96236.0', '84455.0', '73973.0', '63427.0', '53647.0', '45418.0', '38122.0', '32706.0', '27805.0', '23450.0', '19861.0', '16567.0', '13468.0', '10727.0', '8713.0', '6406.0', '4255.0', '2897.0', '1672.0', '876.0', '631.0', '449.0', '188.0', '15.0', '10.0', '1.0']

gold: The size of the Bitcoin blockchain has experienced consistently high levels of growth since its creation , reaching approximately 242.39 gigabytes in size as of the end of September 2019 . The bitcoin blockchain is a distributed database that contains a continuously-growing and tamper-evident list of all Bitcoin transactions and records since the date of its initial release in January of 2009 . Cryptocurrency Bitcoin is the biggest name in cryptocurrency in terms of both price index and market capitalization .
gold_template: The templateYLabel[1] of the templateTitleSubject[0] templateYLabel[0] has experienced consistently high levels of growth since its creation , reaching approximately 242.39 gigabytes in templateYLabel[1] as of the end of templateTitleDate[max] . The templateTitleSubject[0] templateYLabel[0] is a distributed database that contains a continuously-growing and tamper-evident list of all templateTitleSubject[0] transactions and records since the date of its initial release in of 2009 . Cryptocurrency templateTitleSubject[0] is the biggest name in cryptocurrency in terms of both price index and market capitalization .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Bitcoin blockchain in Bitcoin .  It shows Q1_'19 was the Bitcoin at just 1.0 degrees and Q3_'18 was the warmest at 242386.0 degrees .  After Q1_'19 , the next Bitcoin blockchain are Q3_'19 at 242386.0 degrees , followed by Q3_'10 at 18 degrees , Q2_'19 at 226596.0 degrees and then Q4_'18 at 197224.0 degrees .

Example 326:
titleEntities: {'Subject': ['Target'], 'Date': ['2010', '2018']}
title: Advertising costs of Target in the U.S. 2010 to 2018
X_Axis['Fiscal', 'year']: ['2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010']
Y_Axis['Advertising', 'spending', 'in', 'million', 'U.S.', 'dollars']: ['1494', '1457', '1465', '1434', '1600', '1548', '1389', '1360', '1292']

gold: This timeline shows the advertising expenditure of Target in North America from 2010 to 2018 . In 2012 , Target 's ad spending amounted to 1.39 billion U.S. dollars .
gold_template: This timeline shows the templateYLabel[0] expenditure of templateTitleSubject[0] in North America from templateXValue[last] to templateXValue[0] . In templateXValue[6] , templateTitleSubject[0] 's ad templateYLabel[1] amounted to templateYValue[6] templateScale templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .
generated: This chart shows the Advertising of spending made by the Target .  \\n In the U.S. , the Advertising spending were made by 2016 , with 1600 spending .  \\n The Advertising costs Target were 2017 and 2014 .

Example 327:
titleEntities: {'Subject': ['MoviePass'], 'Date': ['2019']}
title: MoviePass subscribers in the U.S. 2019
X_Axis['Month']: ['April_2019', 'June_2018', 'March_2018', 'January_2018', 'September_2017', 'August_2017', 'December_2016']
Y_Axis['Number', 'of', 'subscribers', 'in', 'thousands']: ['225', '3000', '2000', '1500', '500', '150', '20']

gold: As of April 2019 , it was estimated that MoviePass had just 225 thousand subscribers in the United States , a significant drop from the three million recorded in June 2018 . MoviePass is no stranger to media attention , but after the recent claims from a source that they had obtained internal data about MoviePass 's floundering subscriber base , the company is once again in the spotlight . What is MoviePass ? MoviePass is a subscription-based movie ticketing service , designed to allow subscribers to buy a select amount of movie tickets each month for a single fee .
gold_template: As of templateXValue[0] , it was estimated that templateTitleSubject[0] had just templateYValue[0] thousand templateYLabel[1] in the templateTitle[2] , a significant drop from the templateYValue[max] templateScale recorded in templateXValue[1] . templateTitleSubject[0] is no stranger to media attention , but after the recent claims from a source that they had obtained internal data about templateTitleSubject[0] 's floundering subscriber base , the company is once again in the spotlight . What is templateTitleSubject[0] ? templateTitleSubject[0] is a subscription-based movie ticketing service , designed to allow templateYLabel[1] to buy a select amount of movie tickets each templateXLabel[0] for a single fee .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the MoviePass subscribers U.S. in the 2019 competirion .  \\n From the chart we see that the September_2017 Month made the MoviePass subscribers by some margin , with only 20 .  June_2018 and April_2019 made a respectable 3000 and 225 subscribers , with December_2016 and January_2018 not far behind , at 20 and 1500 respectively .

Example 328:
titleEntities: {'Subject': ['National Football League'], 'Date': ['2019']}
title: National Football League : Price of a hot dog at games by team 2019
X_Axis['Team']: ['Chicago_Bears', 'Buffalo_Bills', 'Miami_Dolphins', 'Oakland_Raiders', 'Washington_Redskins', 'Detroit_Lions', 'Minnesota_Vikings', 'Los_Angeles_Rams', 'Pittsburgh_Steelers', 'Cleveland_Browns', 'Green_Bay_Packers', 'Los_Angeles_Chargers', 'Tampa_Bay_Buccaneers', 'New_York_Jets', 'Kansas_City_Chiefs', 'New_York_Giants', 'Philadelphia_Eagles', 'New_Orleans_Saints', 'Indianapolis_Colts', 'Denver_Broncos', 'Dallas_Cowboys', 'NFL_league_average', 'San_Francisco_49ers', 'Jacksonville_Jaguars', 'Houston_Texans', 'Tennessee_Titans', 'New_England_Patriots', 'Arizona_Cardinals', 'Seattle_Seahawks', 'Cincinnati_Bengals', 'Baltimore_Ravens', 'Carolina_Panthers', 'Atlanta_Falcons']
Y_Axis['Concession', 'stand', 'price', 'in', 'U.S.', 'dollars']: ['7.25', '7.0', '6.75', '6.5', '6.5', '6.25', '6.25', '6.25', '6.0', '6.0', '6.0', '6.0', '6.0', '6.0', '6.0', '6.0', '5.75', '5.5', '5.5', '5.5', '5.5', '5.34', '5.0', '5.0', '4.75', '4.5', '4.0', '4.0', '4.0', '4.0', '3.0', '2.5', '1.5']

gold: The graph ranks the teams of the National Football League according to the price of a hot dog purchased at a concession stand in the stadium . A hot dog sold for 5.50 U.S. dollars at Dallas Cowboys games in the 2019 season .
gold_template: The graph ranks the teams of the templateTitleSubject[0] templateXValue[21] according to the templateYLabel[2] of a templateTitle[4] templateTitle[5] purchased at a templateYLabel[0] templateYLabel[1] in the stadium . A templateTitle[4] templateTitle[5] sold for templateYValue[17] templateYLabel[3] templateYLabel[4] at templateXValue[20] templateTitle[6] in the templateTitleDate[0] season .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the National Football League in the Price competirion .  \\n From the chart we see that the Washington_Redskins Team made the National stand by some margin , with only 1.5 Buffalo_Bills and Chicago_Bears made a respectable 7.0 and 7.25 stand , with Atlanta_Falcons and Oakland_Raiders not far behind , at 1.5 and 6.5 respectively .

Example 329:
titleEntities: {'Subject': ['Average'], 'Date': []}
title: Average player salary in the sports industry by league 2018/19
X_Axis['Sports', 'League']: ['NBA', 'IPL', 'MLB', 'EPL', 'NFL', 'La_Liga', 'NHL', 'Serie_A', 'Bundesliga', 'Ligue_1', 'CSL', 'NPB', 'MLS', 'J-League', 'AFL', 'SPFL', 'CFL']
Y_Axis['Average', 'player', 'salary', 'in', 'million', 'U.S.', 'dollars']: ['7.77', '5.06', '4.51', '3.94', '2.91', '2.9', '2.78', '2.0', '1.84', '1.3', '1.05', '0.88', '0.38', '0.32', '0.26', '0.23', '0.09']

gold: With each player taking home a handsome 7.77 million U.S. dollars every year , the NBA is the professional sports league with the highest player wages worldwide . In second place is the Indian Premier League , an annual cricket competition contested each year between eight franchises representing eight different Indian cities . Big money in the NBA Although the wages that players in the NBA take home are astronomical , the average annual salaries vary greatly from team to team .
gold_template: With each templateYLabel[1] taking home a handsome templateYValue[max] templateScale templateYLabel[4] templateYLabel[5] every year , the templateXValue[0] is the professional templateXLabel[0] templateXLabel[1] with the highest templateYLabel[1] wages worldwide . In second place is the Indian Premier templateXLabel[1] , an annual cricket competition contested each year between templateYValue[max] franchises representing templateYValue[max] different Indian cities . Big money in the templateXValue[0] Although the wages that players in the templateXValue[0] take home are astronomical , the templateYLabel[0] annual salaries vary greatly from team to team .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average player in Average .  It shows MLB was the Average at just 0.09 degrees and NFL was the warmest at 7.77 player .  After MLB , the next Average player are NBA at 7.77 degrees , followed by CFL at 18 degrees , IPL at 5.06 degrees and then EPL at 3.94 degrees .

Example 330:
titleEntities: {'Subject': ['Belgium'], 'Date': ['2019']}
title: Foreign population of Belgium in 2019 , by origin
X_Axis['Country']: ['France', 'Netherlands', 'Italy', 'Romania', 'Morocco', 'Poland', 'Spain', 'Portugal', 'Germany', 'Bulgaria', 'Others']
Y_Axis['Foreign', 'population']: ['167508', '157474', '155866', '96034', '80295', '71331', '65476', '47677', '39608', '37277', '454038']

gold: Belgium has a multicultural landscape ; a variety of nationalities coexist in the country . Brussels houses most of the European Union institutions . This is the reason behind the nickname `` capital of Europe `` .
gold_template: templateTitleSubject[0] has a multicultural landscape ; a variety of nationalities coexist in the templateXLabel[0] . Brussels houses most of the European Union institutions . This is the reason behind the nickname `` capital of Europe `` .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Foreign population Belgium 2019 the Foreign of population they 've had .  \n It shows France has had 167508 population , Netherlands has had the Foreign at 37277 population , Italy has had 155866 , Romania has had 96034 , Morocco has had the most population at 454038 and Others has had 454038 population .

Example 331:
titleEntities: {'Subject': ['National Football League'], 'Date': ['2020', '2020']}
title: National Football League quarterbacks by number of career playoff wins 2020
X_Axis['Nfl', 'Quarterback']: ['Tom_Brady', 'Joe_Montana', 'Terry_Bradshaw', 'John_Elway', 'Peyton_Manning', 'Brett_Favre', 'Ben_Roethlisberger', 'Roger_Staubach', 'Troy_Aikman', 'Joe_Flacco', 'Aaron_Rodgers', 'Russell_Wilson', 'Kurt_Warner', 'Donovan_McNabb', 'Jim_Kelley', 'Bart_Starr', 'Jim_Plunkett', 'Eli_Manning', 'Steve_Young', 'Dan_Marino', 'Drew_Brees', 'Ken_Stabler']
Y_Axis['Number', 'of', 'playoff', 'wins']: ['30', '16', '14', '14', '14', '13', '13', '11', '11', '10', '10', '9', '9', '9', '9', '9', '8', '8', '8', '8', '8', '7']

gold: Tom Brady is widely heralded as one of the best American football players of all time . The New England Patriots quarterback has won a total of 30 playoff games during his career , almost double that of his closest rival on the list , Joe Montana . Tom Brady – a football great A legend of the game , Tom Brady has played in nine Super Bowls and has emerged victorious in six of them .
gold_template: templateXValue[0] is widely heralded as one of the best American templateTitleSubject[0] players of all time . The New England Patriots templateXLabel[1] has won a total of templateYValue[max] templateYLabel[1] games during his templateTitle[6] , almost double that of his closest rival on the list , templateXValue[1] . templateXValue[0] – a templateTitleSubject[0] great A legend of the game , templateXValue[0] has played in templateYValue[11] Super Bowls and has emerged victorious in six of them .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the National Football in National Football League .  It shows Terry_Bradshaw was the National at just 7 degrees and Peyton_Manning was the warmest at 30 degrees .  After Terry_Bradshaw , the next National Football are Tom_Brady at 30 degrees , followed by Ken_Stabler at 18 degrees , Joe_Montana at 16 degrees and then John_Elway at 14 degrees .

Example 332:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Countries with highest direct investment position received from the U.S. 2018
X_Axis['Country']: ['Netherlands', 'United_Kingdom', 'Luxembourg', 'Ireland', 'Canada', 'Switzerland', 'Bermuda', 'Singapore', 'Australia', 'Germany', 'Japan', 'China', 'Mexico', 'France', 'Hong_Kong', 'Brazil', 'Belgium', 'India', 'Republic_of_Korea', 'Sweden']
Y_Axis['Direct', 'investments', 'in', 'billion', 'U.S.', 'dollars']: ['866.33', '757.78', '713.83', '442.17', '401.87', '278.04', '249.39', '218.84', '162.98', '140.33', '125.49', '116.52', '114.88', '86.86', '82.55', '70.88', '64.05', '45.98', '41.53', '39.31']

gold: The Netherlands received the most direct investment from the United States in 2018 , an amount exceeding 866 billion U.S. dollars . This measurement was based on a historical-cost basis , meaning that the original cost of investment has been adjusted for inflation . What is foreign direct investment ? Foreign direct investment ( FDI ) is the amount that foreign speculators invests in firms in another country .
gold_template: The templateXValue[0] templateTitle[6] the most templateYLabel[0] templateTitle[4] templateTitle[7] the templateXValue[1] States in templateTitleDate[0] , an amount exceeding templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . This measurement was based on a historical-cost basis , meaning that the original cost of templateTitle[4] has been adjusted for inflation . What is foreign templateYLabel[0] templateTitle[4] ? Foreign templateYLabel[0] templateTitle[4] ( FDI ) is the amount that foreign speculators invests in firms in another templateXLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Countries highest in U.S. It shows Luxembourg was the Countries at just 39.31 degrees and Canada was the warmest at 866.33 degrees .  After Luxembourg , the next Countries highest are Netherlands at 866.33 degrees , followed by Sweden at 18 degrees , United_Kingdom at 757.78 degrees and then Ireland at 442.17 degrees .

Example 333:
titleEntities: {'Subject': ['Fastest'], 'Date': ['2016']}
title: Fastest mobile games to reach 10 million downloads worldwide 2016
X_Axis['Mobile', 'Game']: ['Super_Mario_Run', 'Pokémon_Go', 'Clash_Royale', 'Candy_Crush_Jelly_Saga', 'Angry_Birds_2', 'Farm_Heroes_Super_Saga', 'Slither.io', 'Hungry_Shark_World', 'Stack', 'Mobile_Strike', 'Disney_Crossy_Road', 'Color_Switch', 'Fallout_Shelter', 'Rayman_Adventures']
Y_Axis['Days', 'needed', 'to', 'reach', '10', 'million', 'downloads']: ['1', '7', '9', '12', '19', '20', '29', '40', '41', '55', '67', '77', '123', '183']

gold: The statistic presents information on the fastest mobile games to reach 10 million downloads worldwide as of December 2016 . As of the measured period Super Mario Run was the leader , having reached ten million downloads in only one day after its release on December 15 , 2016 . Mobile games downloads – additional information In a global ranking of the top mobile games to reach 10 million downloads , Pokémon Go claimed the second spot in exactly a week after its launch by Nintendo .
gold_template: The statistic presents information on the templateTitleSubject[0] templateXValue[9] templateTitle[2] to templateYLabel[2] templateYLabel[3] templateScale templateYLabel[5] templateTitle[7] as of templateTitleDate[0] . As of the measured period templateXValue[0] was the leader , having reached templateYLabel[3] templateScale templateYLabel[5] in only templateYValue[min] day after its release on 15 , templateTitleDate[0] . templateXValue[9] templateTitle[2] templateYLabel[5] – additional information In a global ranking of the top templateXValue[9] templateTitle[2] to templateYLabel[2] templateYLabel[3] templateScale templateYLabel[5] , templateXValue[1] claimed the second spot in exactly a week after its launch by Nintendo .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Fastest mobile in Fastest .  It shows Clash_Royale was the Fastest at just 1 degrees and Angry_Birds_2 was the warmest at 183 needed .  After Clash_Royale , the next Fastest mobile are Super_Mario_Run at 1 degrees , followed by Rayman_Adventures at 18 degrees , Pokémon_Go at 7 degrees and then Candy_Crush_Jelly_Saga at 12 degrees .

Example 334:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Leading online radio companies in the U.S. 2019 , by active sessions
X_Axis['Online', 'Radio', 'Company']: ['Pandora_Corporate', 'iHeartRadio', 'NPR_Member_Stations', 'RADIO.COM', 'Cumulus_Streaming_Network', 'Beasley_Broadcasting_Corporate', 'Univision', 'AccuRadio', 'Hubbard_Broadcasting', 'Salem_Communications', 'EMF_Corporate', 'New_York_Public_Radio', 'Urban_One', 'ESPN_Radio_Corporate', 'Bonneville_Corporate', 'Emmis_Communications', 'Classical_KUSC/KDFC', 'Saga_Communications', 'Prisa_Radio', 'Midwest_Communications']
Y_Axis['Number', 'of', 'average', 'active', 'sessions']: ['2210651', '423158', '85197', '83705', '61024', '22437', '20664', '18037', '17356', '14207', '13489', '13438', '11679', '11268', '11193', '8657', '6454', '6009', '5568', '5432']

gold: In December 2019 , the leading online radio company in the United States based on the average number of active sessions was Pandora , with around 2.2 million average active sessions throughout that month . In second place was iHeartRadio , which had over 423 thousand average active sessions . Radio market - additional information Online radio companies have increased in popularity over the past several years , corresponding with the increase in radio streaming devices , such as smartphones .
gold_template: In templateTitleDate[0] , the templateTitle[0] templateXLabel[0] templateXValue[11] templateXLabel[2] in the templateTitle[4] based on the templateYLabel[1] templateYLabel[0] of templateYLabel[2] templateYLabel[3] was templateXValue[0] , with around templateYValue[max] templateScale templateYLabel[1] templateYLabel[2] templateYLabel[3] throughout that month . In second place was templateXValue[1] , which had over templateYValue[1] thousand templateYLabel[1] templateYLabel[2] templateYLabel[3] . templateXValue[11] market - additional information templateXLabel[0] templateXValue[11] templateTitle[3] have templatePositiveTrend in popularity over the past several years , corresponding with the templatePositiveTrend in templateXValue[11] templateXValue[4] devices , such as smartphones .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading online in U.S. It shows NPR_Member_Stations was the Leading at just 5432 degrees and Cumulus_Streaming_Network was the warmest at 2210651 degrees .  After NPR_Member_Stations , the next Leading online are Pandora_Corporate at 2210651 degrees , followed by Midwest_Communications at 18 degrees , iHeartRadio at 423158 degrees and then RADIO.COM at 83705 degrees .

Example 335:
titleEntities: {'Subject': ['Finland'], 'Date': ['2018']}
title: Largest cities in Finland 2018
X_Axis['City']: ['Helsinki', 'Espoo', 'Tampere', 'Vantaa', 'Oulu', 'Turku', 'Jyväskylä', 'Lahti', 'Kuopio', 'Pori']
Y_Axis['Number', 'of', 'inhabitants']: ['648042', '283632', '235239', '228166', '203567', '191331', '141305', '119951', '118664', '84403']

gold: This statistic shows the ten largest cities in Finland as of December 2018 . The largest city in Finland is Helsinki with roughly 648 thousand citizens . Helsinki is the capital of Finland and is located in the south .
gold_template: This statistic shows the ten templateTitle[0] templateTitle[1] in templateTitleSubject[0] as of templateTitleDate[0] . The templateTitle[0] templateXLabel[0] in templateTitleSubject[0] is templateXValue[0] with roughly templateYValue[max] thousand citizens . templateXValue[0] is the capital of templateTitleSubject[0] and is located in the south .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Largest cities in Finland .  It shows Tampere was the Largest at just 84403 degrees and Oulu was the warmest at 648042 degrees .  After Tampere , the next Largest cities are Helsinki at 648042 degrees , followed by Pori at 18 degrees , Espoo at 283632 degrees and then Vantaa at 228166 degrees .

Example 336:
titleEntities: {'Subject': ['UK'], 'Date': ['2013']}
title: Average annual passenger numbers in UK airports as of 2013
X_Axis['Location']: ['London_Heathrow', 'London_Gatwick', 'Manchester_Airport', 'London_Stansted', 'London_Luton', 'Birmingham_Airport', 'Edinburgh_Airport', 'Glasgow_Airport', 'Bristol_Airport', 'Newcastle_Airport', 'Belfast_Airport', 'Liverpool_Airport', 'London_City', 'Leeds_Airport', 'Aberdeen_Airport', 'Cardiff_Airport']
Y_Axis['in', 'millions']: ['70', '34', '20', '17', '10', '9', '9', '7', '6', '4', '4', '4', '3', '3', '3', '1']

gold: This statistic shows average annual passenger numbers in United Kingdom ( UK ) airports as of 2013 . With a yearly average of 70 million passengers London Heathrow was the most frequented UK airport , followed by London Gatwick with 34 million passengers and Manchester Airport with 20 million .
gold_template: This statistic shows templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] in United Kingdom ( templateTitleSubject[0] ) templateTitle[5] as of templateTitleDate[0] . With a yearly templateTitle[0] of templateYValue[max] templateScale passengers templateXValue[0] was the most frequented templateTitleSubject[0] templateXValue[2] , followed by templateXValue[0] templateXValue[1] with templateYValue[1] templateScale passengers and templateXValue[2] with templateYValue[2] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Average annual passenger in the numbers competirion .  \\n From the chart we see that the London_Luton Location made the Average millions by some margin , with only 1 .  London_Gatwick and London_Heathrow made a respectable 34 and 70 millions , with Cardiff_Airport and London_Stansted not far behind , at 1 and 17 respectively .

Example 337:
titleEntities: {'Subject': ['Most'], 'Date': ['2019']}
title: Most valuable fast food brands worldwide in 2019
X_Axis['Brands']: ["McDonald's", 'Starbucks', 'KFC', 'Subway', "Domino's_Pizza", 'Pizza_Hut', 'Burger_King', 'Tim_Hortons', 'Chipotle', 'Taco_Bell']
Y_Axis['Brand', 'value', 'in', 'million', 'U.S.', 'dollars']: ['130368', '45884', '17205', '17124', '9570', '7580', '7063', '6680', '6201', '6182']

gold: The statistic shows the brand value of the 10 most valuable fast food brands worldwide in 2019 . In that year , the brand value of Starbucks amounted to approximately 45.9 billion U.S. dollars . McDonald 's was the most valuable fast food brand in the world with an estimated brand value of about 130.4 billion U.S. dollars .
gold_template: The statistic shows the templateYLabel[0] templateYLabel[1] of the 10 templateTitleSubject[0] templateTitle[1] templateTitle[2] templateTitle[3] templateXLabel[0] templateTitle[5] in templateTitleDate[0] . In that year , the templateYLabel[0] templateYLabel[1] of templateXValue[1] amounted to approximately templateYValue[1] templateScale templateYLabel[3] templateYLabel[4] . McDonald 's was the templateTitleSubject[0] templateTitle[1] templateTitle[2] templateTitle[3] templateYLabel[0] in the world with an estimated templateYLabel[0] templateYLabel[1] of about templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most valuable fast in the food competirion .  \\n From the chart we see that the Domino's_Pizza Brands made the Most value by some margin , with only 6182 .  Starbucks and McDonald's made a respectable 45884 and 130368 value , with Taco_Bell and Subway not far behind , at 6182 and 17124 respectively .

Example 338:
titleEntities: {'Subject': ['Winter Olympic'], 'Date': ['2014']}
title: Most watched Winter Olympic sports selected emerging markets worldwide 2014
X_Axis['Country:', 'most', 'popular', 'choice']: ['India:_ice_hockey', 'Vietnam:_skiing', 'South_Africa:_speed_skating', 'Indonesia:_bobsled', 'Kenya:_speed_skating', 'Brazil:_speed_skating', 'Philippines:_ice_hockey', 'Nigeria:_snowboarding', 'Mexico:_ice_hockey']
Y_Axis['Share', 'of', 'respondents', 'who', 'will', 'watch']: ['64', '57', '48', '40', '41', '48', '42', '42', '52']

gold: The graph presents data on Winter Olympics TV viewership in selected emerging markets worldwide 2014 . During a survey , 56 percent of respondents from the Philippines stated they would watch the 2014 Winter Olympics on TV . The closing ceremony for the 2014 Olympic games was expected to attract a total 80 million viewers from around the globe .
gold_template: The graph presents data on templateTitleSubject[0] Olympics TV viewership in templateTitle[5] templateTitle[6] templateTitle[7] templateTitle[8] templateTitleDate[0] . During a survey , 56 templateScale of templateYLabel[1] from the Philippines stated they would templateYLabel[4] the templateTitleDate[0] templateTitleSubject[0] Olympics on TV . The closing ceremony for the templateTitleDate[0] templateTitleSubject[0] games was expected to attract a total 80 templateScale viewers from around the globe .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most watched Winter in the Olympic competirion .  \\n From the chart we see that the Kenya:_speed_skating Country: made the Most respondents by some margin , with only 40 .  Vietnam:_skiing and India:_ice_hockey made a respectable 57 and 64 respondents , with Mexico:_ice_hockey and Indonesia:_bobsled not far behind , at 52 and 40 respectively .

Example 339:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2014']}
title: Leading men 's grooming brands in the U.S. 2014
X_Axis['Brand/', 'segment']: ['Gillete_Fusion/_cartridges', 'Philips_Norelco/_electric_shaver_groomer', 'Gillette_Mach3/_cartridges', "Degree_Men's/_deodorant", 'Gillette_Fusion_ProGlide/_cartridges', 'Old_Spice_Red_Zone/_toiletries_and_grooming', "Just_for_Men's/_hair_coloring", 'Axe/_liquid_body_wash', 'Old_Spice_High_Endurance/_deodorant', 'Axe_Dry/_deodorants', 'Gillette_Fusion_ProGlide_Power_/_Cartridges', 'Dove_Men+Care/_liquid_body_wash', 'Edge/_shaving_cream', 'Edge/_toiletries_and_grooming', 'Old_Spice_Red_Zone/_deodorants', 'Gillette_Fusion_Power/_cartridges', 'Gillette_Custom_Plus/_disposables', 'Old_Spice/_toiletries_and_grooming', 'Gillette_Mach3_Turbo/_cartridges', 'Dove_Men+Care/_deodorant']
Y_Axis['Sales', 'in', 'million', 'U.S.', 'dollars']: ['232.2', '224.8', '221.8', '194.6', '166.4', '137.0', '127.3', '124.6', '124.4', '90.7', '86.8', '86.7', '79.5', '78.7', '76.1', '75.8', '75.5', '74.3', '68.7', '67.3']

gold: The statistic shows the sales of the leading men 's toiletries/grooming/aftershave brands in the United States in 2014 . In that year , Gillette Fusion was the leading men 's grooming brand in the United States with sales of USD 232.2 million .
gold_template: The statistic shows the templateYLabel[0] of the templateTitle[0] templateTitle[1] templateTitle[2] toiletries/grooming/aftershave templateTitle[4] in the templateTitle[5] in templateTitleDate[0] . In that year , templateXValue[2] templateXValue[4] was the templateTitle[0] templateTitle[1] templateTitle[2] templateXValue[5] brand in the templateTitle[5] with templateYLabel[0] of USD templateYValue[max] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading men in U.S. It shows Gillette_Mach3/_cartridges was the Leading at just 67.3 degrees and Gillette_Fusion_ProGlide/_cartridges was the warmest at 232.2 degrees .  After Gillette_Mach3/_cartridges , the next Leading men are Gillete_Fusion/_cartridges at 232.2 degrees , followed by Dove_Men+Care/_deodorant at 18 degrees , Philips_Norelco/_electric_shaver_groomer at 224.8 degrees and then Degree_Men's/_deodorant at 194.6 degrees .

Example 340:
titleEntities: {'Subject': ['Carnival Corporation'], 'Date': ['2019']}
title: Number of Carnival Corporation ships worldwide in 2019 , by brand
X_Axis['Country']: ['Carnival_Cruise_Lines', 'Princess_Cruises_(“Princess”)', 'Holland_America_Line', 'Costa', 'AIDA_Cruises_(“AIDA”)', 'P&O_Cruises_(United_Kingdom)', 'Seabourn', 'P&O_Cruises_Australia', 'Cunard']
Y_Axis['Number', 'of', 'ships']: ['27', '18', '14', '14', '14', '6', '5', '3', '3']

gold: This statistic shows the number of Carnival Corporation ships worldwide as of November 2019 , by brand . There were 14 Costa ships within the Carnival Corporation cruise line group in 2019 .
gold_template: This statistic shows the templateYLabel[0] of templateXValue[0] templateTitleSubject[0] templateYLabel[1] templateTitle[4] as of templateTitleDate[0] , templateTitle[6] templateTitle[7] . There were templateYValue[2] templateXValue[3] templateYLabel[1] within the templateXValue[0] templateTitleSubject[0] templateXValue[0] templateXValue[2] group in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Number Carnival Corporation ships the Number of ships they 've had .  \n It shows Carnival_Cruise_Lines has had 27 ships , Princess_Cruises_(“Princess”) has had the Number at 3 ships , Holland_America_Line has had 14 , Costa has had 14 , AIDA_Cruises_(“AIDA”) has had the most ships at 27 and Cunard has had 3 ships .

Example 341:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Percentage of foreign-born population , by state U.S. 2018
X_Axis['State']: ['California', 'New_Jersey', 'New_York', 'Florida', 'Nevada', 'Hawaii', 'Massachusetts', 'Texas', 'Maryland', 'Washington', 'Connecticut', 'Illinois', 'District_of_Columbia', 'United_States', 'Arizona', 'Rhode_Island', 'Virginia', 'Oregon', 'Georgia', 'Colorado', 'New_Mexico', 'Delaware', 'Utah', 'Minnesota', 'Alaska', 'North_Carolina', 'Kansas', 'Pennsylvania', 'Nebraska', 'Michigan', 'New_Hampshire', 'Oklahoma', 'Idaho', 'Iowa', 'Indiana', 'South_Carolina', 'Wisconsin', 'Tennessee', 'Vermont', 'Arkansas', 'Ohio', 'North_Dakota', 'Missouri', 'Louisiana', 'South_Dakota', 'Kentucky', 'Maine', 'Alabama', 'Wyoming', 'Mississippi', 'Montana', 'West_Virginia']
Y_Axis['Percentage', 'of', 'population']: ['26.9', '22.8', '22.8', '21', '19.4', '18.7', '17.4', '17.2', '15.1', '14.7', '14.6', '14.1', '13.9', '13.7', '13.4', '13.2', '12.5', '10.3', '10.1', '9.6', '9.5', '9.4', '8.6', '8.6', '8.2', '7.9', '7.2', '7.2', '7.2', '7', '6.1', '6', '6', '5.5', '5.3', '5.1', '5.1', '5.1', '4.9', '4.8', '4.8', '4.7', '4.2', '4.2', '4', '3.8', '3.5', '3.3', '3', '2.4', '2.2', '1.5']

gold: This statistic represents the percentage of foreign-born population in the United States in 2018 , by state . As of 2018 , about 26.9 percent of California 's population were born in a foreign country .
gold_template: This statistic represents the templateScale of templateTitle[1] templateYLabel[1] in the templateXValue[13] in templateTitleDate[0] , templateTitle[3] templateXLabel[0] . As of templateTitleDate[0] , about templateYValue[max] templateScale of templateXValue[0] 's templateYLabel[1] were born in a foreign country .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale .
generated: This chart shows the Percentage foreign-born in U.S. It shows New_York was the Percentage at just 1.5 degrees and Nevada was the warmest at 26.9 percentage .  After New_York , the next Percentage foreign-born are California at 26.9 percentage , followed by West_Virginia at 18 percentage .

Example 342:
titleEntities: {'Subject': ['Hispanic'], 'Date': ['2018']}
title: Percentage of Hispanic population in the U.S. 2018 , by state
X_Axis['State']: ['Puerto_Rico', 'New_Mexico', 'Texas', 'California', 'Arizona', 'Nevada', 'Florida', 'Colorado', 'New_Jersey', 'New_York', 'Illinois', 'Connecticut', 'Rhode_Island', 'Utah', 'Oregon', 'Washington', 'Idaho', 'Massachusetts', 'Kansas', 'District_of_Columbia', 'Nebraska', 'Oklahoma', 'Hawaii', 'Maryland', 'Wyoming', 'Georgia', 'North_Carolina', 'Virginia', 'Delaware', 'Pennsylvania', 'Arkansas', 'Alaska', 'Indiana', 'Wisconsin', 'Iowa', 'South_Carolina', 'Tennessee', 'Minnesota', 'Michigan', 'Louisiana', 'Alabama', 'Missouri', 'Ohio', 'South_Dakota', 'Montana', 'New_Hampshire', 'Kentucky', 'North_Dakota', 'Mississippi', 'Vermont', 'Maine', 'West_Virginia']
Y_Axis['Percentage', 'of', 'state', 'population']: ['98.7', '49.1', '39.6', '39.3', '31.6', '29', '26.1', '21.7', '20.6', '19.2', '17.3', '16.5', '15.9', '14.2', '13.3', '12.9', '12.7', '12.3', '12', '11.3', '11.1', '10.9', '10.7', '10.4', '10', '9.7', '9.6', '9.5', '9.5', '7.6', '7.6', '7.2', '7.1', '6.9', '6.1', '5.8', '5.5', '5.5', '5.2', '5.1', '4.3', '4.1', '3.9', '3.9', '3.9', '3.9', '3.6', '3.6', '2.9', '2', '1.7', '1.4']

gold: The graph shows the percentage of Hispanic population in the United States in 2018 , by state . In 2018 , around 49.1 percent of New Mexico 's population was of Hispanic origin . The distribution of the U.S. population by ethnicity can be accessed here .
gold_template: The graph shows the templateScale of templateTitleSubject[0] templateYLabel[2] in the templateTitle[3] in templateTitleDate[0] , templateTitle[5] templateXLabel[0] . In templateTitleDate[0] , around templateYValue[1] templateScale of templateXValue[1] 's templateYLabel[2] was of templateTitleSubject[0] origin . The distribution of the templateTitle[3] templateYLabel[2] templateTitle[5] ethnicity can be accessed here .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateScale . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] templateScale , followed by templateXValue[last] at 18 templateScale .
generated: This chart shows the Percentage Hispanic in .  It shows Texas was the Percentage at just 1.4 degrees and Arizona was the warmest at 98.7 percentage .  After Texas , the next Percentage Hispanic are Puerto_Rico at 98.7 percentage , followed by West_Virginia at 18 percentage .

Example 343:
titleEntities: {'Subject': ['Yelp'], 'Date': ['2010', '2015']}
title: Yelp : number of unique visitors 2010 to 2015
X_Axis['Quarter']: ["Q1_'10", "Q2_'10", "Q3_'10", "Q4_'10", "Q1_'11", "Q2_'11", "Q3_'11", "Q4_'11", "Q1_'12", "Q2_'12", "Q3_'12", "Q4_'12", "Q1_'13", "Q2_'13", "Q3_'13", "Q4_'13", "Q1_'14", "Q2_'14", "Q3_'14", "Q4_'14", "Q1_'15"]
Y_Axis['Unique', 'visitors', 'in', 'millions']: ['29.82', '32.54', '37.5', '39.36', '46.82', '51.56', '61.1', '65.8', '71.4', '78.0', '84.0', '86.3', '102.1', '108.0', '117.0', '120.0', '132.0', '138.0', '139.0', '135.0', '142.0']

gold: The timeline shows the number of unique visitors per quarter of the website Yelp.com from 2010 to 2015 . The local search and review site 's visitor numbers have displayed a steady growth , reaching 142 million unique visitors in the first quarter of 2015 .
gold_template: The timeline shows the templateTitle[1] of templateYLabel[0] templateYLabel[1] per templateXLabel[0] of the website Yelp.com from templateTitleDate[min] to templateTitleDate[max] . The local search and review site 's visitor numbers have displayed a steady growth , reaching templateYValue[max] templateScale templateYLabel[0] templateYLabel[1] in the first templateXLabel[0] of templateTitleDate[max] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Yelp number in Yelp .  It shows Q3_'10 was the Yelp at just 29.82 degrees and Q1_'11 was the warmest at 142.0 degrees .  After Q3_'10 , the next Yelp number are Q1_'10 at 29.82 degrees , followed by Q1_'15 at 18 degrees , Q2_'10 at 32.54 degrees and then Q4_'10 at 39.36 degrees .

Example 344:
titleEntities: {'Subject': ['Games Done Quick'], 'Date': ['2014', '2019']}
title: Money raised during Games Done Quick charity events 2014 to 2019
X_Axis['Charity', 'Events']: ['Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2014)', 'Summer_Games_Done_Quick_(Doctors_Without_Borders_June_2014)', 'Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2015)', 'Summer_Games_Done_Quick_(Doctors_Without_Borders_July_2015)', 'Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2016)', 'Summer_Games_Done_Quick_(Doctors_Without_Borders_July_2016)', 'Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2017)', 'Summer_Games_Done_Quick_(Doctors_Without_Borders_July_2017)', 'Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2018)', 'Summer_Games_Done_Quick_(Doctors_Without_Borders_July_2018)', 'Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2019)', 'Summer_Games_Done_Quick_(Doctors_Without_Borders_June_2019)']
Y_Axis['Money', 'raised', 'in', 'million', 'U.S.', 'dollars']: ['1.01', '0.71', '1.57', '1.2', '1.2', '1.3', '2.2', '1.7', '2.2', '2.1', '2.39', '3.0']

gold: The timeline presents information on the amount of money raised during Games Done Quick charity events from 2014 to 2019 . Games Done Quick is a video game speedrun charity marathon . Awesome Games Done Quick ( AGDQ ) is held in January each year and is usually devoted to raising money for the Prevent Cancer Foundation , and Summer Games Done Quick ( SGDQ ) takes place in June , July or August with the goal to raise funds for Doctors Without Borders .
gold_template: The timeline presents information on the amount of templateYLabel[0] templateYLabel[1] templateTitle[2] templateXValue[0] templateXLabel[0] templateXLabel[1] from templateTitleDate[min] to templateTitleDate[max] . templateXValue[0] is a video game speedrun templateXLabel[0] marathon . templateXValue[0] ( AGDQ ) is held in templateXValue[0] each year and is usually devoted to raising templateYLabel[0] for the Prevent templateXValue[0] , and templateXValue[1] templateXValue[0] ( SGDQ ) takes place in templateXValue[1] , templateXValue[3] or with the goal to raise funds for Doctors templateXValue[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Money raised during in the Games competirion .  \\n From the chart we see that the Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2016) Charity made the Money raised by some margin , with only 0.71 .  Summer_Games_Done_Quick_(Doctors_Without_Borders_June_2014) and Awesome_Games_Done_Quick_(Prevent_Cancer_Foundation_January_2014) made a respectable 0.71 and 1.01 raised , with Summer_Games_Done_Quick_(Doctors_Without_Borders_June_2019) and Summer_Games_Done_Quick_(Doctors_Without_Borders_July_2015) not far behind , at 3.0 and 1.2 respectively .

Example 345:
titleEntities: {'Subject': ['Twitter'], 'Date': ['2014', '2014']}
title: Follower count distribution on Twitter 2014
X_Axis['Number', 'of', 'followers']: ['1-100', '101-200', '201-300', '301-400', '401-500']
Y_Axis['Percentage', 'of', 'Twitter', 'users']: ['93.68', '2.75', '1.04', '0.57', '0.36']

gold: This statistic gives information on the follower count distribution on Twitter . As of April 2014 , 93.68 percent of Twitter users had between 1 and 100 followers on the microblogging site .
gold_template: This statistic gives information on the templateTitle[0] templateTitle[1] templateTitle[2] on templateYLabel[1] . As of templateTitleDate[0] , templateYValue[max] templateScale of templateYLabel[1] templateYLabel[2] had between templateYValue[2] and 100 templateXLabel[1] on the microblogging site .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Percentage of Twitter users at the Twitter street .  \\n The highest Percentage was 93.68 in the 301-400 Number followed by 2.75 percentage in the 101-200 Number , 93.68 percentage in 301-400 and finally 0.36 percentage in 401-500 .

Example 346:
titleEntities: {'Subject': ['GDP'], 'Date': ['2019']}
title: Countries with the largest gross domestic product ( GDP ) per capita 2019
X_Axis['Country']: ['Luxembourg', 'Switzerland', 'Macao_SAR', 'Norway', 'Ireland', 'Qatar', 'Iceland', 'United_States', 'Singapore', 'Denmark', 'Australia', 'Netherlands', 'Sweden', 'Austria', 'Hong_Kong_SAR', 'Finland', 'San_Marino', 'Germany', 'Canada', 'Belgium']
Y_Axis['GDP', 'per', 'capita', 'in', 'U.S.', 'dollars']: ['113196.49', '83716.81', '81151.93', '77975.43', '77771.21', '69687.55', '67037.34', '65111.6', '63987.07', '59795.27', '53825.16', '52367.85', '51241.91', '50022.61', '49334.35', '48868.74', '47279.93', '46563.99', '46212.84', '45175.59']

gold: The statistic shows the 20 countries with the largest gross domestic product ( GDP ) per capita in 2019 . In 2019 , Germany ranked 18th with an estimated GDP of about 46,563.99 U.S. dollars per capita . GDP per capita Gross domestic product ( GDP ) is a strong indicator of a country 's economic performance and strength .
gold_template: The statistic shows the 20 templateTitle[0] templateTitle[1] the templateTitle[2] templateTitle[3] templateTitle[4] templateTitle[5] ( templateYLabel[0] ) templateYLabel[1] templateYLabel[2] in templateTitleDate[0] . In templateTitleDate[0] , templateXValue[17] ranked 18th templateTitle[1] an estimated templateYLabel[0] of about templateYValue[17] templateYLabel[3] templateYLabel[4] templateYLabel[1] templateYLabel[2] . templateYLabel[0] templateYLabel[1] templateYLabel[2] templateTitle[3] templateTitle[4] templateTitle[5] ( templateYLabel[0] ) is a strong indicator of a templateXLabel[0] 's economic performance and strength .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Countries largest in GDP .  It shows Macao_SAR was the Countries at just 45175.59 degrees and Ireland was the warmest at 113196.49 degrees .  After Macao_SAR , the next Countries largest are Luxembourg at 113196.49 degrees , followed by Belgium at 18 degrees , Switzerland at 83716.81 degrees and then Norway at 77975.43 degrees .

Example 347:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Most popular social media apps in the U.S. 2019 , by reach
X_Axis['Platform']: ['Facebook_(main)', 'Instagram_(main)', 'Facebook_Messenger', 'Twitter_(main)', 'Pinterest', 'Reddit', 'Snapchat', 'WhatsApp', 'Messenger_by_Google', 'Tumblr', 'Discord_-_Chat_for_Games', 'Google_Hangouts_(main)', 'GroupMe', 'Kik', 'TikTok_(main)', 'Skype_(main)', 'TikTok', 'Telegram', 'LINE', 'Google+', 'WeChat']
Y_Axis['Mobile', 'reach']: ['90.9', '64.92', '56.97', '43.62', '35.81', '25.63', '24.62', '13.69', '9.35', '8.96', '8.03', '7.59', '5.75', '4.13', '3.34', '2.96', '2.01', '1.85', '1.68', '1.4', '0.79']

gold: Facebook is by far the most popular mobile social networking app in the United States – in September 2019 , 90.9 percent of U.S. mobile users accessed the mobile app . The company 's other mobile social media properties Facebook Messenger and Instagram were ranked second and third with 64.92 and almost 57 percent audience reach respectively . Mobile social media Accessing social media is one of the leading mobile activities in the United States .
gold_template: templateXValue[0] is templateXValue[8] far the templateTitle[0] templateTitle[1] templateYLabel[0] templateTitle[2] networking app in the templateTitle[5] – in templateTitleDate[0] , templateYValue[max] templateScale of templateTitleSubject[0] templateYLabel[0] users accessed the templateYLabel[0] app . The company 's other templateYLabel[0] templateTitle[2] templateTitle[3] properties templateXValue[0] templateXValue[2] and templateXValue[1] were ranked second and third with templateYValue[1] and almost templateYValue[2] templateScale audience templateYLabel[1] respectively . templateYLabel[0] templateTitle[2] templateTitle[3] Accessing templateTitle[2] templateTitle[3] is templateYValue[19] of the leading templateYLabel[0] activities in the templateTitle[5] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most popular in U.S. It shows Facebook_Messenger was the Most at just 0.79 degrees and Pinterest was the warmest at 90.9 degrees .  After Facebook_Messenger , the next Most popular are Facebook_(main) at 90.9 degrees , followed by WeChat at 18 degrees , Instagram_(main) at 64.92 degrees and then Twitter_(main) at 43.62 degrees .

Example 348:
titleEntities: {'Subject': ['Canada'], 'Date': ['2018']}
title: Canada : real Gross Domestic Product ( GDP ) in 2018 , by province
X_Axis['Province']: ['Ontario', 'Quebec', 'Alberta', 'British_Columbia', 'Saskatchewan', 'Manitoba', 'Nova_Scotia', 'Newfoundland_and_Labrador', 'New_Brunswick', 'Prince_Edward_Island', 'Northwest_Territories', 'Nunavut', 'Yukon']
Y_Axis['Real', 'GDP', 'in', 'billion', 'chained', '(2007)', 'Canadian', 'dollars']: ['728.36', '365.61', '335.1', '246.51', '82.5', '62.73', '36.52', '30.76', '30.3', '5.7', '4.95', '2.96', '2.63']

gold: This graph shows the real Gross Domestic Product ( GDP ) of Canada in 2018 , by province . In 2018 , Ontario added about 728.4 billion chained ( 2012 ) Canadian dollars of value to the real GDP of Canada .
gold_template: This graph shows the templateYLabel[0] templateTitle[2] templateTitle[3] templateTitle[4] ( templateYLabel[1] ) of templateTitleSubject[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] . In templateTitleDate[0] , templateXValue[0] added about templateYValue[max] templateScale templateYLabel[3] ( 2012 ) templateYLabel[5] templateYLabel[6] of value to the templateYLabel[0] templateYLabel[1] of templateTitleSubject[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Canada real in Canada .  It shows Alberta was the Canada at just 2.63 degrees and Saskatchewan was the warmest at 728.36 GDP .  After Alberta , the next Canada real are Ontario at 728.36 degrees , followed by Yukon at 18 degrees , Quebec at 365.61 degrees and then British_Columbia at 246.51 degrees .

Example 349:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: Total area of U.S. timberland in 2017 , by region
X_Axis['Country']: ['Rocky_Mountains', 'Pacific_Coast', 'North', 'South', 'All_regions']
Y_Axis['Timberland', 'in', 'thousand', 'acres']: ['69654', '71784', '164894', '208092', '514425']

gold: This statistic shows the total timberland in the United States as of 2017 , sorted by region . In 2017 , the largest area of timberland in the U.S. was reported for the South with a total of 208,092 acres .
gold_template: This statistic shows the templateTitle[0] templateYLabel[0] in the templateTitle[2] as of templateTitleDate[0] , sorted templateTitle[5] templateTitle[6] . In templateTitleDate[0] , the largest templateTitle[1] of templateYLabel[0] in the templateTitleSubject[0] was reported for the templateXValue[3] with a templateTitle[0] of templateYValue[3] templateYLabel[2] .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Timberland of U.S. in .  We can see that both Pacific_Coast and North have a very small amount whilst All_regions , South and Rocky_Mountains have a much higher amount . 

Example 350:
titleEntities: {'Subject': ['Oscar'], 'Date': ['2020']}
title: Most Oscar nominated individuals of all time without a win as of 2020
X_Axis['List', 'Of', 'Academics']: ['Greg_P._Russell', 'Roland_Anderson', 'Alex_North', 'Thomas_Newman', 'Loren_L._Ryder', 'George_J._Folsey', 'Federico_Fellini', 'Rick_Kline', 'Diane_Warren', 'Walter_Lantz', 'Walter_Scharf', 'Anna_Behlmer']
Y_Axis['Number', 'of', 'Academy', 'Awards', 'nominations']: ['16', '15', '15', '15', '14', '13', '12', '11', '11', '10', '10', '10']

gold: Whilst many Academy Award nominees are lucky enough to take home awards for their performances , some actors have received multiple nominations but thus far failed to secure a win . At the top of this ranking is Greg P. Russell , who has 16 nominations to his name , but is yet to win the coveted award . In 2019 , Diane Warren made the list after having received her tenth nomination for her song `` I 'll Fight `` from the documentary 'RBG ' _ , but failed to win an award that year .
gold_template: Whilst many templateYLabel[1] Award nominees are lucky enough to take home templateYLabel[2] for their performances , some actors have received multiple templateYLabel[3] but thus far failed to secure a templateTitle[7] . At the top of this ranking is templateXValue[0] , who has templateYValue[max] templateYLabel[3] to his name , but is yet to templateTitle[7] the coveted award . In 2019 , templateXValue[8] made the templateXLabel[0] after having received her tenth nomination for her song `` I 'll Fight `` from the documentary 'RBG ' _ , but failed to templateTitle[7] an award that year .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most Oscar in .  It shows Alex_North was the Most at just 10 degrees and Loren_L._Ryder was the warmest at 16 degrees .  After Alex_North , the next Most Oscar are Greg_P._Russell at 16 degrees , followed by Anna_Behlmer at 18 degrees , Roland_Anderson at 15 degrees and then Thomas_Newman at 15 degrees .

Example 351:
titleEntities: {'Subject': ['United States'], 'Date': []}
title: United States number of ski areas operating , per state 2018/19
X_Axis['State']: ['New_York', 'Michigan', 'Wisconsin', 'Colorado', 'New_Hampshire', 'California', 'Pennsylvania', 'Vermont', 'Minnesota', 'Maine', 'Idaho', 'Utah', 'Montana', 'Washington', 'Massachusetts', 'Oregon', 'Wyoming', 'Alaska', 'New_Mexico', 'North_Carolina', 'Nevada', 'West_Virginia', 'Connecticut', 'Illinois', 'Ohio', 'Virginia', 'Iowa', 'South_Dakota', 'Arizona', 'New_Jersey', 'North_Dakota', 'Missouri', 'Indiana', 'Tennessee', 'Maryland', 'Rhode_Island', 'Alabama']
Y_Axis['Number', 'of', 'ski', 'areas']: ['51', '43', '31', '31', '30', '30', '26', '25', '20', '20', '17', '14', '14', '14', '13', '12', '10', '9', '9', '6', '5', '5', '5', '5', '5', '5', '3', '3', '3', '2', '2', '2', '2', '1', '1', '1', '1']

gold: This graph depicts the number of ski areas operating in the U.S. during the 2018/2019 winter season , per state . During that season , there were three operating ski areas in Arizona .
gold_template: This graph depicts the templateYLabel[0] of templateYLabel[1] templateYLabel[2] templateTitle[5] in the templateTitle[1] during the 2018/2019 winter season , templateTitle[6] templateXLabel[0] . During that season , there were templateYValue[26] templateTitle[5] templateYLabel[1] templateYLabel[2] in templateXValue[28] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the United States in United States .  It shows Wisconsin was the United at just 1 degrees and New_Hampshire was the warmest at 51 degrees .  After Wisconsin , the next United States are New_York at 51 degrees , followed by Alabama at 18 degrees , Michigan at 43 degrees and then Colorado at 31 degrees .

Example 352:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Home birth rate : leading U.S. states 2018
X_Axis['State']: ['Montana', 'Wisconsin', 'Utah', 'Idaho', 'Washington', 'Vermont', 'Oregon', 'Alaska', 'Maine', 'Pennsylvania']
Y_Axis['Percentage', 'of', 'all', 'births', 'that', 'were', 'home', 'births']: ['2.4', '2.3', '2.2', '2.2', '2.1', '2', '2', '1.9', '1.9', '1.9']

gold: The states in the U.S. with the highest home birth rate in 2018 included Montana , Wisconsin and Utah . Montana had the highest home birth rate with 2.4 percent of all births occurring at home while 2.3 percent of all births in Wisconsin occurred at home . Home births Home births are selected by women in the U.S. for a variety of reasons that may include , a preference for less medical intervention , a location preference , cost , and a cultural or religious preference .
gold_template: The templateTitle[5] in the templateTitleSubject[0] with the highest templateYLabel[5] templateTitle[1] templateTitle[2] in templateTitleDate[0] included templateXValue[0] , templateXValue[1] and templateXValue[2] . templateXValue[0] had the highest templateYLabel[5] templateTitle[1] templateTitle[2] with templateYValue[max] templateScale of templateYLabel[1] templateYLabel[2] occurring at templateYLabel[5] while templateYValue[1] templateScale of templateYLabel[1] templateYLabel[2] in templateXValue[1] occurred at templateYLabel[5] . templateYLabel[5] templateYLabel[2] templateYLabel[5] templateYLabel[2] are selected by women in the templateTitleSubject[0] for a variety of reasons templateYLabel[3] include , a preference for less medical intervention , a location preference , cost , and a cultural or religious preference .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Home birth rate in the leading competirion .  \\n From the chart we see that the Washington State made the Home all by some margin , with only 1.9 Wisconsin and Montana made a respectable 2.3 and 2.4 all , with Pennsylvania and Idaho not far behind , at 1.9 and 2.2 respectively .

Example 353:
titleEntities: {'Subject': ['World'], 'Date': ['2018']}
title: World nuclear power consumption by country 2018
X_Axis['Country']: ['United_States', 'France', 'China', 'Russian_Federation', 'South_Korea', 'Canada', 'Ukraine', 'Germany', 'UK', 'Sweden', 'Spain', 'Japan']
Y_Axis['Share', 'of', 'nuclear', 'power', 'consumption']: ['31.4', '15.3', '10.9', '7.6', '4.9', '3.7', '3.1', '2.8', '2.4', '2.5', '2.1', '1.8']

gold: This statistic represents the percentage of world nuclear power consumption in 2018 , by country . That year , the United States accounted for more than one third of the total nuclear power consumption worldwide .
gold_template: This statistic represents the templateScale of templateTitleSubject[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] in templateTitleDate[0] , templateTitle[4] templateXLabel[0] . That year , the templateXValue[0] accounted for more than one third of the total templateYLabel[1] templateYLabel[2] templateYLabel[3] worldwide .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the World nuclear power consumption the Share of nuclear they 've had .  \n It shows United_States has had 31.4 nuclear , France has had the World at 1.8 nuclear , China has had 10.9 , Russian_Federation has had 7.6 , South_Korea has had the most nuclear at 31.4 and Japan has had 1.8 nuclear .

Example 354:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Top 25 most populated cities in the U.S. - poverty rate in 2018
X_Axis['Us', 'City']: ['Detroit_city_Michigan', 'Philadelphia_city_Pennsylvania', 'Houston_city_Texas', 'El_Paso_city_Texas', 'San_Antonio_city_Texas', 'Columbus_city_Ohio', 'Boston_city_Massachusetts', 'Dallas_city_Texas', 'Chicago_city_Illinois', 'New_York_city_New_York', 'Los_Angeles_city_California', 'Indianapolis_city_(balance)_Indiana', 'Washington_city_District_of_Columbia', 'Nashville-Davidson_metropolitan_government_(balance)_Tennessee', 'Phoenix_city_Arizona', 'Fort_Worth_city_Texas', 'Jacksonville_city_Florida', 'Austin_city_Texas', 'San_Diego_city_California', 'Charlotte_city_North_Carolina', 'Portland_city_Oregon', 'Denver_city_Colorado', 'Seattle_city_Washington', 'San_Francisco_city_California', 'San_Jose_city_California']
Y_Axis['Percentage', 'of', 'poor', 'people']: ['33.4', '24.5', '20.4', '20.1', '20', '19.9', '18.2', '18', '17.4', '17.3', '16.5', '16.5', '16.2', '15.6', '15.6', '15.6', '15', '13.3', '12.9', '12.8', '11.5', '11.3', '11', '10', '8.3']

gold: This statistic shows the percentage of people who live below the poverty level in the top 25 most populated cities in the U.S. in 2018 . In 2018 , total 33.4 percent of all residents in Detroit , Michigan lived below the poverty level .
gold_template: This statistic shows the templateScale of templateYLabel[2] who live below the templateTitle[6] level in the templateTitle[0] templateYValue[1] templateTitle[2] templateTitle[3] templateTitle[4] in the templateTitleSubject[0] in templateTitleDate[0] . In templateTitleDate[0] , total templateYValue[max] templateScale of all residents in templateXValue[0] , templateXValue[0] lived below the templateTitle[6] level .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Top 25 in U.S. It shows Houston_city_Texas was the Top at just 8.3 degrees and San_Antonio_city_Texas was the warmest at 33.4 degrees .  After Houston_city_Texas , the next Top 25 are Detroit_city_Michigan at 33.4 degrees , followed by San_Jose_city_California at 18 degrees , Philadelphia_city_Pennsylvania at 24.5 degrees and then El_Paso_city_Texas at 20.1 degrees .

Example 355:
titleEntities: {'Subject': ['Europe'], 'Date': ['2016']}
title: Delay rate of the most punctual trains in Europe 2016
X_Axis['Railway', 'Stations']: ['Lille_Europe_(Eurostar)', 'Ashford_International_(Eurostar)', 'Reims_(SNCF)', 'Limoges_(SNCF)', 'Brest_(SNCF)', 'Dijon_(SNCF)', 'Lille_(SNCF)', 'Anger_Saint-Laud_(SNCF)', 'Laval_(SNCF)', 'Ebbsfleet_(Eurostar)']
Y_Axis['Rate', 'of', 'delay']: ['0', '0', '0.89', '1.09', '1.14', '1.16', '1.21', '1.26', '1.29', '1.32']

gold: The Eurostar high-speed train brings passengers from one side of the Channel , which separates the United Kingdom from Continental Europe , to the other . Much to the pleasure of the passengers heading to or departing from the Lille Railway station , this train registered a rate of delay ( of more than half an hour ) of 0 percent , making it one of the most punctual European trains in 2016 . Eurostar has a high perception in the UK Usually , the high volume of passengers combined with the long distances covered by this train , could signify a decrease in the quality of the service provided .
gold_template: The Eurostar high-speed train brings passengers from templateYValue[2] side of the Channel , which separates the United Kingdom from Continental templateXValue[0] , to the other . Much to the pleasure of the passengers heading to or departing from the templateXValue[0] templateXLabel[0] station , this train registered a templateYLabel[0] of templateYLabel[1] ( of more than half an hour ) of templateYValue[min] templateScale , making it templateYValue[2] of the templateTitle[2] templateTitle[3] European templateTitle[4] in templateTitleDate[0] . Eurostar has a high perception in the UK Usually , the high volume of passengers combined with the long distances covered by this train , could signify a templateNegativeTrend in the quality of the service provided .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Delay rate most in the punctual competirion .  \\n From the chart we see that the Brest_(SNCF) Railway made the Delay by some margin , with only 0 .  Ashford_International_(Eurostar) and Lille_Europe_(Eurostar) made a respectable 0 and delay , with Ebbsfleet_(Eurostar) and Limoges_(SNCF) not far behind , at 1.32 and 1.09 respectively .

Example 356:
titleEntities: {'Subject': ['Countries'], 'Date': ['2010']}
title: Countries with the highest proportion of soccer players 2010
X_Axis['Country']: ['Germany', 'Chile', 'Paraguay', 'Slovakia', 'The_Netherlands']
Y_Axis['Proportion', 'of', 'soccer', 'players']: ['19.8', '15.7', '14.8', '11.4', '10.4']

gold: This table shows the countries with the highest proportion of soccer players in the population . 19.8 percent of the German population are soccer players .
gold_template: This table shows the templateTitleSubject[0] templateTitle[1] the templateTitle[2] templateYLabel[0] of templateYLabel[1] templateYLabel[2] in the population . templateYValue[max] templateScale of the German population are templateYLabel[1] templateYLabel[2] .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Proportion of Countries proportion in Countries .  We can see that both Chile and Paraguay have a very small amount whilst The_Netherlands , Slovakia and Germany have a much higher amount . 

Example 357:
titleEntities: {'Subject': ['LNG'], 'Date': ['2019']}
title: Global LNG prices by select region 2019
X_Axis['Country']: ['China', 'Korea', 'India', 'Belgium', 'Argentina_(Bahia_Blanca)', 'Mexico_(Altamira)', 'Spain', 'UK', 'U.S._(Cove_Point)', 'Canada_(Canaport)', 'U.S._(Lake_Charles)']
Y_Axis['Prices', 'in', 'U.S.', 'dollars', 'per', 'million', 'Btu']: ['4.43', '4.43', '4.38', '4.32', '4.27', '4.02', '3.65', '3.38', '2.25', '2.25', '2.17']

gold: South Korea and China had the highest landed price of liquefied natural gas ( LNG ) in the world at 4.43 U.S. dollars per million Btu , compared with the United States ( Lake Charles ) at 2.15 U.S. dollars per million Btu . LNG landed prices refers to the price that is received at the regasification terminal . These prices are determined by a netback price which is based on the effective price for a seller or producer at a defined location .
gold_template: South templateXValue[1] and templateXValue[0] had the highest landed price of liquefied natural gas ( templateTitleSubject[0] ) in the world at templateYValue[max] templateXValue[8] templateYLabel[2] templateYLabel[3] templateScale templateYLabel[5] , compared with the country ( Lake Charles ) at 2.15 templateXValue[8] templateYLabel[2] templateYLabel[3] templateScale templateYLabel[5] . templateTitleSubject[0] landed templateYLabel[0] refers to the price that is received at the regasification terminal . These templateYLabel[0] are determined templateTitle[3] a netback price which is based on the effective price for a seller or producer at a defined location .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Global LNG prices by the Prices of U.S. they 've had .  \n It shows China has had 4.43 U.S. , Korea has had the Global at 2.17 U.S. , India has had 4.38 , Belgium has had 4.32 , Argentina_(Bahia_Blanca) has had the most U.S. at 4.43 and U.S._(Lake_Charles) has had 2.17 U.S. .

Example 358:
titleEntities: {'Subject': ['Gleevec'], 'Date': ['2013']}
title: Average prices of Gleevec - selected countries 2013
X_Axis['Country']: ['United_States', 'Switzerland', 'Spain', 'Netherlands', 'England', 'Canada', 'New_Zealand']
Y_Axis['Price', 'in', 'U.S.', 'dollars']: ['6214', '3633', '3348', '3321', '2697', '1141', '989']

gold: This statistic displays the average prices of Gleevec in 2013 in selected countries . In that year , the price of Gleevec averaged 3,321 U.S. dollars in the Netherlands . Gleevec is a prescription drug used to treat some types of cancers , including some types of leukemia .
gold_template: This statistic displays the templateTitle[0] templateTitle[1] of templateTitleSubject[0] in templateTitleDate[0] in templateTitle[3] templateTitle[4] . In that year , the templateYLabel[0] of templateTitleSubject[0] averaged templateYValue[3] templateYLabel[1] templateYLabel[2] in the templateXValue[3] . templateTitleSubject[0] is a prescription drug used to treat some types of cancers , including some types of leukemia .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Average prices Gleevec selected the Price of U.S. they 've had .  \n It shows United_States has had 6214 U.S. , Switzerland has had the Average at 989 U.S. , Spain has had 3348 , Netherlands has had 3321 , England has had the most U.S. at 6214 and New_Zealand has had 989 U.S. .

Example 359:
titleEntities: {'Subject': ['United States'], 'Date': ['2010']}
title: Largest Cuban-American population groups in the United States , by county 2010
X_Axis['County']: ['Miami-Dade_County_FL', 'Broward_County_FL', 'Hillsborough_County_FL', 'Palm_Beach_County_FL', 'Los_Angeles_County_CA', 'Hudson_County_NJ', 'Orange_County_FL', 'Clark_County_NV', 'Lee_County_FL', 'Collier_County_FL']
Y_Axis['Population', 'number']: ['856007', '83713', '65451', '43038', '41350', '28652', '22528', '20569', '20253', '17179']

gold: This statistic depicts the largest Cuban-American population groups in different counties across the United States as of 2010 . At this time there were 856,007 people of Cuban origin living in Miami-Dade County in Florida .
gold_template: This statistic depicts the templateTitle[0] templateTitle[1] templateYLabel[0] templateTitle[3] in different counties across the templateTitleSubject[0] as of templateTitleDate[0] . At this time there were templateYValue[max] people of Cuban origin living in templateXValue[0] in Florida .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Largest Cuban-American population in the groups competirion .  \\n From the chart we see that the Los_Angeles_County_CA County made the Largest number by some margin , with only 17179 .  Broward_County_FL and Miami-Dade_County_FL made a respectable 83713 and 856007 number , with Collier_County_FL and Palm_Beach_County_FL not far behind , at 17179 and 43038 respectively .

Example 360:
titleEntities: {'Subject': ['Nordic'], 'Date': ['2017']}
title: Surface area of the Nordic countries 2017
X_Axis['Country']: ['Sweden', 'Greenland', 'Norway', 'Finland', 'Iceland', 'Denmark', 'Faroe_Islands']
Y_Axis['Surface', 'area', 'in', 'square', 'kilometers']: ['447420', '410450', '385178', '338420', '103000', '42922', '1396']

gold: This statistic shows the surface area of the Nordic countries in 2017 . The largest of all Nordic countries is Sweden , with a surface of roughly 447 thousand square kilometers . Its neighboring country Norway has a size of approximately 385 thousand square kilometers , which includes the arctic islands of Svalbard and Jan Mayen .
gold_template: This statistic shows the templateYLabel[0] templateYLabel[1] of the templateTitleSubject[0] templateTitle[3] in templateTitleDate[0] . The largest of all templateTitleSubject[0] templateTitle[3] is templateXValue[0] , with a templateYLabel[0] of roughly templateYValue[max] thousand templateYLabel[2] templateYLabel[3] . Its neighboring templateXLabel[0] templateXValue[2] has a size of approximately templateYValue[2] thousand templateYLabel[2] templateYLabel[3] , which includes the arctic templateXValue[last] of Svalbard and Jan Mayen .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Surface area Nordic countries the Surface of area they 've had .  \n It shows Sweden has had 447420 area , Greenland has had the Surface at 1396 area , Norway has had 385178 , Finland has had 338420 , Iceland has had the most area at 447420 and Faroe_Islands has had 1396 area .

Example 361:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Rate of pertussis among U.S. population by state 2018
X_Axis['State']: ['Mississippi', 'Nevada', 'Louisiana', 'West_Virginia', 'Florida', 'District_of_Columbia', 'South_Dakota', 'Delaware', 'Georgia', 'Montana', 'Tennessee', 'Maryland', 'Arkansas', 'Virginia', 'Connecticut', 'South_Carolina', 'Indiana', 'North_Carolina', 'Massachusetts', 'Alabama', 'Wyoming', 'Hawaii', 'California', 'Michigan', 'Arizona', 'New_Hampshire', 'Texas', 'Oregon', 'Oklahoma', 'New_York', 'Idaho', 'Iowa', 'Kansas', 'United_States', 'North_Dakota', 'Missouri', 'New_Jersey', 'New_Mexico', 'Nebraska', 'Illinois', 'Washington', 'Rhode_Island', 'Ohio', 'Utah', 'Kentucky', 'Pennsylvania', 'Colorado', 'Minnesota', 'Maine', 'Alaska', 'Wisconsin', 'Vermont']
Y_Axis['New', 'cases', 'per', '100,000', 'population']: ['0.2', '1.2', '1.4', '1.4', '1.6', '1.6', '1.6', '1.6', '1.8', '2.0', '2.1', '2.2', '2.3', '2.7', '2.7', '2.7', '2.7', '2.9', '3.0', '3.6', '3.6', '3.8', '3.8', '4.2', '4.2', '4.5', '4.6', '4.7', '4.7', '4.9', '4.9', '5.1', '5.5', '5.6', '5.8', '5.9', '6.3', '7.7', '8.0', '8.1', '8.5', '8.6', '8.6', '8.7', '10.4', '12.4', '12.9', '18.4', '19.5', '21.3', '25.0', '46.5']

gold: The states with the highest rates of pertussis include Vermont , Wisconsin , Alaska and Maine . Pertussis is more commonly known as whooping cough . It is a respiratory disease that causes uncontrollable coughing .
gold_template: The templateXValue[33] with the highest rates of templateTitle[1] include templateXValue[last] , templateXValue[50] , templateXValue[49] and templateXValue[48] . templateTitle[1] is more commonly known as whooping cough . It is a respiratory disease that causes uncontrollable coughing .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Rate pertussis in U.S. It shows Louisiana was the Rate at just 0.2 degrees and Florida was the warmest at 46.5 degrees .  After Louisiana , the next Rate pertussis are Mississippi at 0.2 degrees , followed by Vermont at 18 degrees , Nevada at 1.2 degrees and then West_Virginia at 1.4 degrees .

Example 362:
titleEntities: {'Subject': ['Canada'], 'Date': ['2018']}
title: Number of married people in Canada , by age group 2018
X_Axis['Age', 'group']: ['15_to_19_years', '20_to_24_years', '25_to_29_years', '30_to_34_years', '35_to_39_years', '40_to_44_years', '45_to_49_years', '50_to_54_years', '55_to_59_years', '60_to_64_years', '65_to_69_years', '70_to_74_years', '75_to_79_years', '80_to_84_years', '85_to_89_years', '90_to_94_years', '95_to_99_years', '100_years_and_over']
Y_Axis['Number', 'of', 'people']: ['2793', '84864', '510931', '1076088', '1319123', '1347563', '1379171', '1475369', '1623642', '1526827', '1292505', '1011113', '639487', '373961', '182464', '53439', '8642', '636']

gold: This statistic shows the number of married people in Canada in 2018 , distinguished by age group . In 2018 , 2,793 married Canadians were between 15 and 19 years of age .
gold_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitleSubject[0] in templateTitleDate[0] , distinguished templateTitle[4] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , templateYValue[0] templateTitle[1] Canadians were between templateXValue[0] and templateXValue[0] of templateXLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number married in Canada .  It shows 25_to_29_years was the Number at just 636 degrees and 35_to_39_years was the warmest at 1623642 people .  After 25_to_29_years , the next Number married are 15_to_19_years at 2793 degrees , followed by 100_years_and_over at 18 degrees , 20_to_24_years at 84864 degrees and then 30_to_34_years at 1076088 degrees .

Example 363:
titleEntities: {'Subject': ['Italy', 'Italian', 'Instagram'], 'Date': ['2018', '2018']}
title: Italy : most-followed Italian fashion brands on Instagram 2018
X_Axis['Brand', 'Name']: ['Gucci', 'Dolce_&_Gabbana', 'Prada', 'Versace', 'Valentino', 'Giorgio_Armani', 'Fendi', 'Moschino', 'Miu_Miu', 'Roberto_Cavalli_Official']
Y_Axis['Number', 'of', 'Instagram', 'followers', 'in', 'millions']: ['21.0', '15.8', '14.6', '11.3', '9.8', '9.9', '8.5', '5.8', '4.9', '4.4']

gold: The statistic illustrates the leading Italian fashion brands ranked by number of Instagram followers as of February 2018 . During the survey period in February 2018 , it was reported that Gucci ranked first with 21 million followers .
gold_template: The statistic illustrates the leading templateTitleSubject[1] templateTitle[3] templateTitle[4] ranked by templateYLabel[0] of templateYLabel[1] templateYLabel[2] as of templateTitleDate[0] . During the survey period in templateTitleDate[0] , it was reported that templateXValue[0] ranked first with templateYValue[max] templateScale templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Italy most-followed Italian in the fashion competirion .  \\n From the chart we see that the Valentino Brand made the Italy Instagram by some margin , with only 4.4 Dolce_&_Gabbana and Gucci made a respectable 15.8 and 21.0 Instagram , with Roberto_Cavalli_Official and Versace not far behind , at 4.4 and 11.3 respectively .

Example 364:
titleEntities: {'Subject': ['HPE research development'], 'Date': ['2013', '2019']}
title: HPE : research and development spending 2013 to 2019
X_Axis['Fiscal', 'year']: ['2019', '2018', '2017', '2016', '2015', '2014', '2013']
Y_Axis['Expenditure', 'in', 'million', 'U.S.', 'dollars']: ['1842', '1667', '1486', '1714', '2338', '2197', '1956']

gold: This statistic shows Hewlett Packard Enterprise 's ( previously a part of Hewlett-Packard Company ) expenditure on research and development for each fiscal year from 2013 to 2019 . In 2019 , HPE 's R & D expenditure came to 1.84 billion U.S. dollars . This represented a small portion of HPE 's net revenue , which reached 29.1 billion U.S. dollars .
gold_template: This statistic shows Hewlett Packard Enterprise 's ( previously a part of Hewlett-Packard Company ) templateYLabel[0] on templateTitle[1] and templateTitle[2] for each templateXLabel[0] templateXLabel[1] from templateXValue[last] to templateXValue[0] . In templateXValue[0] , templateTitleSubject[0] 's R & D templateYLabel[0] came to templateYValue[0] templateScale templateYLabel[2] templateYLabel[3] . This represented a small portion of templateTitleSubject[0] 's net revenue , which reached 29.1 templateScale templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the HPE research development in the spending competirion .  \\n From the chart we see that the 2015 Fiscal made the HPE million by some margin , with only 1486 .  2018 and 2019 made a respectable 1667 and 1842 million , with 2013 and 2016 not far behind , at 1956 and 1714 respectively .

Example 365:
titleEntities: {'Subject': ['Sweden'], 'Date': ['2020', '2020']}
title: Weekly audience market share of TV channels in Sweden February 2020
X_Axis['Channel', 'Name']: ['svt1', 'TV4', 'Kanal5', 'svt2', 'TV3', 'Sjuan', 'TV8', 'TV12', 'TV6', 'svtB', 'Kanal_9', 'Kanal_11', 'Discovery', 'TV10', 'Kunskapskanal', 'TLC', 'Investigation_Discovery', 'National_Geographic', 'TV4_Film', 'Eurosport', 'TV4_Fakta', 'TV4_Guld', 'svt24', 'History', 'Paramount_Network', 'FOX', 'Sportkanalen', 'Nickelodeon', 'Boomerang', 'Eurosport_2_Sweden', 'Cartoon_Network_Sweden', 'Disney_Channel', 'Cartoon_Network_Nordic']
Y_Axis['Market', 'share']: ['32.9', '22.2', '6', '5.3', '3.2', '3.2', '2.8', '2.2', '2.2', '1.7', '1.5', '1.4', '1.3', '1.2', '1.1', '0.8', '0.5', '0.4', '0.4', '0.4', '0.4', '0.4', '0.3', '0.3', '0.3', '0.3', '0.3', '0.2', '0.2', '0.1', '0.1', '0.1', '0']

gold: With an audience market share of 32.9 percent , the first channel of the Swedish public service television company Sveriges Television AB – svt1 – was the most viewed television channel in Sweden in week seven of 2020 . The private station TV4 ranked second . The results almost reflect the annually ranking of television channels market shares : svt1 and TV4 came first and second , reaching percentages of over 20 percent each in 2019 .
gold_template: With an templateTitle[1] templateYLabel[0] templateYLabel[1] of templateYValue[max] templateScale , the first templateXValue[31] of the Swedish public service television company Sveriges Television AB – templateXValue[idxmax(Y)] – was the most viewed television templateXValue[31] in templateXValue[29] in week seven of templateTitleDate[0] . The private station templateXValue[1] ranked second . The results almost reflect the annually ranking of television templateTitle[5] templateYLabel[0] shares : templateXValue[0] and templateXValue[1] came first and second , reaching percentages of over 20 templateScale each in 2019 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Weekly audience in Sweden .  It shows Kanal5 was the Weekly at just 0 degrees and TV3 was the warmest at 32.9 degrees .  After Kanal5 , the next Weekly audience are svt1 at 32.9 degrees , followed by Cartoon_Network_Nordic at 18 degrees , TV4 at 22.2 degrees and then svt2 at 5.3 degrees .

Example 366:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Share of U.S. adults who use social media 2019 , by gender
X_Axis['Gender']: ['Men', 'Women']
Y_Axis['Share', 'of', 'U.S.', 'adults']: ['65', '78']

gold: This statistic shows the share of adults in the United States who were using social networks as of February 2019 , sorted by gender . During that period of time , 78 percent of adult women and 65 percent of adult men used social networking sites .
gold_template: This statistic shows the templateYLabel[0] of templateYLabel[2] in the templateTitle[1] templateTitle[3] were using templateTitle[5] networks as of templateTitleDate[0] , sorted templateTitle[8] templateXLabel[0] . During that period of time , templateYValue[max] templateScale of adult templateXValue[last] and templateYValue[min] templateScale of adult templateXValue[0] used templateTitle[5] networking sites .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the Share U.S. adults , expressed in percentage three different countries .  The Women and Men have similar Share U.S. gaps at around 20 % whilst Women is doing a little better at 65 % .

Example 367:
titleEntities: {'Subject': ['India'], 'Date': ['2014', '2019']}
title: Value of ayurvedic and herbal products from India 2014 to 2019
X_Axis['Fiscal', 'Year']: ['FY_2019', 'FY_2018', 'FY_2017', 'FY_2016', 'FY_2015']
Y_Axis['Export', 'value', 'in', 'million', 'U.S.', 'dollars']: ['446.13', '456.12', '401.68', '364.0', '354.68']

gold: The export value of ayurvedic and herbal products amounted to about 446 million U.S. dollars from India in fiscal year 2019 . There was a consistent increase in the value of these exports since fiscal year 2015 . Agricultural and allied sectors , of which ayurvedic and herbal products are part of , contributed to about 8.6 percent of the country 's exports .
gold_template: The templateYLabel[0] templateYLabel[1] of templateTitle[1] and templateTitle[2] templateTitle[3] amounted to about templateYValue[0] templateScale templateYLabel[3] templateYLabel[4] templateTitle[4] templateTitleSubject[0] in templateXLabel[0] templateXLabel[1] templateXValue[0] . There was a consistent templatePositiveTrend in the templateYLabel[1] of these exports since templateXLabel[0] templateXLabel[1] templateXValue[last] . Agricultural and allied sectors , of which templateTitle[1] and templateTitle[2] templateTitle[3] are part of , contributed to about 8.6 templateScale of the country 's exports .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Export of value million at the India street .  \\n The highest Export was 456.12 in the FY_2016 Fiscal followed by 456.12 million in the FY_2018 Fiscal , 446.13 million in FY_2016 and finally 354.68 million in FY_2015 .

Example 368:
titleEntities: {'Subject': ['Global'], 'Date': ['2018']}
title: Global population by continent 2018
X_Axis['Country']: ['Asia', 'Africa', 'Europe', 'Latin_America_Caribbean', 'North_America', 'Oceania']
Y_Axis['Population', 'in', 'millions']: ['4536', '1284', '746', '649', '365', '41']

gold: The statistic shows the global population by continent as of mid-2018 . In mid-2018 , approximately 4.54 billion people lived in Asia . World population and the most populous countries There are approximately 7.3 billion people living in the world today , a figure that shows a dramatic increase since the beginning of the Common Era .
gold_template: The statistic shows the templateTitleSubject[0] templateYLabel[0] templateTitle[2] templateTitle[3] as of mid-2018 . In mid-2018 , approximately templateYValue[max] templateScale people lived in templateXValue[0] . World templateYLabel[0] and the most populous countries There are approximately 7.3 templateScale people living in the world today , a figure that shows a dramatic templatePositiveTrend since the beginning of the Common Era .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Global population by continent the Population of millions they 've had .  \n It shows Asia has had 4536 millions , Africa has had the Global at 41 millions , Europe has had 746 , Latin_America_Caribbean has had 649 , North_America has had the most millions at 4536 and Oceania has had 41 millions .

Example 369:
titleEntities: {'Subject': ['Blockchain'], 'Date': ['2016', '2019']}
title: Number of Blockchain wallet users globally 2016 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4'_16", "Q3_'16"]
Y_Axis['Number', 'of', 'users', 'in', 'millions']: ['44.69', '42.31', '40.09', '34.66', '31.91', '28.89', '25.76', '23.95', '21.51', '17.26', '14.97', '12.89', '10.98', '8.95']

gold: The number of Blockchain wallets has been growing since the creation of the Bitcoin virtual currency in 2009 , reaching over 44 million Blockchain wallet users at the end of December 2019 . Blockchain is the technology that made Bitcoin popular and is a critical part of most cryptocurrencies . A `` block `` in this case refers to a record of the owners of all bitcoins , as well as the previous owners .
gold_template: The templateYLabel[0] of templateTitleSubject[0] wallets has been templatePositiveTrend since the creation of the Bitcoin virtual currency in 2009 , reaching over 44 templateScale templateTitleSubject[0] templateTitle[2] templateYLabel[1] at the end of templateTitleDate[max] . templateTitleSubject[0] is the technology that made Bitcoin popular and is a critical part of most cryptocurrencies . A `` block `` in this case refers to a record of the owners of all bitcoins , as well as the previous owners .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number Blockchain in .  It shows Q2_'19 was the Number at just 8.95 degrees and Q4_'18 was the warmest at 44.69 users .  After Q2_'19 , the next Number Blockchain are Q4_'19 at 44.69 degrees , followed by Q3_'16 at 18 degrees , Q3_'19 at 42.31 degrees and then Q1_'19 at 34.66 degrees .

Example 370:
titleEntities: {'Subject': ['Africa Middle East'], 'Date': ['2017', '2017']}
title: Health/fitness club industry revenue Africa & Middle East 2017 , by country
X_Axis['Country']: ['South_Africa', 'Saudi_Arabia', 'United_Arab_Emirates', 'Egypt', 'Kuwait', 'Lebanon', 'Morocco', 'Bahrain', 'Qatar', 'Oman', 'Jordan']
Y_Axis['Industry', 'revenue', 'in', 'million', 'U.S.', 'dollars']: ['993.73', '619.88', '380.19', '348.13', '239.94', '122.63', '83.13', '65.06', '65.0', '60.5', '39.63']

gold: The statistic depicts the revenue of the health & fitness club industry in Africa & Middle East countries in 2017 . The revenue of the fitness & health club industry in Egypt was at around 348 million U.S. dollars in 2017 .
gold_template: The statistic depicts the templateYLabel[1] of the health templateTitle[5] fitness templateTitle[1] templateYLabel[0] in templateXValue[0] templateTitle[5] templateTitleSubject[0] countries in templateTitleDate[0] . The templateYLabel[1] of the fitness templateTitle[5] health templateTitle[1] templateYLabel[0] in templateXValue[3] was at around templateYValue[3] templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Health/fitness club industry revenue the Industry of revenue they 've had .  \n It shows South_Africa has had 993.73 revenue , Saudi_Arabia has had the Health/fitness at 39.63 revenue , United_Arab_Emirates has had 380.19 , Egypt has had 348.13 , Kuwait has had the most revenue at 993.73 and Jordan has had 39.63 revenue .

Example 371:
titleEntities: {'Subject': ['Profit'], 'Date': ['2018']}
title: Profit of leading mutual property/casualty insurance companies 2018
X_Axis['Insurance', 'Companies']: ['State_Farm_Insurance_Cos.', 'Auto-Owners_Insurance', 'Erie_Insurance_Group', 'Nationwide', 'Sentry_Insurance_Group', 'Country_Financial', 'Amica_Mutual_Insurance', 'Farmers_Insurance_Exchange']
Y_Axis['Profit', 'in', 'million', 'U.S.', 'dollars']: ['8788.4', '754.5', '686.3', '512.6', '250.6', '215.2', '147.1', '-70.5']

gold: This statistic displays the profits of leading mutual property and casualty insurance companies in the United States in 2018 . In that year , the profits of Nationwide amounted to approximately 512.6 million U.S. dollars .
gold_template: This statistic displays the profits of templateTitle[1] templateXValue[6] property and casualty templateXValue[0] templateXLabel[1] in the country in templateTitleDate[0] . In that year , the profits of templateXValue[3] amounted to approximately templateYValue[3] templateScale templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Profit leading mutual in the property/casualty competirion .  \\n From the chart we see that the Sentry_Insurance_Group Insurance made the Profit million by some margin , with only -70.5 Auto-Owners_Insurance and State_Farm_Insurance_Cos. made a respectable 754.5 and 8788.4 million , with Farmers_Insurance_Exchange and Nationwide not far behind , at -70.5 and 512.6 respectively .

Example 372:
titleEntities: {'Subject': ['Yelp'], 'Date': ['2010', '2019']}
title: Yelp : quarterly net revenue 2010 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11", "Q4_'10", "Q3_'10", "Q2_'10", "Q1_'10"]
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['268.82', '262.47', '246.96', '235.94', '243.74', '241.1', '234.86', '223.07', '219.44', '223.3', '209.9', '198.2', '194.8', '186.2', '173.4', '158.61', '153.73', '143.6', '133.9', '118.5', '109.9', '102.5', '88.8', '76.41', '70.7', '61.18', '55.0', '46.1', '41.16', '36.4', '32.65', '27.39', '24.91', '22.3', '19.58', '16.5', '15.27', '12.59', '10.73', '9.14']

gold: In the fourth quarter of 2019 , Yelp 's revenue amounted to 268.82 million U.S. dollars , an increase from almost 262.5 million U.S. dollars in the preceding quarter . The local business recommendation site derives most of its revenue from advertising .
gold_template: In the fourth templateXLabel[0] of templateTitleDate[max] , templateTitleSubject[0] 's templateYLabel[0] amounted to templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] , an templatePositiveTrend from almost templateYValue[1] templateScale templateYLabel[2] templateYLabel[3] in the preceding templateXLabel[0] . The local business recommendation site derives most of its templateYLabel[0] from advertising .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Yelp quarterly in Yelp .  It shows Q2_'19 was the Yelp at just 9.14 degrees and Q4_'18 was the warmest at 268.82 degrees .  After Q2_'19 , the next Yelp quarterly are Q4_'19 at 268.82 degrees , followed by Q1_'10 at 18 degrees , Q3_'19 at 262.47 degrees and then Q1_'19 at 235.94 degrees .

Example 373:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2009']}
title: U.S. households with clothes dryers in 2009 , by energy source
X_Axis['Energy', 'source']: ['Electric', 'Natural_gas', 'Propane/LPG']
Y_Axis['Households', 'in', 'millions']: ['71.8', '17.5', '1.0']

gold: The statistic illustrates the number of households with clothes dryers in the United States in 2009 , by energy source . In 2009 , 71.8 million U.S. households owned a electric clothes dryer . As of 2009 , almost 80 percent of U.S. households had a clothes dryer .
gold_template: The statistic illustrates the number of templateYLabel[0] templateTitle[2] templateTitle[3] templateTitle[4] in the templateTitle[0] in templateTitleDate[0] , templateTitle[6] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , templateYValue[max] templateScale templateTitleSubject[0] templateYLabel[0] owned a templateXValue[0] templateTitle[3] dryer . As of templateTitleDate[0] , almost 80 templateScale of templateTitleSubject[0] templateYLabel[0] had a templateTitle[3] dryer .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the U.S. households clothes in Electric 2009 compared with that in Natural_gas and the Propane/LPG .  In Electric there was a 71.8 millions difference in the salaries of men and women .  In Natural_gas the difference was 1.0 millions .

Example 374:
titleEntities: {'Subject': ['Alphabet'], 'Date': ['2014', '2019']}
title: Alphabet : quarterly revenue 2014 to 2019
X_Axis['Quarter']: ["Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14"]
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['40499', '38944', '36339', '39276', '33740', '32657', '31146', '32323', '27772', '26010', '24750', '26064', '22451', '21500', '20257', '21329', '18675', '17727', '17258', '18103', '16523', '15955', '15420']

gold: In the third quarter of 2019 , Alphabet 's revenue amounted to 40.5 billion U.S. dollars , up from 38.9 billion U.S. dollars in the preceding quarter . Alphabet 's main revenue source is advertising through Google sites and online products . The company 's Other Bets segment also includes businesses such as Access/Google Fiber , Calico , Nest , Verily , GV , Google Capital , X , and other ventures .
gold_template: In the third templateXLabel[0] of templateTitleDate[max] , templateTitleSubject[0] 's templateYLabel[0] amounted to templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] , up from templateYValue[1] templateScale templateYLabel[2] templateYLabel[3] in the preceding templateXLabel[0] . templateTitleSubject[0] 's main templateYLabel[0] source is advertising through Google sites and online products . The company 's Other Bets segment also includes businesses such as Access/Google Fiber , Calico , Nest , Verily , GV , Google Capital , X , and other ventures .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Alphabet quarterly in Alphabet .  It shows Q1_'19 was the Alphabet at just 15420 degrees and Q3_'18 was the warmest at 40499 degrees .  After Q1_'19 , the next Alphabet quarterly are Q3_'19 at 40499 degrees , followed by Q1_'14 at 18 degrees , Q2_'19 at 38944 degrees and then Q4_'18 at 39276 degrees .

Example 375:
titleEntities: {'Subject': ['Nintendo DS'], 'Date': ['2005']}
title: Nintendo DS sales worldwide 2005 to 2015
X_Axis['Fiscal', 'years']: ["FY_'15", "FY_'14", "FY_'13", "FY_'12", "FY_'11", "FY_'10", "FY_'09", "FY_'08", "FY_'07", "FY_'06", "FY_'05"]
Y_Axis['Sales', 'in', 'million', 'units']: ['0.02', '0.13', '2.35', '5.1', '17.52', '27.11', '31.18', '30.31', '23.56', '11.46', '5.27']

gold: This statistic shows the number of Nintendo DS units sold worldwide from 2005 to 2015 ( fiscal years ) . In the 2009/10 financial year , Nintendo sold 27.1 million units of the Nintendo DS .
gold_template: This statistic shows the number of templateTitle[0] templateTitleSubject[0] templateYLabel[2] sold templateTitle[3] from templateTitleDate[min] to templateTitleDate[max] ( templateXLabel[0] templateXLabel[1] ) . In the 2009/10 financial year , templateTitle[0] sold templateYValue[5] templateScale templateYLabel[2] of the templateTitle[0] templateTitleSubject[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Nintendo DS sales in the worldwide competirion .  \\n From the chart we see that the FY_'11 Fiscal made the Nintendo million by some margin , with only 0.02 .  FY_'14 and FY_'15 made a respectable 0.13 and 0.02 million , with FY_'05 and FY_'12 not far behind , at 5.27 and 5.1 respectively .

Example 376:
titleEntities: {'Subject': ['Sales'], 'Date': ['2017']}
title: Sales of the book publishing market worldwide in 2017 , by country
X_Axis['Country']: ['United_States', 'China', 'Germany', 'Japan', 'France', 'United_Kingdom', 'Italy', 'Spain', 'India', 'Brazil']
Y_Axis['Market', 'share']: ['30', '10', '9', '7', '4', '4', '3', '3', '2', '2']

gold: The graph shows the share of the total sales of the global book publishing market in 2017 , by country . According to the source , the United States made of 30 percent of the global book publishing market in terms on total sales as of 2017 .
gold_template: The graph shows the templateYLabel[1] of the total templateTitleSubject[0] of the global templateTitle[1] templateTitle[2] templateYLabel[0] in templateTitleDate[0] , templateTitle[6] templateXLabel[0] . According to the source , the templateXValue[0] made of templateYValue[max] templateScale of the global templateTitle[1] templateTitle[2] templateYLabel[0] in terms on total templateTitleSubject[0] as of templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Sales book publishing market the of share they 've had .  \n It shows United_States has had 30 share , China has had the Sales at 2 share , Germany has had 9 , Japan has had 7 , France has had the most share at 30 and Brazil has had 2 share .

Example 377:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2020']}
title: Public opinion on the most important problem facing the U.S. 2020
X_Axis['Response']: ['Dissatisfaction_with_government/Poor_leadership', 'Immigration', 'Healthcare', 'Ethics/moral/religious/family_decline', 'Unifying_the_country', 'Poverty/Hunger/Homelessness', 'Lack_of_respect_for_each_other', 'Environment/Pollution/Climate_change', 'Race_relations/Racism', 'Situation_in_Iraq/ISIS', 'Foreign_policy/Foreign_aid/Focus_overseas', 'Economy_in_general', 'Guns/Gun_control', 'Gap_between_rich_and_poor', 'Education', 'Wars/War_(nonspecific)/Fear_of_war']
Y_Axis['Share', 'of', 'respondents']: ['28', '6', '6', '5', '5', '5', '4', '4', '3', '2', '2', '2', '2', '2', '2', '2']

gold: This statistic represents American adults ' view of the most important problem facing the United States . In January 2020 , 28 percent of the participants stated that poor leadership and a general dissatisfaction with the government were the most important problems facing the U.S .
gold_template: This statistic represents American adults ' view of the templateTitle[2] templateTitle[3] templateTitle[4] templateTitle[5] the templateTitle[6] . In templateTitleDate[0] , templateYValue[max] templateScale of the participants stated that templateXValue[13] templateXValue[0] and a templateXValue[11] templateXValue[0] the government were the templateTitle[2] templateTitle[3] problems templateTitle[5] the templateTitle[6] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .
generated: This chart shows the Share of respondents made by the most .  \\n In the important , the Public respondents were made by Healthcare , with 28 respondents .  \\n The Public opinion most were Immigration and Unifying_the_country .

Example 378:
titleEntities: {'Subject': ['Poland'], 'Date': ['2019']}
title: Best selling car brands in Poland 2019
X_Axis['Manufacturer']: ['Skoda', 'Toyota', 'Volkswagen', 'Opel', 'Dacia', 'Ford', 'Kia', 'Renault', 'Hyundai', 'Mercedes-Benz', 'BMW', 'Mazda', 'Peugeot', 'Fiat', 'Audi', 'Seat', 'Citroen', 'Nissan', 'Suzuki', 'Volvo']
Y_Axis['Units', 'sold']: ['68646', '62771', '53845', '33805', '30877', '30132', '29389', '27581', '24378', '21755', '20708', '15670', '15465', '14800', '13777', '12433', '11887', '11423', '11140', '10975']

gold: Škoda was the best-selling car brand in the Poland in 2019 . The Czech automobile manufacturer ( MMO 60894 ) had sold nearly 69,000 units in the Polish market that year , roughly six thousand units more than the second entry . Škoda cars have been produced since 1905 , with number of vehicles produced having grown significantly in the following decades .
gold_template: Škoda was the best-selling templateTitle[2] brand in the templateTitleSubject[0] in templateTitleDate[0] . The Czech automobile templateXLabel[0] ( MMO 60894 ) had templateYLabel[1] nearly 69,000 templateYLabel[0] in the Polish market that year , roughly six thousand templateYLabel[0] more than the second entry . Škoda cars have been produced since 1905 , with number of vehicles produced having grown significantly in the following decades .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Best selling in Poland .  It shows Volkswagen was the Best at just 10975 degrees and Dacia was the warmest at 68646 degrees .  After Volkswagen , the next Best selling are Skoda at 68646 degrees , followed by Volvo at 18 degrees , Toyota at 62771 degrees and then Opel at 33805 degrees .

Example 379:
titleEntities: {'Subject': ['Latin America'], 'Date': ['2017']}
title: Leading retailers of Latin America 2017 , based on sales
X_Axis['Company', '(Country', 'of', 'origin)']: ['Cencosud_(Chile)', 'FEMSA_Comercio_(Mexico)', 'S.A.C.I._Falabella_(Chile)', 'Organizacion_Soriana_S.A.B._de_C.V._(Mexico)', 'El_Puerto_de_Liverpool_(Mexico)', 'Lojas_Americanas_(Brazil)', 'Grupo_Comercial_Chedraui_(Mexico)', 'RaiaDrogasil_S.A._(Brazil)', 'Magazine_Luiza_S.A.']
Y_Axis['Billion', 'U.S.', 'dollars']: ['15.28', '15.28', '11.14', '8.12', '5.74', '5.34', '4.95', '4.34', '3.74']

gold: This statistic shows the leading retailers of Latin America in 2017 , based on retail sales . In that year , Cencosud was Latin America 's leading retailer with about 15.28 billion U.S. dollars worth of sales.Retail in Latin AmericaAs in much of Latin America , Brazil 's policymakers have quickly shifted from a focus on excessive inflation towards growth . In the beginning of 2011 , Latin American markets were growing rapidly and experiencing uncomfortably high inflation .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] of templateTitleSubject[0] in templateTitleDate[0] , templateTitle[5] on retail templateTitle[6] . In that year , templateXValue[0] was templateTitleSubject[0] 's templateTitle[0] retailer with about templateYValue[max] templateScale templateYLabel[1] templateYLabel[2] worth of sales.Retail in templateTitleSubject[0] AmericaAs in much of templateTitleSubject[0] , Brazil 's policymakers have quickly shifted from a focus on excessive inflation towards growth . In the beginning of 2011 , templateTitleSubject[0] American markets were templatePositiveTrend rapidly and experiencing uncomfortably high inflation .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading retailers Latin in the America competirion .  \\n From the chart we see that the El_Puerto_de_Liverpool_(Mexico) Company made the Leading U.S. by some margin , with only 3.74 .  FEMSA_Comercio_(Mexico) and Cencosud_(Chile) made a respectable 15.28 and U.S. , with Magazine_Luiza_S.A. and Organizacion_Soriana_S.A.B._de_C.V._(Mexico) not far behind , at 3.74 and 8.12 respectively .

Example 380:
titleEntities: {'Subject': ['Virginia'], 'Date': ['2018']}
title: Population of Virginia , by race and ethnicity 2018
X_Axis['Race']: ['White_alone', 'Black_or_African_American_alone', 'Hispanic_or_Latino_(of_any_race)', 'Asian_alone', 'Two_or_more_races', 'Some_other_race_alone', 'American_Indian_and_Alaska_Native_alone', 'Native_Hawaiian_and_Other_Pacific_Islander_alone']
Y_Axis['Number', 'of', 'residents']: ['5224295', '1597761', '812810', '550696', '288865', '20390', '18281', '4587']

gold: This statistic shows the population of Virginia , distinguished by race and Hispanic origin in 2018 . In 2018 , about 1.6 million people in Virginia were Black or African American .
gold_template: This statistic shows the templateTitle[0] of templateTitleSubject[0] , distinguished templateTitle[2] templateXValue[5] and templateXValue[2] origin in templateTitleDate[0] . In templateTitleDate[0] , about templateYValue[1] templateScale people in templateTitleSubject[0] were templateXValue[1] or templateXValue[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Population Virginia by in the race competirion .  \\n From the chart we see that the Two_or_more_races Race made the Population residents by some margin , with only 4587 .  Black_or_African_American_alone and White_alone made a respectable 1597761 and 5224295 residents , with Native_Hawaiian_and_Other_Pacific_Islander_alone and Asian_alone not far behind , at 4587 and 550696 respectively .

Example 381:
titleEntities: {'Subject': ['United Kingdom'], 'Date': ['2019']}
title: United Kingdom tobacco imports : Leading 5 countries ranked by value 2019
X_Axis['Country']: ['Poland', 'Germany', 'Netherlands', 'Romania', 'Belgium']
Y_Axis['Import', 'value', 'in', '1,000', 'GBP']: ['203.88', '107.07', '94.13', '21.27', '18.06']

gold: The biggest country of origin for tobacco imported into the United Kingdom was Poland . In 2019 , the country supplied tobacco worth over two hundred million British pounds to the UK . Germany and the Netherlands rank next , with imports from these countries amounting to 107 and 94 million pounds respectively .
gold_template: The biggest templateXLabel[0] of origin for templateTitle[2] imported into the templateTitleSubject[0] was templateXValue[0] . In templateTitleDate[0] , the templateXLabel[0] supplied templateTitle[2] worth over two hundred templateScale British pounds to the UK . templateXValue[1] and the templateXValue[2] rank next , with templateTitle[3] from these templateTitle[6] amounting to templateYValue[1] and templateYValue[2] templateScale pounds respectively .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Import of United Kingdom tobacco in United Kingdom .  We can see that both Germany and Netherlands have a very small amount whilst Belgium , Romania and Poland have a much higher amount . 

Example 382:
titleEntities: {'Subject': ['Top'], 'Date': []}
title: Top cotton exporting countries 2018/2019
X_Axis['Country']: ['United_States', 'Brazil', 'Australia', 'India', 'Benin', 'Greece', 'Mali', 'Burkina', 'Cote_dchr_Ivoire', 'Uzbekistan']
Y_Axis['Exports', 'in', 'thousand', 'bales']: ['3214', '1309', '791', '762', '305', '294', '288', '205', '195', '131']

gold: The United States was the leading exporter of cotton worldwide in 2018/2019 . In that time period , the U.S. cotton industry had an export volume of 3.21 million metric tons . Cotton products Cotton is one of the most versatile and widely used materials .
gold_template: The templateXValue[0] was the leading exporter of templateTitle[1] worldwide in templateTitle[4] . In that time period , the U.S. templateTitle[1] industry had an export volume of templateYValue[max] templateScale metric tons . templateTitle[1] products templateTitle[1] is one of the most versatile and widely used materials .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Top cotton exporting countries the Exports of thousand they 've had .  \n It shows United_States has had 3214 thousand , Brazil has had the Top at 131 thousand , Australia has had 791 , India has had 762 , Benin has had the most thousand at 3214 and Uzbekistan has had 131 thousand .

Example 383:
titleEntities: {'Subject': ['European'], 'Date': ['2017']}
title: Share of individuals who wear spectacles in selected European countries 2017
X_Axis['Country']: ['Slovakia', 'Serbia', 'United_Kingdom', 'Denmark', 'Finland', 'Norway', 'Germany', 'France', 'Netherlands', 'Austria', 'Portugal', 'Switzerland', 'Italy', 'Latvia', 'Bulgaria', 'Spain', 'Czech_Republic', 'Romania', 'Greece', 'Ireland', 'Hungary', 'Belgium', 'Estonia', 'Ukraine', 'Slovenia', 'Poland', 'Cyprus', 'Turkey', 'Croatia']
Y_Axis['Individuals', 'who', 'wear', 'spectacles']: ['85', '70', '68', '65', '65', '63', '63', '58', '57', '52', '52', '52', '51', '50', '50', '49', '45', '45', '45', '44', '40', '40', '38', '35', '30', '30', '25', '20', '15']

gold: This statistic displays the proportion of individuals who wear eye spectacles in selected European countries in 2017 . In this year , Slovakia had the highest proportion of individuals wearing eyeglasses with approximately 85 percent doing so . This was followed by Serbia at 70 percent and the United Kingdom at 68 percent .
gold_template: This statistic displays the proportion of templateYLabel[0] templateYLabel[1] templateYLabel[2] eye templateYLabel[3] in templateTitle[5] templateTitleSubject[0] templateTitle[7] in templateTitleDate[0] . In this year , templateXValue[0] had the highest proportion of templateYLabel[0] wearing eyeglasses with approximately templateYValue[max] templateScale doing so . This was followed by templateXValue[1] at templateYValue[1] templateScale and the templateXValue[2] at templateYValue[2] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Share individuals who wear the Individuals of who they 've had .  \n It shows Slovakia has had 85 who , Serbia has had the Share at 15 who , United_Kingdom has had 68 , Denmark has had 65 , Finland has had the most who at 85 and Croatia has had 15 who .

Example 384:
titleEntities: {'Subject': ['YouTube'], 'Date': ['2019']}
title: YouTube : most subscribed beauty content creators 2019
X_Axis['Beauty', 'Channels', '']: ['Yuya', 'jeffreestar', 'Wengie', 'Musas', 'NikkieTutorials', 'Zoella', 'SaraBeautyCorner', 'Tati_Westbrook', 'Michelle_Phan', 'grav3yardgirl']
Y_Axis['Number', 'of', 'subscribers', 'in', 'millions']: ['24.1', '16.7', '14.0', '13.7', '12.3', '11.5', '10.5', '9.69', '8.91', '8.47']

gold: Mexican beauty blogger Yuya was the most subscribed beauty content creator on the video platform with 24.1 million subscribers to her channel in December 2019 . Fashion- and beauty-related content such as makeup and skincare tutorials , cosmetics hauls and product recommendations are among the most popular content on YouTube . Beauty content on YouTube In 2018 , beauty-related content on YouTube generated more than 169 billion video views , up from 59 billion views just two years prior .
gold_template: Mexican templateXLabel[0] blogger templateXValue[0] was the templateTitle[1] templateTitle[2] templateXLabel[0] templateTitle[4] creator on the video platform with templateYValue[max] templateScale templateYLabel[1] to her channel in templateTitleDate[0] . Fashion- and beauty-related templateTitle[4] such as makeup and skincare tutorials , cosmetics hauls and product recommendations are among the templateTitle[1] popular templateTitle[4] on templateTitleSubject[0] . templateXLabel[0] templateTitle[4] on templateTitleSubject[0] In 2018 , beauty-related templateTitle[4] on templateTitleSubject[0] generated more than 169 templateScale video views , up from 59 templateScale views just two years prior .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the YouTube most subscribed in the beauty competirion .  \\n From the chart we see that the NikkieTutorials Beauty made the YouTube subscribers by some margin , with only 8.47 .  jeffreestar and Yuya made a respectable 16.7 and 24.1 subscribers , with grav3yardgirl and Musas not far behind , at 8.47 and 13.7 respectively .

Example 385:
titleEntities: {'Subject': ['Q4'], 'Date': ['2019', '2019']}
title: U.S. gender pay gap by age group Q4 2019
X_Axis['Age', 'group']: ['16_to_24', '25_to_34', '35_to_44', '45_to_54', '55_to_64', '65_and_older']
Y_Axis['Earnings', 'ratio', 'in', 'percent']: ['91.14', '88.88', '79.43', '77.43', '77.61', '74.8']

gold: The statistic shows the female to male earnings ratio in the United States in the fourth quarter of 2019 , based on the median income in current U.S. dollars , by age group . In the fourth quarter of 2019 , the earnings ratio of female to male workers aged between 16 to 24 years was at about 91.14 percent .
gold_template: The statistic shows the female to male templateYLabel[0] templateYLabel[1] in the templateTitle[0] in the fourth quarter of templateTitleDate[0] , based on the median income in current templateTitle[0] dollars , templateTitle[4] templateXLabel[0] templateXLabel[1] . In the fourth quarter of templateTitleDate[0] , the templateYLabel[0] templateYLabel[1] of female to male workers aged between templateXValue[0] to templateXValue[0] years was at about templateYValue[max] templateScale .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Earnings of ratio made by pay in a gap by .  \\n From the chart we see that the 35_to_44 Age was the U.S. gender Age in the by with 91.14 ratio .  The next Age to make the most ratio was the 45_to_54 Age with 77.43 ratio closely followed by the 65_and_older Age with 74.8 ratio .

Example 386:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Total fertility rate by ethnicity U.S. 2018
X_Axis['Ethnicity']: ['All', 'Native_Hawaiian/Other_Pacific_Islander', 'Hispanic', 'Black_(non-Hispanic)', 'American_Indian/Alaska_Native', 'White_(non-Hispanic)', 'Asian']
Y_Axis['Births', 'per', 'thousand', 'women']: ['1729.5', '2106.5', '1959.0', '1792.0', '1650.5', '1640.0', '1525.0']

gold: Native Hawaiian and Pacific Islander women had the highest fertility rate of any ethnicity in the United States in 2018 , with about 2,106.5 births per 1,000 women . The fertility rate for all ethnicities in the U.S. was 1,729.5 births per 1,000 women . What is the total fertility rate ? The total fertility rate is an estimation of the number of children who would theoretically be born per 1,000 women through their childbearing years ( generally considered to be between the ages of 15 and 44 ) according to age-specific fertility rates .
gold_template: templateXValue[1] Hawaiian and templateXValue[1] templateYLabel[3] had the highest templateTitle[1] templateTitle[2] of any templateXLabel[0] in the templateTitle[5] in templateTitleDate[0] , with about templateYValue[max] templateYLabel[0] templateYLabel[1] 1,000 templateYLabel[3] . The templateTitle[1] templateTitle[2] for templateXValue[0] ethnicities in the templateTitleSubject[0] was templateYValue[0] templateYLabel[0] templateYLabel[1] 1,000 templateYLabel[3] . What is the templateTitle[0] templateTitle[1] templateTitle[2] ? The templateTitle[0] templateTitle[1] templateTitle[2] is an estimation of the number of children who would theoretically be born templateYLabel[1] 1,000 templateYLabel[3] through their childbearing years ( generally considered to be between the ages of 15 and 44 ) according to age-specific templateTitle[1] rates .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Births of per made by rate in a by ethnicity .  \\n From the chart we see that the Hispanic Ethnicity was the Total fertility Ethnicity in the ethnicity with 2106.5 per .  The next Ethnicity to make the most per was the Black_(non-Hispanic) Ethnicity with 1792.0 per closely followed by the Asian Ethnicity with 1525.0 per .

Example 387:
titleEntities: {'Subject': ['Georgia'], 'Date': ['2018']}
title: Real GDP of Georgia , by industry 2018
X_Axis['Industry']: ['Finance_insurance_real_estate_rental_and_leasing', 'Professional_and_business_services', 'Government_and_government_enterprises', 'Manufacturing', 'Information', 'Wholesale_trade', 'Educational_services_health_care_and_social_assistance', 'Retail_trade', 'Transportation_and_warehousing', 'Construction', 'Arts_entertainment_recreation_accommodation_and_food_services', 'Utilities', 'Agriculture_forestry_fishing_and_hunting', 'Mining_quarrying_and_oil_and_gas_extraction']
Y_Axis['Real', 'value', 'added', 'in', 'billion', 'chained', '(2012)', 'U.S.', 'dollars']: ['98.03', '68.01', '59.52', '56.8', '51.54', '41.91', '41.09', '31.01', '21.81', '19.31', '16.19', '9.56', '5.32', '1.48']

gold: This graph shows the real value added to the Gross Domestic Product ( GDP ) of Georgia in 2018 , by industry . In 2018 , the utilities industry added 9.56 billion chained 2012 U.S. dollars of value to the state GDP .
gold_template: This graph shows the templateXValue[0] templateYLabel[1] templateYLabel[2] to the Gross Domestic Product ( templateTitle[1] ) of templateTitleSubject[0] in templateTitleDate[0] , templateTitle[3] templateXLabel[0] . In templateTitleDate[0] , the templateXValue[11] templateXLabel[0] templateYLabel[2] templateYValue[11] templateScale templateYLabel[4] 2012 templateYLabel[6] templateYLabel[7] of templateYLabel[1] to the state templateTitle[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Real GDP in Georgia .  It shows Government_and_government_enterprises was the Real at just 1.48 degrees and Information was the warmest at 98.03 value .  After Government_and_government_enterprises , the next Real GDP are Finance_insurance_real_estate_rental_and_leasing at 98.03 degrees , followed by Mining_quarrying_and_oil_and_gas_extraction at 18 degrees , Professional_and_business_services at 68.01 degrees and then Manufacturing at 56.8 degrees .

Example 388:
titleEntities: {'Subject': ['Malware'], 'Date': ['2018']}
title: Malware types encountered during data compromise investigations 2018
X_Axis['Type', 'Of', 'Malware']: ['Downloader', 'Remote_administration_tool_(RAT)', 'Webshell', 'Memory_scraper/dumper', 'Injector', 'Dropper', 'Coin_miners', 'Formjacking', 'Ransomware']
Y_Axis['Share', 'of', 'encounters']: ['13', '10', '8', '8', '5', '4', '3', '2', '0.7']

gold: The ranking presents the most commonly encountered types of malware used in industrial cyber attacks worldwide in 2018 . During the survey period , downloaders were detected in 13 percent of malware attack investigations . A further three percent of detected malware were coin miners .
gold_template: The ranking presents the most commonly templateTitle[2] templateTitle[1] of templateXLabel[1] used in industrial cyber attacks worldwide in templateTitleDate[0] . templateTitle[3] the survey period , downloaders were detected in templateYValue[max] templateScale of templateXLabel[1] attack templateTitle[6] . A further templateYValue[6] templateScale of detected templateXLabel[1] were templateXValue[6] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] made per templateXLabel[0] in a templateTitle[3] so that the highest bar shows the templateTitle[0] templateTitle[1] - templateXLabel[0] templateXValue[2] with templateYValue[max] templateYLabel[1] , templateXValue[3] with templateYValue[3] , templateXValue[last] with templateYValue[last] , templateXValue[0] with templateYValue[0] , templateXValue[1] with templateYValue[1] and the only templateYValue[min] mistake made by templateXValue[4] .
generated: The chart shows the Share of encounters made per Type in a during so that the highest bar shows the Malware types - Type Webshell with 13 encounters , Memory_scraper/dumper with 8 , Ransomware with 0.7 , Downloader with 13 , Remote_administration_tool_(RAT) with 10 and the only 0.7 mistake made by Injector .

Example 389:
titleEntities: {'Subject': ['Italy'], 'Date': ['2019', '2019']}
title: Mortgage interest rate in Italy Q1 2013- Q2 2019
X_Axis['Quarter']: ["Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13"]
Y_Axis['Mortgage', 'interest', 'rate']: ['1.77', '1.85', '1.89', '1.8', '1.8', '1.88', '1.9', '2.02', '2.1', '2.11', '2.02', '2.02', '2.2', '2.33', '2.5', '2.67', '2.77', '2.68', '2.84', '2.99', '3.26', '3.44', '3.5', '3.68', '3.64', '3.68']

gold: Mortgage interest rates in Italy decreased by half between the first quarter of 2013 and the second quarter of 2019 . Over the period under consideration , the highest interest rate was found in the first and third quarters of 2013 , when the value recorded was 3.68 percent . After the third quarter of 2013 , mortgage interest rates experienced a steady decrease , reaching a value of 1.77 percent as of the second quarter of 2019 , which represented the lowest interest rate during the period considered .
gold_template: templateYLabel[0] templateYLabel[1] rates in templateTitleSubject[0] templateNegativeTrend by half between the first templateXLabel[0] of 2013 and the second templateXLabel[0] of templateTitleDate[max] . Over the period under consideration , the highest templateYLabel[1] templateYLabel[2] was found in the first and third quarters of 2013 , when the value recorded was templateYValue[max] templateScale . After the third templateXLabel[0] of 2013 , templateYLabel[0] templateYLabel[1] rates experienced a steady templateNegativeTrend , reaching a value of templateYValue[min] templateScale as of the second templateXLabel[0] of templateTitleDate[max] , which represented the lowest templateYLabel[1] templateYLabel[2] during the period considered .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Mortgage interest in Italy .  It shows Q4_'18 was the Mortgage at just 1.77 degrees and Q2_'18 was the warmest at 3.68 degrees .  After Q4_'18 , the next Mortgage interest are Q2_'19 at 1.77 degrees , followed by Q1_'13 at 18 degrees , Q1_'19 at 1.85 degrees and then Q3_'18 at 1.8 degrees .

Example 390:
titleEntities: {'Subject': ['Tesla'], 'Date': ['2008', '2019']}
title: Tesla 's revenue 2008 to 2019
X_Axis['Fiscal', 'year']: ['2019', '2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008']
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['24578.0', '21461.27', '11758.75', '7000.13', '4046.03', '3198.36', '2013.5', '413.26', '204.24', '116.74', '111.94', '14.74']

gold: Tesla 's revenue grew to almost 24.6 billion U.S. dollars in the fiscal year of 2019 , a three billion increase from the previous year . The United States is Tesla 's largest sales markets . Revenue rises on model additions Almost 20 billion U.S. dollars of Tesla 's revenue is generated from its automotive segment , which includes the design , manufacturing , and sales of vehicles .
gold_template: templateTitleSubject[0] templateTitle[1] templateYLabel[0] templatePositiveTrend to almost templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] in the templateXLabel[0] templateXLabel[1] of templateXValue[idxmax(Y)] , a templateYValue[5] templateScale templatePositiveTrend from the previous templateXLabel[1] . The country is templateTitleSubject[0] templateTitle[1] largest sales markets . templateYLabel[0] rises on model additions Almost 20 templateScale templateYLabel[2] templateYLabel[3] of templateTitleSubject[0] templateTitle[1] templateYLabel[0] is generated from its automotive segment , which includes the design , manufacturing , and sales of vehicles .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Tesla 's in Tesla .  It shows 2017 was the Tesla at just 14.74 degrees and 2015 was the warmest at 24578.0 million .  After 2017 , the next Tesla 's are 2019 at 24578.0 degrees , followed by 2008 at 18 degrees , 2018 at 21461.27 degrees and then 2016 at 7000.13 degrees .

Example 391:
titleEntities: {'Subject': ['Indonesia'], 'Date': ['2019']}
title: Most valuable brands in Indonesia 2019
X_Axis['Indonesian', 'Brand']: ['Bank_Central_Asia_(BCA)', 'Bank_Rakyat_Indonesia_(BRI)', 'Telkomsel', 'A_Mild', 'Bank_Mandiri', 'Go-Jek', 'Dji_Sam_Soe', 'Surya', 'Gudang_Garam', 'tokopedia']
Y_Axis['Brand', 'value', 'in', 'billion', 'U.S.', 'dollars']: ['13.05', '10.99', '7.32', '7.02', '6.2', '4.49', '3.12', '2.52', '2.44', '2.23']

gold: In 2019 , Indonesia 's most valuable brand in terms of brand value was Bank Central Asia ( BCA ) , with a brand value of 13.05 billion U.S. dollars . In terms of growth , however , retail e-commerce site tokopedia was the fastest-rising brand , with a 487 percent growth in 2019 . This was followed by travel e-commerce site Traveloka at 111 percent , and ride-hailing start-up Go-Jek , which had 88 percent growth .
gold_template: In templateTitleDate[0] , templateXValue[1] 's templateTitle[0] templateTitle[1] templateXLabel[1] in terms of templateXLabel[1] templateYLabel[1] was templateXValue[0] ( BCA ) , with a templateXLabel[1] templateYLabel[1] of templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . In terms of growth , however , retail e-commerce site templateXValue[last] was the fastest-rising templateXLabel[1] , with a 487 templateScale growth in templateTitleDate[0] . This was followed by travel e-commerce site Traveloka at 111 templateScale , and ride-hailing start-up templateXValue[5] , which had 88 templateScale growth .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most valuable brands in the Indonesia competirion .  \\n From the chart we see that the Bank_Mandiri Indonesian made the Most value by some margin , with only 2.23 .  Bank_Rakyat_Indonesia_(BRI) and Bank_Central_Asia_(BCA) made a respectable 10.99 and 13.05 value , with tokopedia and A_Mild not far behind , at 2.23 and 7.02 respectively .

Example 392:
titleEntities: {'Subject': ['Mobile'], 'Date': ['2019', '2019']}
title: Mobile phone services used to plan leisure travel in the U.S. as of spring 2019
X_Axis['Response']: ['Search_engine_for_general_web_search', 'Search_engine_for_images_or_photos', 'Social_media_websites', 'Online_travel_agency_websites', 'Airbnb.com', 'Online_video_(YouTube.com_etc)', 'Ask_friends_on_social_media', 'Official_tourism_office_website', 'Travel-related_podcasts', 'Map_websites_or_mapping_apps', 'Email_travel_newsletters', 'Digital_assistant_(Siri_Google_Now_etc)', 'User_review_websites', 'Blogs_articles_or_stories']
Y_Axis['Share', 'of', 'respondents']: ['69.8', '39.4', '36.5', '28.6', '24.7', '20.3', '17.1', '16.2', '12.6', '11.1', '9.9', '9.3', '8.6', '7.2']

gold: This statistic shows the services and technology used by people in the U.S. to find inspiration or ideas on where to travel as of Spring 2019 . During the survey , 36.5 percent of respondents said they used social media websites for travel inspiration or ideas .
gold_template: This statistic shows the templateTitle[2] and technology templateTitle[3] by people in the templateTitleSubject[0] to find inspiration or ideas on where to templateXValue[3] as of templateTitle[8] templateTitleDate[0] . During the survey , templateYValue[2] templateScale of templateYLabel[1] said they templateTitle[3] templateXValue[2] templateXValue[0] templateXValue[3] inspiration or ideas .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Mobile phone in Mobile .  It shows Social_media_websites was the Mobile at just 7.2 degrees and Airbnb.com was the warmest at 69.8 respondents .  After Social_media_websites , the next Mobile phone are Search_engine_for_general_web_search at 69.8 degrees , followed by Blogs_articles_or_stories at 18 degrees , Search_engine_for_images_or_photos at 39.4 degrees and then Online_travel_agency_websites at 28.6 degrees .

Example 393:
titleEntities: {'Subject': ['Airbnb'], 'Date': ['2014']}
title: Most expensive cities for Airbnb accommodation worldwide 2014
X_Axis['Cities']: ['Boston_USA', 'Cancùn_Mexico', 'New_York_USA', 'Dubai_UEA', 'Macao_China', 'Aberdeen_UK', 'Newcastle_UK', 'Monte-Carlo_Monaco', 'Punta_Cana_Dominican_Republic', 'Miami_USA', 'Birmingham_UK', 'Bristol_UK', 'San_Francisco_USA', 'Rio_de_Janeiro_Brazil', 'London_UK', 'Zürich_Switzerland', 'Nassau_Bahamas', 'St_Moritz_Switzerland', 'Sydney_Australia', 'Venice_Italy']
Y_Axis['Average', 'price', 'per', 'night', 'in', 'U.S.', 'dollars']: ['274', '247', '231', '226', '213', '209', '208', '202', '193', '193', '191', '179', '178', '176', '176', '172', '171', '171', '168', '166']

gold: This statistic shows the most expensive cities for Airbnb accommodation worldwide as of December 2014 . According to the GoEuro Accommodation Price Index , Boston in the United States was the most expensive city with an average cost of 274 U.S. dollars per night .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateXLabel[0] templateTitle[3] templateTitleSubject[0] templateTitle[5] templateTitle[6] as of templateTitleDate[0] . According to the GoEuro templateTitle[5] templateYLabel[1] Index , templateXValue[0] in the country was the templateTitle[0] templateTitle[1] city with an templateYLabel[0] cost of templateYValue[max] templateYLabel[4] templateYLabel[5] templateYLabel[2] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most expensive in Airbnb .  It shows New_York_USA was the Most at just 166 degrees and Macao_China was the warmest at 274 degrees .  After New_York_USA , the next Most expensive are Boston_USA at 274 degrees , followed by Venice_Italy at 18 degrees , Cancùn_Mexico at 247 degrees and then Dubai_UEA at 226 degrees .

Example 394:
titleEntities: {'Subject': ['CEO'], 'Date': ['2017']}
title: Average annual CEO compensation worldwide in 2017 , by country
X_Axis['Country']: ['United_States', 'Switzerland', 'Netherlands', 'United_Kingdom', 'Canada', 'Germany', 'Australia', 'Spain', 'Hong_Kong', 'Singapore']
Y_Axis['Compensation', 'in', 'million', 'U.S.', 'dollars']: ['14.25', '8.5', '8.24', '7.95', '6.49', '6.17', '4.96', '4.89', '4.88', '4.62']

gold: This statistic shows the average annual compensation of CEOs around the world in 2017 by country . In 2017 , the average annual income of CEOs in the United States was 14.25 million U.S. dollars which is about 5 million U.S. dollars more than the average annual income of CEOs in Switzerland .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateYLabel[0] of CEOs around the world in templateTitleDate[0] templateTitle[6] templateXLabel[0] . In templateTitleDate[0] , the templateTitle[0] templateTitle[1] income of CEOs in the templateXValue[0] was templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] which is about templateYValue[6] templateScale templateYLabel[2] templateYLabel[3] more than the templateTitle[0] templateTitle[1] income of CEOs in templateXValue[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Average annual CEO compensation the of million they 've had .  \n It shows United_States has had 14.25 million , Switzerland has had the Average at 4.62 million , Netherlands has had 8.24 , United_Kingdom has had 7.95 , Canada has had the most million at 14.25 and Singapore has had 4.62 million .

Example 395:
titleEntities: {'Subject': ['British'], 'Date': ['2019']}
title: British soccer teams with multiple FA Cup titles 2019
X_Axis['Club', 'Name']: ['Arsenal_FC', 'Manchester_United', 'Chelsea_FC', 'Tottenham_Hotspur', 'Aston_Villa', 'Liverpool_FC', 'Blackburn_Rovers', 'Newcastle_United', 'Manchester_City', 'Everton_FC', 'The_Wanderers', 'West_Bromwich_Albion', 'Bolton_Wanderers', 'Sheffield_United', 'Wolverhampton_Wanderers', 'Sheffield_Wednesday', 'West_Ham_United', 'Bury_FC', 'Nottingham_Forest', 'Old_Etonians', 'Portsmouth_FC', 'Preston_North_End', 'Sunderland_AFC']
Y_Axis['Number', 'of', 'titles']: ['13', '12', '8', '8', '7', '7', '6', '6', '6', '5', '5', '5', '4', '4', '4', '3', '3', '2', '2', '2', '2', '2', '2']

gold: Arsenal FC currently leads the way with 13 FA Cup titles to the club 's name , the most recent win having come in 2017 . Hot on Arsenal 's heels is Manchester United , whose 2016 victory marked their 12th victory in the oldest club competition in the world . A cup for the underdogs ? There is often talk about the `` Magic of the FA Cup `` and how the competition brings up surprising results , with lower league teams beating higher placed ones .
gold_template: templateXValue[0] currently leads the way templateTitle[3] templateYValue[max] templateTitle[5] templateTitle[6] templateYLabel[1] to the templateXLabel[0] 's templateXLabel[1] , the most recent win having come in 2017 . Hot on templateXValue[0] 's heels is templateXValue[1] , whose 2016 victory marked their 12th victory in the oldest templateXLabel[0] competition in the world . A templateTitle[6] for the underdogs ? There is often talk about the `` Magic of the templateTitle[5] templateTitle[6] `` and how the competition brings up surprising results , templateTitle[3] lower league templateTitle[2] beating higher placed ones .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the British soccer in British .  It shows Chelsea_FC was the British at just 2 degrees and Aston_Villa was the warmest at 13 degrees .  After Chelsea_FC , the next British soccer are Arsenal_FC at 13 degrees , followed by Sunderland_AFC at 18 degrees , Manchester_United at 12 degrees and then Tottenham_Hotspur at 8 degrees .

Example 396:
titleEntities: {'Subject': ['Formula'], 'Date': []}
title: Formula 1 drivers by number of podium finishes up to 2019
X_Axis['Month']: ['Michael_Schumacher', 'Lewis_Hamilton', 'Sebastian_Vettel', 'Alain_Prost', 'Kimi_Räikkönen', 'Fernando_Alonso', 'Ayrton_Senna', 'Rubens_Barrichello', 'David_Coulthard', 'Nelson_Piquet', 'Nigel_Mansell', 'Nico_Rosberg', 'Niki_Lauda', 'Mika_Häkkinen', 'Jenson_Button', 'Gerhard_Berger', 'Valtteri_Bottas', 'Carlos_Reutemann', 'Jackie_Stewart', 'Damon_Hill', 'Mark_Webber', 'Felipe_Massa', 'Riccardo_Patrese', 'Emerson_Fittipaldi', 'Graham_Hill']
Y_Axis['Number', 'of', 'podium', 'finishes']: ['155', '151', '120', '106', '103', '97', '80', '68', '62', '60', '59', '57', '54', '51', '50', '48', '45', '45', '43', '42', '42', '41', '37', '35', '35']

gold: The graph shows the top 50 Formula 1 drivers with the most podium finishes from 1950 to 2019 . Michael Schumacher had 155 podium finishes throughout his career .
gold_template: The graph shows the top templateYValue[14] templateTitleSubject[0] templateTitle[1] templateTitle[2] with the most templateYLabel[1] templateYLabel[2] from 1950 to templateTitleDate[0] . templateXValue[0] had templateYValue[max] templateYLabel[1] templateYLabel[2] throughout his career .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Formula 1 in Formula .  It shows Sebastian_Vettel was the Formula at just 35 degrees and Kimi_Räikkönen was the warmest at 155 degrees .  After Sebastian_Vettel , the next Formula 1 are Michael_Schumacher at 155 degrees , followed by Graham_Hill at 18 degrees , Lewis_Hamilton at 151 degrees and then Alain_Prost at 106 degrees .

Example 397:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: Gross premiums written by leading reinsurers in the U.S. 2018
X_Axis['Insurer']: ['National_Indemnity_Company', 'Everest_Reinsurance_Company', 'Munich_Re_America_Corp.', 'XL_Reinsurance_America', 'Swiss_Reinsurance_America_Corporation', 'Transatlantic_Reinsurance_Company', 'Odyssey_Group', 'General_Re_Group', 'SCOR_U.S._Corporation', 'Partner_Reinsurance_Company_of_the_U.S.', 'AXIS_Reinsurance_Company', 'American_Agricultural_Ins._Co.', 'Endurance_Assurance_Corporation', 'Renaissance_Reinsurance_US_Inc.', 'The_Toa_Reinsurance_Company_of_America', 'Sirius_America_Insurance_Company', 'EMC_Reinsurance_Company']
Y_Axis['Amount', 'in', 'billion', 'U.S.', 'dollars']: ['27.12', '6.57', '5.5', '5.47', '4.33', '3.95', '3.09', '2.52', '1.82', '1.57', '1.18', '0.99', '0.96', '0.77', '0.48', '0.29', '0.16']

gold: The leading reinsurer in the United States as of the fourth quarter in 2018 , National Indemnity Company , had 27.12 billion U.S. dollars ' worth of gross premiums written . Reinsurers Reinsurance is a type of insurance that other insurance companies take out to reduce risk . Essentially , it works to restrict the amount of money an insurer can possibly lose and , in turn , protects their own customers from losses .
gold_template: The templateTitle[4] reinsurer in the templateTitle[6] as of the fourth quarter in templateTitleDate[0] , templateXValue[0] , had templateYValue[max] templateScale templateXValue[8] templateYLabel[3] ' worth of templateTitle[0] templateTitle[1] templateTitle[2] . templateTitle[5] templateXValue[1] is a type of templateXValue[15] that other templateXValue[15] companies take out to reduce risk . Essentially , it works to restrict the templateYLabel[0] of money an templateXLabel[0] can possibly lose and , in turn , protects their own customers from losses .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Gross premiums in U.S. It shows Munich_Re_America_Corp. was the Gross at just 0.16 degrees and Swiss_Reinsurance_America_Corporation was the warmest at 27.12 billion .  After Munich_Re_America_Corp. , the next Gross premiums are National_Indemnity_Company at 27.12 degrees , followed by EMC_Reinsurance_Company at 18 degrees , Everest_Reinsurance_Company at 6.57 degrees and then XL_Reinsurance_America at 5.47 degrees .

Example 398:
titleEntities: {'Subject': ['Washington'], 'Date': ['2016']}
title: Number of registered automobiles in Washington 2016
X_Axis['Autmobile', 'type']: ['Publicly_owned', 'Private_and_commercial_(including_taxicabs)', 'Total']
Y_Axis['Number', 'of', 'registered', 'automobiles']: ['72003', '2863653', '2935656']

gold: This statistic represents the number of registered automobiles in Washington in 2016 . In that year , there were around 2.86 million private and commercial automobiles ( including taxicabs ) registered in Washington .
gold_template: This statistic represents the templateYLabel[0] of templateYLabel[1] templateYLabel[2] in templateTitleSubject[0] in templateTitleDate[0] . In that year , there were around templateYValue[1] templateScale templateXValue[1] and templateXValue[1] templateYLabel[2] ( including taxicabs ) templateYLabel[1] in templateTitleSubject[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Number registered automobiles in Publicly_owned 2016 compared with that in Private_and_commercial_(including_taxicabs) and the Total .  In Publicly_owned there was a 2935656 % difference in the salaries of men and women .  In Private_and_commercial_(including_taxicabs) the difference was 72003 % .

Example 399:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2015', '2016']}
title: Forecast of office rent growth in the U.S. 2015 to 2016
X_Axis['Quarter']: ['Q4_2016', 'Q3_2016', 'Q2_2016', 'Q1_2016', 'Q4_2015', 'Q3_2015', 'Q2_2015']
Y_Axis['Rent', 'growth']: ['1', '0.9', '0.9', '0.9', '0.9', '0.9', '0.8']

gold: This statistic presents a forecast of office rent growth in the United States from second quarter of 2015 to fourth quarter of 2016 . It was expected that office rent would grow by one percent in the fourth quarter of 2016 in the United States . Coworking worldwide – additional information Coworking is an alternative to the traditional office space , wherein independent workers , such as freelancers and remote workers , share a working environment .
gold_template: This statistic presents a templateTitle[0] of templateTitle[1] templateYLabel[0] templateYLabel[1] in the templateTitle[4] from second templateXLabel[0] of templateXValue[4] to fourth templateXLabel[0] of templateXValue[0] . It was expected that templateTitle[1] templateYLabel[0] would grow by templateYValue[max] templateScale in the fourth templateXLabel[0] of templateXValue[0] in the templateTitle[4] . Coworking worldwide – additional information Coworking is an alternative to the traditional templateTitle[1] space , wherein independent workers , such as freelancers and remote workers , share a working environment .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Forecast office rent in the growth competirion .  \\n From the chart we see that the Q4_2015 Quarter made the Forecast growth by some margin , with only 0.8 Q3_2016 and Q4_2016 made a respectable 0.9 and 1 growth , with Q2_2015 and Q1_2016 not far behind , at 0.8 and 0.9 respectively .

Example 400:
titleEntities: {'Subject': ['Volkswagen', 'EU'], 'Date': ['2019']}
title: Volkswagen 's EU share : new-car registrations in 2019
X_Axis['Month']: ['Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18']
Y_Axis['Market', 'share']: ['10.7', '12.3', '12.1', '9.2', '11.9', '11.8', '11.3', '11', '11.3', '10.5', '11.4', '11.5', '11.5', '11.8', '10.2', '6.6', '12.7']

gold: In December 2019 , the VW brand 's share of new-car registrations in the European Union stood at around 10.7 percent , 0.8 points less than the share in December 2018 . Many brands see upward trend Despite an increase in December sales for many brands , Volkswagen and other marques lost their market shares . The VW group saw monthly sales increase 21 percent but its market share dropped by 0.1 percent .
gold_template: In templateTitleDate[0] , the VW brand templateTitle[1] templateYLabel[1] of templateTitle[4] templateTitle[5] in the European Union stood at around templateYValue[0] templateScale , 0.8 points less than the templateYLabel[1] in 2018 . Many brands see upward trend Despite an templatePositiveTrend in sales for many brands , templateTitleSubject[0] and other marques lost their templateYLabel[0] shares . The VW group saw monthly sales templatePositiveTrend 21 templateScale but its templateYLabel[0] templateYLabel[1] templateNegativeTrend by 0.1 templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Volkswagen 's in Volkswagen .  It shows Oct_19 was the Volkswagen at just 6.6 degrees and Aug_19 was the warmest at 12.7 degrees .  After Oct_19 , the next Volkswagen 's are Dec_19 at 10.7 degrees , followed by Aug_18 at 18 degrees , Nov_19 at 12.3 degrees and then Sep_19 at 9.2 degrees .

Example 401:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: Major foreign holders of U.S. treasury securities 2019
X_Axis['Country']: ['Japan', 'China_Mainland', 'United_Kingdom', 'Brazil', 'Ireland', 'Luxembourg', 'Switzerland', 'Cayman_Islands', 'Hong_Kong', 'Belgium', 'Taiwan', 'Saudi_Arabia', 'India', 'Singapore', 'France', 'Korea', 'Canada', 'Thailand', 'Norway', 'Germany', 'Bermuda', 'Netherlands', 'Sweden', 'Mexico', 'Italy', 'Spain', 'Kuwait', 'Israel', 'United_Arab_Emirates', 'Poland', 'Australia', 'Philippines', 'Iraq', 'Indonesia', 'Colombia', 'Chile', 'Vietnam', 'All_Other']
Y_Axis['Securities', 'in', 'billion', 'U.S.', 'dollars']: ['1154.9', '1069.9', '332.6', '281.9', '281.8', '254.6', '237.5', '230.5', '223.3', '210.2', '193.1', '179.8', '162.0', '147.9', '127.5', '122.0', '110.9', '90.5', '90.1', '78.3', '71.3', '50.1', '48.7', '45.4', '45.3', '44.6', '43.3', '43.1', '40.7', '38.8', '38.2', '34.8', '32.9', '32.2', '31.6', '30.8', '30.5', '414.6']

gold: This statistic shows major foreign holders of US treasury debt as of December 2019 . At this time , Japan held treasury securities totaling about 1.15 trillion U.S. dollars . Foreign holders of United States treasury debt According to the Federal Reserve and U.S. Department of the Treasury , foreign countries held a total of 6.69 trillion U.S. dollars in U.S. treasury securities as of December 2019 .
gold_template: This statistic shows templateTitle[0] templateTitle[1] templateTitle[2] of US templateTitle[4] debt as of templateTitleDate[0] . At this time , templateXValue[0] held templateTitle[4] templateYLabel[0] totaling about templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] . templateTitle[1] templateTitle[2] of templateXValue[2] States templateTitle[4] debt According to the Federal Reserve and templateYLabel[2] Department of the templateTitle[4] , templateTitle[1] countries held a total of 6.69 templateScale templateYLabel[2] templateYLabel[3] in templateYLabel[2] templateTitle[4] templateYLabel[0] as of templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Major foreign in U.S. It shows United_Kingdom was the Major at just 30.5 degrees and Ireland was the warmest at 1154.9 degrees .  After United_Kingdom , the next Major foreign are Japan at 1154.9 degrees , followed by All_Other at 18 degrees , China_Mainland at 1069.9 degrees and then Brazil at 281.9 degrees .

Example 402:
titleEntities: {'Subject': ['Twitter'], 'Date': ['2012', '2019']}
title: Twitter : quarterly net income 2012 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12"]
Y_Axis['Net', 'income/loss', 'in', 'million', 'U.S.', 'dollars']: ['118.77', '36.52', '1119.56', '190.8', '255.3', '789.18', '100.12', '61.0', '91.08', '-21.1', '-116.49', '-61.56', '-167.05', '-102.87', '-107.22', '-79.73', '-90.24', '-131.69', '-136.66', '-162.44', '-125.35', '-175.46', '-144.64', '-132.36', '-511.47', '-64.6', '-42.23', '-27.03', '-8.71', '-21.59', '-27.58', '-21.52']

gold: This statistic contains data on the quarterly net loss of Twitter from the first quarter of 2012 to the fourth quarter of 2019 . In the last reported quarter , the social network generated a total net income of 118.77 million U.S. dollars . The social platform has only been reporting positive income since the fourth quarter of 2017 .
gold_template: This statistic contains data on the templateTitle[1] templateYLabel[0] loss of templateTitleSubject[0] from the first templateXLabel[0] of templateTitleDate[min] to the fourth templateXLabel[0] of templateTitleDate[max] . In the last reported templateXLabel[0] , the social network generated a total templateYLabel[0] templateTitle[3] of templateYValue[0] templateScale templateYLabel[3] templateYLabel[4] . The social platform has only been reporting positive templateTitle[3] since the fourth templateXLabel[0] of 2017 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Twitter quarterly in Twitter .  It shows Q2_'19 was the Twitter at just -511.47 degrees and Q4_'18 was the warmest at 1119.56 degrees .  After Q2_'19 , the next Twitter quarterly are Q4_'19 at 118.77 degrees , followed by Q1_'12 at 18 degrees , Q3_'19 at 36.52 degrees and then Q1_'19 at 190.8 degrees .

Example 403:
titleEntities: {'Subject': ['Number'], 'Date': ['2011']}
title: Number of casinos worldwide 2011 by region
X_Axis['Country']: ['North_America', 'Western_Europe', 'Eastern_Europe', 'South_America', 'Africa', 'Caribbean', 'Far_East', 'Central_America', 'Central_Asia', 'Oceania', 'South_Asia', 'Middle_East']
Y_Axis['Number', 'of', 'casinos']: ['1623', '682', '479', '199', '157', '124', '103', '93', '42', '25', '15', '5']

gold: This statistic shows the number of casinos worldwide by region in 2011 . In that year , North America was the region with the most casinos with 1,623 . In 2016 , the U.S. casino gaming market had revenues of 71.1 billion U.S. dollars .
gold_template: This statistic shows the templateYLabel[0] of templateYLabel[1] templateTitle[2] templateTitle[4] templateTitle[5] in templateTitleDate[0] . In that year , templateXValue[0] was the templateTitle[5] with the most templateYLabel[1] with templateYValue[max] . In 2016 , the U.S. casino gaming market had revenues of 71.1 templateScale U.S. dollars .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number casinos in Number .  It shows Eastern_Europe was the Number at just 5 degrees and Africa was the warmest at 1623 degrees .  After Eastern_Europe , the next Number casinos are North_America at 1623 degrees , followed by Middle_East at 18 degrees , Western_Europe at 682 degrees and then South_America at 199 degrees .

Example 404:
titleEntities: {'Subject': ['Minnesota'], 'Date': ['2018']}
title: Population of Minnesota , by race and ethnicity 2018
X_Axis['Race']: ['White_alone', 'Black_or_African_American_alone', 'Hispanic_or_Latino_(of_any_race)', 'Asian_alone', 'Two_or_more_races', 'American_Indian_and_Alaska_Native_alone', 'Some_other_race_alone', 'Native_Hawaiian_and_Other_Pacific_Islander_alone']
Y_Axis['Number', 'of', 'residents']: ['4455388', '362419', '308013', '271051', '149100', '54989', '8194', '2025']

gold: This statistic shows the population of Minnesota , distinguished by race and Hispanic origin in 2018 . In 2018 , about 4.46 million people in Minnesota were white and not of Hispanic or Latino origin .
gold_template: This statistic shows the templateTitle[0] of templateTitleSubject[0] , distinguished templateTitle[2] templateXValue[6] and templateXValue[2] origin in templateTitleDate[0] . In templateTitleDate[0] , about templateYValue[max] templateScale people in templateTitleSubject[0] were templateXValue[0] and not of templateXValue[2] or templateXValue[2] origin .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Population Minnesota by in the race competirion .  \\n From the chart we see that the Two_or_more_races Race made the Population residents by some margin , with only 2025 .  Black_or_African_American_alone and White_alone made a respectable 362419 and 4455388 residents , with Native_Hawaiian_and_Other_Pacific_Islander_alone and Asian_alone not far behind , at 2025 and 271051 respectively .

Example 405:
titleEntities: {'Subject': ['Major League Baseball'], 'Date': ['2019', '2019']}
title: Highest salaries in Major League Baseball 2019
X_Axis['Baseball', 'Player']: ['Stephen_Strasburg', 'Max_Scherzer', 'Zack_Greinke', 'David_Price', 'Clayton_Kershaw', 'Miguel_Cabrera', 'Yoenis_Cespedes', 'Albert_Pujols', 'Justin_Verlander', 'Felix_Hernandez', 'Jon_Lester', 'Nolan_Arenado', 'Giancarlo_Stanton', 'Jake_Arrieta', 'Jordan_Zimmermann', 'Joey_Votto', 'Robinson_Cano', 'J.D._Martinez', 'Josh_Donaldson', 'Jason_Heyward']
Y_Axis['Salary', 'in', 'million', 'U.S.', 'dollars']: ['38.33', '37.41', '34.5', '31.0', '31.0', '30.0', '29.0', '28.0', '28.0', '27.86', '27.5', '26.0', '26.0', '25.0', '25.0', '25.0', '24.0', '23.75', '23.0', '22.5']

gold: American professional sports leagues are known for paying their players handsomely and Major League Baseball is no different . The highest earner in the MLB in 2019 was the starting pitcher for the Arizona Diamondbacks , Stephen Strasburg . The 30-year-old three-time All-Star took home an annual salary of 38.33 million U.S. dollars in the 2019 season .
gold_template: American professional sports leagues are known for paying their players handsomely and templateTitleSubject[0] templateXLabel[0] is no different . The templateTitle[0] earner in the MLB in templateTitleDate[0] was the starting pitcher for the Arizona Diamondbacks , templateXValue[0] . The 30-year-old three-time All-Star took home an annual templateYLabel[0] of templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] in the templateTitleDate[0] season .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Highest salaries in Major League Baseball .  It shows Zack_Greinke was the Highest at just 22.5 degrees and Clayton_Kershaw was the warmest at 38.33 degrees .  After Zack_Greinke , the next Highest salaries are Stephen_Strasburg at 38.33 degrees , followed by Jason_Heyward at 18 degrees , Max_Scherzer at 37.41 degrees and then David_Price at 31.0 degrees .

Example 406:
titleEntities: {'Subject': ['U.S.'], 'Date': ['1900', '2016']}
title: Major floods in the U.S. from 1900 to 2016 , by number of people affected
X_Axis['Date,', 'Location']: ['Jun_9_-_Jun_30_2008_Illinois_Iowa_Kansas', 'Aug_9_-_Aug_16_2016_Louisiana_Mississippi_MissouriIllinois_Indiana', 'Jan_15_-_Jan_21_1996_Nevada_Arizona_New_Mexico', 'Jun_30_-_Jul_23_2002_New_Braunfels_Bandera', 'Jan_1_-_Feb_07_1997_Nevada_Idaho_California', 'Feb_19_1980_South_California', 'Aug_11_-_Aug_13_2014_Midwest_Northeast_Mid-Atlantic', 'May_8_1995_South_Dakota', 'Jun_25_-_Jul_1_2006_Maryland_Pennsylvania', 'Apr_17_-_May_7_1997_Grand_Forks_Fargo', 'Jun_24_-_Aug_23_1993_Oklahoma_Minnesota_Wisconsin', 'Dec_29_2008_-_Jan_16_2009_Orting_Chehalus']
Y_Axis['Number', 'of', 'people', 'affected']: ['11000148', '330000', '200000', '144000', '125000', '106000', '102000', '75000', '65000', '50400', '31000', '30000']

gold: The statistic shows the major floods that have occurred in the United States from 1900 to 2016 , that affected the most people . Approximately 11 million people were affected by the flood that took place in June 2008 in the United States .
gold_template: The statistic shows the templateTitle[0] templateTitle[1] that have occurred in the templateTitle[2] templateTitle[3] templateTitleDate[min] to templateXValue[1] , that templateYLabel[2] the most templateYLabel[1] . Approximately templateYValue[max] templateScale templateYLabel[1] were templateYLabel[2] templateTitle[6] the flood that took place in templateXValue[0] in the templateTitle[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Major floods in U.S. It shows Jan_15_-_Jan_21_1996_Nevada_Arizona_New_Mexico was the Major at just 30000 degrees and Jan_1_-_Feb_07_1997_Nevada_Idaho_California was the warmest at 11000148 people .  After Jan_15_-_Jan_21_1996_Nevada_Arizona_New_Mexico , the next Major floods are Jun_9_-_Jun_30_2008_Illinois_Iowa_Kansas at 11000148 degrees , followed by Dec_29_2008_-_Jan_16_2009_Orting_Chehalus at 18 degrees , Aug_9_-_Aug_16_2016_Louisiana_Mississippi_MissouriIllinois_Indiana at 330000 degrees and then Jun_30_-_Jul_23_2002_New_Braunfels_Bandera at 144000 degrees .

Example 407:
titleEntities: {'Subject': ['Impact'], 'Date': ['2017']}
title: Impact of online harassment and abuse on female victims 2017
X_Axis['Response']: ['A_feeling_of_powerlessness_in_my_ability_to_respond_to_abuse_or_harassment_online', 'Not_being_able_to_sleep_well', 'Lower_self-esteem_or_a_loss_of_self_confidence', 'A_feeling_of_apprehension_when_thinking_about_using_the_internet_or_social_media', 'Less_able_to_focus_on_everyday_tasks', 'Experiencing_panic_attacks_anxiety_or_stress', 'A_feeling_of_isolation_or_a_need_to_withdraw_into_yourself', 'A_feeling_of_apprehension_when_receiving_emails_or_social_media_notifications', 'Experiencing_mood_swings', 'Not_being_able_to_accomplish_what_you_usually_would_on_a_typical_day', 'Being_unable_to_concentrate_for_long_periods_of_time', 'Less_able_to_make_day-to-day_decisions']
Y_Axis['Share', 'of', 'respondents']: ['66', '63', '61', '58', '56', '55', '54', '54', '53', '46', '46', '36']

gold: This statistic presents data on the psychological impact of women experiencing online abuse or harassment worldwide . During the July 2017 survey period , 66 percent of survey respondents who have experienced online abuse stated that they felt a feeling of powerlessness in their ability to respond to abuse or harassment online . A total of 63 percent of online harassment victims also reported to not being able to sleep well .
gold_template: This statistic presents data on the psychological templateTitleSubject[0] of women templateXValue[5] templateXValue[0] or templateXValue[0] worldwide . During the templateTitleDate[0] survey period , templateYValue[max] templateScale of survey templateYLabel[1] who have experienced templateXValue[0] stated that they felt a templateXValue[0] of templateXValue[0] in their templateXValue[0] to templateXValue[0] to templateXValue[0] or templateXValue[0] . A total of templateYValue[1] templateScale of templateXValue[0] templateTitle[5] also reported to templateXValue[1] to templateXValue[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Impact online in Impact .  It shows Lower_self-esteem_or_a_loss_of_self_confidence was the Impact at just 36 degrees and Less_able_to_focus_on_everyday_tasks was the warmest at 66 respondents .  After Lower_self-esteem_or_a_loss_of_self_confidence , the next Impact online are A_feeling_of_powerlessness_in_my_ability_to_respond_to_abuse_or_harassment_online at 66 degrees , followed by Less_able_to_make_day-to-day_decisions at 18 degrees , Not_being_able_to_sleep_well at 63 degrees and then A_feeling_of_apprehension_when_thinking_about_using_the_internet_or_social_media at 58 degrees .

Example 408:
titleEntities: {'Subject': ['Walt Disney Company'], 'Date': ['2010']}
title: Walt Disney Company : quarterly revenue 2010 to 2020
X_Axis['Quarter']: ["Q1_'20", "Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11", "Q4_'10", "Q3_'10", "Q2_'10", "Q1_'10"]
Y_Axis['Revenue', 'in', 'billion', 'U.S.', 'dollars']: ['20.86', '19.1', '20.25', '14.92', '15.3', '14.31', '15.23', '14.55', '15.35', '12.78', '14.24', '13.34', '14.78', '13.14', '14.28', '12.97', '15.24', '13.51', '13.1', '12.46', '13.39', '12.39', '12.47', '11.65', '12.31', '11.57', '11.58', '10.55', '11.34', '10.78', '11.09', '9.63', '10.78', '10.43', '10.68', '9.08', '10.72', '9.74', '10.0', '8.58', '9.74']

gold: In the last measured quarter , The Walt Disney Company generated 20.86 billion U.S. dollars in revenue . Disney 's first fiscal quarter of 2020 was a strong one , which the company partially attributed to the success of its new streaming service , Disney Plus ( stylized as Disney+ ) . The Walt Disney Company : financial dataDisney 's quarterly net income often varies wildly throughout each fiscal year , sometimes surpassing four or five billion U.S. dollars and other times dipping below one billion .
gold_template: In the last measured templateXLabel[0] , The templateTitleSubject[0] generated templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] in templateYLabel[0] . templateTitleSubject[0] 's first fiscal templateXLabel[0] of templateTitleDate[max] was a strong one , which the templateTitleSubject[0] partially attributed to the success of its new streaming service , templateTitleSubject[0] Plus ( stylized as Disney+ ) . The templateTitleSubject[0] : financial dataDisney 's templateTitle[3] net income often varies wildly throughout each fiscal year , sometimes surpassing four or five templateScale templateYLabel[2] templateYLabel[3] and other times dipping below one templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Walt Disney in Walt Disney Company .  It shows Q3_'19 was the Walt at just 8.58 degrees and Q1_'19 was the warmest at 20.86 degrees .  After Q3_'19 , the next Walt Disney are Q1_'20 at 20.86 degrees , followed by Q1_'10 at 18 degrees , Q4_'19 at 19.1 degrees and then Q2_'19 at 14.92 degrees .

Example 409:
titleEntities: {'Subject': ['United States'], 'Date': ['2014']}
title: Market share of streaming devices in the United States 2014
X_Axis['Streaming', 'Device']: ['Apple_TV', 'Roku', 'Chromecast', 'Tivo', 'Other']
Y_Axis['Market', 'share']: ['43', '24', '14', '6', '13']

gold: The statistic shows a breakdown of the U.S. American streaming devices market according to market share in 2014 . Google 's Chromecast held a market share of 14 percent in 2014 .
gold_template: The statistic shows a breakdown of the templateTitle[5] American templateXLabel[0] templateTitle[3] templateYLabel[0] according to templateYLabel[0] templateYLabel[1] in templateTitleDate[0] . Google 's templateXValue[2] held a templateYLabel[0] templateYLabel[1] of templateYValue[2] templateScale in templateTitleDate[0] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] from templateXValue[0] to templateXValue[last] . \\n In templateXValue[0] the templateTitleSubject[0] saw templateYValue[0] templateYLabel[1] , in templateXValue[1] there were templateYValue[max] templateTitleSubject[0] , templateXValue[2] saw at least templateYValue[2] , templateYValue[min] and in templateXValue[idxmin(Y)] .
generated: This chart shows the Market of share at the United States from Apple_TV to Other .  \\n In Apple_TV the United States saw 43 share , in Roku there were 43 United States , Chromecast saw at least 14 , 6 and in Tivo .

Example 410:
titleEntities: {'Subject': ['European'], 'Date': []}
title: European football clubs average attendance 2013/14
X_Axis['Club', 'Name']: ['Boussia_Dortmund', 'Manchester_United', 'Barcelona', 'Real_Madrid', 'Bayern_Munich', 'Schalke_04', 'Arsenal', 'Borussia_Mönchengladbach', 'Hertha_BSC', 'Hamburger_SV', 'Ajax_Amsterdam', 'VfB_Stuttgart', 'Newcastle_United', 'Manchester_City', 'Eintracht_Frankfurt', 'Celtic_FC', 'FC_Internazionale', 'Atletico_Madrid', 'FC_Köln', 'Feyenoord', 'Hannover_96', 'Paris_Saint_Germain', 'Liverpool', 'SL_Benfica', 'Rangers_FC']
Y_Axis['Average', 'attendance']: ['80295', '75205', '72115', '71565', '71000', '61750', '60015', '52240', '51890', '51825', '50905', '50500', '50395', '47075', '47055', '46810', '46245', '46245', '46235', '45755', '45635', '45420', '44670', '43615', '42935']

gold: The statistic shows the European football clubs with the highest average per game attendance in the 2013/14 season . Germany 's Borussia Dortmund had the highest average attendance throughout Europe , with an average of over 80,000 fans attending each of their home games .
gold_template: The statistic shows the templateTitleSubject[0] templateTitle[1] templateTitle[2] with the highest templateYLabel[0] per game templateYLabel[1] in the templateTitle[5] season . Germany 's templateXValue[7] templateXValue[0] had the highest templateYLabel[0] templateYLabel[1] throughout Europe , with an templateYLabel[0] of over 80,000 fans attending each of their home games .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the European football in European .  It shows Barcelona was the European at just 42935 degrees and Bayern_Munich was the warmest at 80295 degrees .  After Barcelona , the next European football are Boussia_Dortmund at 80295 degrees , followed by Rangers_FC at 18 degrees , Manchester_United at 75205 degrees and then Real_Madrid at 71565 degrees .

Example 411:
titleEntities: {'Subject': ['South Africa'], 'Date': ['2018']}
title: South Africa : frequency of online access 2018
X_Axis['Frequency']: ['Every_day', 'At_least_once_per_week', 'At_least_once_per_month', 'Less_than_once_per_month']
Y_Axis['Share', 'of', 'internet', 'users']: ['65', '22', '8', '4']

gold: This statistic presents the frequency of internet usage in South Africa as of January 2018 . During the survey period it was found that 65 percent of South African internet users accessed the internet daily , and four percent accessed it less than once per month .
gold_template: This statistic presents the templateXLabel[0] of templateYLabel[1] usage in templateTitleSubject[0] as of templateTitleDate[0] . During the survey period it was found that templateYValue[max] templateScale of templateTitleSubject[0] African templateYLabel[1] templateYLabel[2] accessed the templateYLabel[1] daily , and templateYValue[min] templateScale accessed it templateXValue[last] templateXValue[1] templateXValue[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] on templateTitle[2] templateTitle[3] in templateTitleSubject[0] . \\n From the chart we see that templateTitleSubject[0] is templateXValue[2] , with templateYValue[max] templateScale , while templateXValue[3] is over £ templateYValue[1] templateScale .
generated: This chart shows the South Africa on frequency online in South Africa .  \\n From the chart we see that South Africa is At_least_once_per_month , with 65 % , while Less_than_once_per_month is over £ 22 % .

Example 412:
titleEntities: {'Subject': ['UK'], 'Date': ['2017', '2019']}
title: MFIs gross lending to non-financial small and medium enterprises in the UK 2017 to 2019
X_Axis['Month']: ["Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Apr_'18", "Mar_'18", "Feb_'18", "Jan_'18", "Dec_'17", "Nov_'17", "Oct_'17"]
Y_Axis['Gross', 'lending', 'in', 'million', 'GBP']: ['4623', '4286', '4976', '4639', '4617', '4466', '4620', '4871', '4616', '4900', '4782', '4836', '4651', '4267', '5160', '5280', '4967', '4768', '5572', '4503', '4013', '4802', '4516', '4874']

gold: This statistic illustrates monthly figures of gross lending by monetary financial institutions ( MFIs ) to small and medium enterprises ( SMEs ) in the United Kingdom ( UK ) from October 2017 to September 2019 . It can be seen that the monthly value of gross lending fluctuated during this time period , reaching a value of over 4.6 billion British pounds as of September 2019 . The largest value of gross lending by MFIs to SMEs during this period was found in March 2018 , when gross lending reaching a value of almost 5.6 Billion British pounds was recorded .
gold_template: This statistic illustrates monthly figures of templateYLabel[0] templateYLabel[1] by monetary financial institutions ( templateTitle[0] ) to templateTitle[4] and templateTitle[5] templateTitle[6] ( SMEs ) in the United Kingdom ( templateTitleSubject[0] ) from templateTitleDate[min] to templateTitleDate[max] . It can be seen that the monthly value of templateYLabel[0] templateYLabel[1] fluctuated during this time period , reaching a value of over templateYValue[0] templateScale British pounds as of templateTitleDate[max] . The largest value of templateYLabel[0] templateYLabel[1] by templateTitle[0] to SMEs during this period was found in 2018 , when templateYLabel[0] templateYLabel[1] reaching a value of almost templateYValue[max] templateScale British pounds was recorded .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the MFIs gross in UK .  It shows Jul_'19 was the MFIs at just 4013 degrees and May_'19 was the warmest at 5572 degrees .  After Jul_'19 , the next MFIs gross are Sep_'19 at 4623 degrees , followed by Oct_'17 at 18 degrees , Aug_'19 at 4286 degrees and then Jun_'19 at 4639 degrees .

Example 413:
titleEntities: {'Subject': ['November'], 'Date': ['2018', '2018']}
title: U.S. states with state cyber bullying laws as of November 2018
X_Axis['Category', 'Of', 'Cyber', 'Bullying', 'Law']: ['Includes_cyber_bullying_or_online_harassment', 'Criminal_Sanction_for_cyber_bullying_or_electronic_harassment', 'School_sanction_for_cyber_bullying', 'School_policy', 'Includes_off-campus']
Y_Axis['State', 'totals']: ['48', '44', '45', '49', '17']

gold: This statistic presents the number of US states with state cyber bullying laws , by policy implementation . As of November 2018 , 48 states had electronic harassment laws which explicitly included cyber bullying . A total of 44 states included criminal sanctions in their cyber bullying laws .
gold_template: This statistic presents the number of US templateTitle[1] templateTitle[2] templateYLabel[0] templateXValue[0] templateTitle[6] , by templateXValue[3] implementation . As of templateTitleSubject[0] templateTitleDate[0] , templateYValue[0] templateTitle[1] had templateXValue[1] templateXValue[0] templateTitle[6] which explicitly included templateXValue[0] . A total of templateYValue[1] templateTitle[1] included templateXValue[1] sanctions in their templateXValue[0] templateTitle[6] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the State of totals at the November street .  \\n The highest State was 49 in the School_policy Category followed by 44 % in the Criminal_Sanction_for_cyber_bullying_or_electronic_harassment Category , 48 % in School_policy and finally 17 % in Includes_off-campus .

Example 414:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2019']}
title: U.S. employment rate in 2019 , by ethnicity
X_Axis['Race']: ['Mexican_American', 'Hispanic/Latino', 'Asian', 'Cuban', 'White/Caucasian', 'U.S._Average', 'Puerto_Rican', 'Black/African-American']
Y_Axis['Employment', 'rate']: ['64.1', '63.9', '62.3', '62', '61', '60.8', '59', '58.7']

gold: This statistic shows the employment to population rate in the United States amongst different ethnic groups in 2019 . In 2019 , about 62.3 percent of the Asian community was employed . In total , around 60.8 percent of all Americans were employed at this time .
gold_template: This statistic shows the templateYLabel[0] to population templateYLabel[1] in the templateTitle[0] amongst different ethnic groups in templateTitleDate[0] . In templateTitleDate[0] , about templateYValue[2] templateScale of the templateXValue[2] community was employed . In total , around templateYValue[5] templateScale of all Americans were employed at this time .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the U.S. employment in U.S. It shows Asian was the U.S. at just 58.7 degrees and White/Caucasian was the warmest at 64.1 rate .  After Asian , the next U.S. employment are Mexican_American at 64.1 degrees , followed by Black/African-American at 18 degrees , Hispanic/Latino at 63.9 degrees and then Cuban at 62 degrees .

Example 415:
titleEntities: {'Subject': ['Sales'], 'Date': ['2016']}
title: Sales of the leading travel agencies worldwide in 2016
X_Axis['Company']: ['Expedia_Inc.', 'The_Priceline_Group', 'American_Express_Global_Business_Travel', 'BCD_Travel', 'Carlson_Wagonlit_Travel', 'HRG_North_America', 'Flight_Centre_Travel_Group_USA', 'American_Express_Travel', 'Travel_Leaders_Group', 'Fareportal', 'Corporate_Travel_Management', 'AAA_Travel', 'Travel_and_Transport', 'Altour', 'Direct_Travel', 'Frosch', 'Omega_World_Travel', 'JTB_Americas_Group', 'World_Travel', 'Ovation_Travel_Group']
Y_Axis['Sales', 'in', 'billion', 'U.S.', 'dollars']: ['72.4', '68.1', '31.1', '24.6', '22.4', '16.0', '14.4', '4.9', '4.39', '4.13', '3.87', '3.74', '2.86', '2.58', '2.5', '1.75', '1.4', '1.36', '1.2', '1.14']

gold: This statistic shows the sales of the leading travel agencies worldwide in 2016 . The travel company Carlson Wagonlit Travel ranked fifth among the leading travel agencies with sales of 22.4 billion U.S. dollars in 2016 . Travel agencies - additional information Travel agencies facilitate the purchase of travel products between travel providers and customers .
gold_template: This statistic shows the templateYLabel[0] of the templateTitle[1] templateXValue[2] templateTitle[3] templateTitle[4] in templateTitleDate[0] . The templateXValue[2] templateXLabel[0] templateXValue[4] templateXValue[2] ranked fifth among the templateTitle[1] templateXValue[2] templateTitle[3] with templateYLabel[0] of templateYValue[4] templateScale templateYLabel[2] templateYLabel[3] in templateTitleDate[0] . templateXValue[2] templateTitle[3] - additional information templateXValue[2] templateTitle[3] facilitate the purchase of templateXValue[2] products between templateXValue[2] providers and customers .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Sales leading in Sales .  It shows American_Express_Global_Business_Travel was the Sales at just 1.14 degrees and Carlson_Wagonlit_Travel was the warmest at 72.4 degrees .  After American_Express_Global_Business_Travel , the next Sales leading are Expedia_Inc. at 72.4 degrees , followed by Ovation_Travel_Group at 18 degrees , The_Priceline_Group at 68.1 degrees and then BCD_Travel at 24.6 degrees .

Example 416:
titleEntities: {'Subject': ['Twitter September'], 'Date': ['2016']}
title: 2016 U.S. election : Twitter followers of candidates in September 2016
X_Axis['Twitter', 'account', 'in', 'brackets']: ['Donald_Trump_(@realDonaldTrump)', 'Hillary_Clinton_(@HillaryClinton)']
Y_Axis['Number', 'of', 'Twitter', 'followers', 'in', 'millions']: ['11.9', '9.3']

gold: This statistic shows the number of Twitter followers of the 2016 U.S. presidential candidates , as of September , 2016 . As of September , 2016 , Donald Trump had approximately 11.9 million Twitter followers .
gold_template: This statistic shows the templateYLabel[0] of templateXLabel[0] templateYLabel[2] of the templateTitleDate[max] templateTitle[1] presidential templateTitle[5] , as of templateTitleSubject[0] , templateTitleDate[max] . As of templateTitleSubject[0] , templateTitleDate[max] , templateXValue[0] had approximately templateYValue[max] templateScale templateXLabel[0] templateYLabel[2] .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the 2016 U.S. election , expressed in millions three different countries .  The Hillary_Clinton_(@HillaryClinton) and Donald_Trump_(@realDonaldTrump) have similar 2016 U.S. gaps at around 20 millions whilst Hillary_Clinton_(@HillaryClinton) is doing a little better at 9.3 millions .

Example 417:
titleEntities: {'Subject': ['EU'], 'Date': ['2013']}
title: EU : used car sales in 2013 , per 1,000 population
X_Axis['Country']: ['Spain', 'Italy', 'Portugal', 'Belgium', 'France', 'Germany', 'Denmark', 'Austria', 'Netherlands', 'Sweden', 'UK']
Y_Axis['Number', 'of', 'used', 'car', 'sales', 'per', 'thousand', 'population']: ['35', '42', '49', '78', '81', '88', '97', '98', '102', '107', '116']

gold: This statistic displays the volume of used car sales in selected European countries in 2013 , per thousand population . The United Kingdom ( UK ) is the biggest used car market among the displayed countries , handling approximately eight percent more used cars than Sweden in 2013 .
gold_template: This statistic displays the volume of templateYLabel[1] templateYLabel[2] templateYLabel[3] in selected European countries in templateTitleDate[0] , templateYLabel[4] thousand templateYLabel[6] . The United Kingdom ( templateXValue[last] ) is the biggest templateYLabel[1] templateYLabel[2] market among the displayed countries , handling approximately eight templateScale more templateYLabel[1] cars than templateXValue[9] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the EU used car sales the Number of used they 've had .  \n It shows Spain has had 35 used , Italy has had the EU at 35 used , Portugal has had 49 , Belgium has had 78 , France has had the most used at 116 and UK has had 116 used .

Example 418:
titleEntities: {'Subject': ['Market'], 'Date': ['2014', '2018']}
title: Market share of the leading exporters of major weapons 2014 to 2018
X_Axis['Country']: ['United_States', 'Russia', 'France', 'Germany', 'China', 'UK', 'Spain', 'Israel', 'Italy', 'Netherlands', 'South_Korea', 'Ukraine', 'Switzerland', 'Turkey']
Y_Axis['Share', 'of', 'international', 'arms', 'exports']: ['36', '21', '6.8', '6.4', '5.2', '4.2', '3.2', '3.1', '2.3', '2.1', '1.8', '1.3', '1', '1']

gold: This statistic shows the market share of the largest suppliers of major weapons between 2014 and 2018 . The United States had a market share of 36 percent in international arms exports between 2014 and 2016 .
gold_template: This statistic shows the templateTitleSubject[0] templateYLabel[0] of the largest suppliers of templateTitle[4] templateTitle[5] between templateTitleDate[min] and templateTitleDate[max] . The templateXValue[0] had a templateTitleSubject[0] templateYLabel[0] of templateYValue[max] templateScale in templateYLabel[1] templateYLabel[2] templateYLabel[3] between templateTitleDate[min] and 2016 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Market share in Market .  It shows France was the Market at just 1 degrees and China was the warmest at 36 degrees .  After France , the next Market share are United_States at 36 degrees , followed by Turkey at 18 degrees , Russia at 21 degrees and then Germany at 6.4 degrees .

Example 419:
titleEntities: {'Subject': ['Global'], 'Date': ['2019']}
title: Global cheese consumption by country 2019
X_Axis['Country']: ['EU', 'United_States', 'Russia', 'Brazil', 'Mexico', 'Canada', 'China', 'Argentina', 'Japan', 'Australia', 'Ukraine', 'South_Korea', 'Belarus', 'New_Zealand', 'Taiwan']
Y_Axis['Consumption', 'in', 'thousand', 'metric', 'tons']: ['9458', '5744', '1217', '805', '548', '542', '396', '380', '354', '305', '208', '166', '73', '38', '30']

gold: This statistic shows the annual consumption of cheese worldwide in 2019 , by selected country . The European Union 's consumption of cheese amounted to some 94.6 million metric tons in 2019 .
gold_template: This statistic shows the annual templateYLabel[0] of templateTitle[1] worldwide in templateTitleDate[0] , templateTitle[3] selected templateXLabel[0] . The European Union 's templateYLabel[0] of templateTitle[1] amounted to some 94.6 templateScale templateYLabel[2] templateYLabel[3] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Global cheese consumption by the Consumption of thousand they 've had .  \n It shows EU has had 9458 thousand , United_States has had the Global at 30 thousand , Russia has had 1217 , Brazil has had 805 , Mexico has had the most thousand at 9458 and Taiwan has had 30 thousand .

Example 420:
titleEntities: {'Subject': ['Global'], 'Date': ['2018']}
title: Global rum market : leading brands based on sales volume 2018
X_Axis['Alcohol', '']: ['Tanduay', 'Bacardi', 'Captain_Morgan', "McDowell's_No._1_Celebration", 'Havana_Club', 'Barceló', 'Bozkov', 'Old_Port', 'Appleton_Estate', 'Montilla', 'Negrita']
Y_Axis['Million', '9', 'liter', 'cases']: ['20.1', '17.1', '11.7', '11.2', '4.6', '2.2', '1.7', '1.3', '1.1', '1.0', '1.0']

gold: This statistic presents the leading rum brands worldwide in 2018 , based on sales volume . Bacardi was the second largest global rum brand that year , with a sales volume of about 17.1 million-9 liter cases . Global Spirits Industry The term `` spirits `` refers to an alcoholic beverage that has been distilled , contains no added sugar , and has at least 20 percent alcohol by volume .
gold_template: This statistic presents the templateTitle[3] templateTitle[1] templateTitle[4] worldwide in templateTitleDate[0] , templateTitle[5] on templateTitle[6] templateTitle[7] . templateXValue[1] was the second largest templateTitleSubject[0] templateTitle[1] brand that year , with a templateTitle[6] templateTitle[7] of about templateYValue[1] million-9 templateYLabel[2] templateYLabel[3] . templateTitleSubject[0] Spirits Industry The term `` spirits `` refers to an alcoholic beverage that has been distilled , contains no added sugar , and has at least templateYValue[max] templateScale templateXLabel[0] by templateTitle[7] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Global rum market in the leading competirion .  \\n From the chart we see that the Havana_Club Alcohol made the Global 9 by some margin , with only 1.0 Bacardi and Tanduay made a respectable 17.1 and 20.1 9 , with Negrita and McDowell's_No._1_Celebration not far behind , at 1.0 and 11.2 respectively .

Example 421:
titleEntities: {'Subject': ['Norway'], 'Date': ['2019']}
title: Leading telecommunication companies in Norway 2019 , by turnover
X_Axis['Telecom', 'Name']: ['Telenor_ASA', 'Telenor_Norge_AS', 'Telia_Norge_AS', 'Telenor_Global_Services_AS', 'Get_AS', 'Eltel_Networks_AS', 'Canal_Digital_Norge_AS', 'Broadnet_Topholding_AS', 'Broadnet_AS', 'Nextgentel_Holding_ASA', 'RiksTV_AS', 'Phonero_AS', 'Viken_Fiber_Holding_AS', 'Norkring_AS', 'TDC_AS', 'Telenor_Satellite_AS', 'Fugro_Norway_AS', 'Viasat_AS', 'Kongsberg_Satellite_Services_AS', 'Netel_AS']
Y_Axis['Turnover', 'in', 'million', 'NOK']: ['124756', '24669', '9091', '3128', '2867', '2445', '2157', '1579', '1424', '1359', '1220', '1109', '1106', '995', '946', '846', '702', '686', '618', '486']

gold: Telenor ASA ranked first as the leading telecom company in Norway , by turnover , as of May 2019 . Its turnover was nearly 125 billion Norwegian kroner . Telenor Norge AS and Telia Norge AS came second and third in the ranking , with revenues of roughly 25 billion and nine billion Norwegian kroner .
gold_template: templateXValue[0] ranked first as the templateTitle[0] templateXLabel[0] company in templateXValue[16] , templateTitle[5] templateYLabel[0] , as of templateTitleDate[0] . Its templateYLabel[0] was nearly templateYValue[max] templateScale Norwegian kroner . templateXValue[0] templateXValue[1] AS and templateXValue[2] templateXValue[1] AS came second and third in the ranking , with revenues of roughly templateYValue[1] templateScale and templateYValue[2] templateScale Norwegian kroner .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading telecommunication in Norway .  It shows Telia_Norge_AS was the Leading at just 486 degrees and Get_AS was the warmest at 124756 degrees .  After Telia_Norge_AS , the next Leading telecommunication are Telenor_ASA at 124756 degrees , followed by Netel_AS at 18 degrees , Telenor_Norge_AS at 24669 degrees and then Telenor_Global_Services_AS at 3128 degrees .

Example 422:
titleEntities: {'Subject': ['UFC'], 'Date': ['2019', '2019']}
title: UFC : most takedowns landed by fighters worldwide as of June 2019
X_Axis['UFC', 'Players']: ['Georges_St-Pierre', 'Gleison_Tibau', 'Demetrious_Johnson', 'Nik_Lentz', 'Frankie_Edgar', 'Clay_Guida', 'Demian_Maia', 'Johny_Hendricks', 'Jon_Fitch', 'Rashad_Evans']
Y_Axis['Total', 'number', 'of', 'takedowns', 'landed']: ['90', '84', '74', '68', '67', '64', '62', '61', '58', '53']

gold: Georges St-Pierre is leading the Ultimate Fighting Championship ( UFC ) in most takedowns landed as of June 2019 , followed by Gleison Tibau with 84 takedowns and Demetrious Johnson with 74 takedowns during UFC fights . At the same point in time Donald Cerrone holds the record for most knockdowns in the UFC with a total of 20 . Georges St-Pierre also holds the record for most strikes landed , with 2,591 landed strikes during UFC fights .
gold_template: templateXValue[0] is leading the Ultimate Fighting Championship ( templateXLabel[0] ) in templateTitle[1] templateYLabel[2] templateYLabel[3] as of templateTitle[7] templateTitleDate[0] , followed templateTitle[4] templateXValue[1] with templateYValue[1] templateYLabel[2] and templateXValue[2] with templateYValue[2] templateYLabel[2] during templateXLabel[0] fights . At the same point in time Donald Cerrone holds the record for templateTitle[1] knockdowns in the templateXLabel[0] with a templateYLabel[0] of 20 . templateXValue[0] also holds the record for templateTitle[1] strikes templateYLabel[3] , with 2,591 templateYLabel[3] strikes during templateXLabel[0] fights .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the UFC most in UFC .  \n It demonstrates that Frankie_Edgar is the UFC , with a Total of 90 number , while Demetrious_Johnson is the coldest , with a Total of 53 number .

Example 423:
titleEntities: {'Subject': ['Kickstarter'], 'Date': ['2019']}
title: Kickstarter : distribution of unsuccessfully funded projects 2019
X_Axis['Percent', 'funded']: ['81-99', '61-80', '41-60', '21-40', '1-20', '0']
Y_Axis['Number', 'of', 'projects']: ['3409', '4866', '12075', '29177', '186808', '55488']

gold: The total number of unsuccessfully funded projects on the U.S. crowdfunding platform Kickstarter amounted to 291,825 up to December 11 , 2019 . The number of projects that were 0 percent funded was 55,488 up to this point . Crowdfunding failure Putting yourself , your ideas and your projects out into the world and subjecting them to the possibility of public scrutiny is not the easiest pill to swallow for a lot of people , and failure can be hard to accept .
gold_template: The total templateYLabel[0] of templateTitle[2] templateXLabel[1] templateYLabel[1] on the U.S. crowdfunding platform templateTitleSubject[0] amounted to 291,825 up to 11 , templateTitleDate[0] . The templateYLabel[0] of templateYLabel[1] that were templateXValue[last] templateXLabel[0] templateXLabel[1] was templateYValue[last] up to this point . Crowdfunding failure Putting yourself , your ideas and your templateYLabel[1] out into the world and subjecting them to the possibility of public scrutiny is not the easiest pill to swallow for a lot of people , and failure can be hard to accept .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Number of projects made by unsuccessfully in a funded projects .  \\n From the chart we see that the 41-60 Percent was the Kickstarter distribution Percent in the projects with 186808 projects .  The next Percent to make the most projects was the 21-40 Percent with 29177 projects closely followed by the 0 Percent with 55488 projects .

Example 424:
titleEntities: {'Subject': ['Cameroon'], 'Date': ['2008', '2018']}
title: Urbanization in Cameroon 2008 to 2018
X_Axis['Share', 'of', 'total', 'population']: ['2018', '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008']
Y_Axis['Unnamed:', '1']: ['56.37', '55.78', '55.18', '54.58', '53.98', '53.37', '52.77', '52.16', '51.56', '50.95', '50.35']

gold: This statistic shows the percentage of the total population living in urban areas in Cameroon from 2008 to 2018 . In 2018 , 56.37 percent of the total population of Cameroon was living in urban areas .
gold_template: This statistic shows the templateScale of the templateXLabel[1] templateXLabel[2] living in urban areas in templateTitleSubject[0] from templateXValue[last] to templateXValue[0] . In templateXValue[0] , templateYValue[max] templateScale of the templateXLabel[1] templateXLabel[2] of templateTitleSubject[0] was living in urban areas .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Urbanization Cameroon 2008 in the 2018 competirion .  \\n From the chart we see that the 2014 Share made the Urbanization 1 by some margin , with only 50.35 .  2017 and 2018 made a respectable 55.78 and 56.37 1 , with 2008 and 2015 not far behind , at 50.35 and 54.58 respectively .

Example 425:
titleEntities: {'Subject': ['Facebook'], 'Date': ['2017']}
title: Facebook reactions on top shared content 2017
X_Axis['Response']: ['Love', 'Haha', 'Wow', 'Sad', 'Angry']
Y_Axis['Share', 'of', 'reactions']: ['41', '28', '15', '12', '5']

gold: This statistic presents the reaction usage in top shared posts on Facebook in September 2017 . During the measured period , Love was the most popular Facebook reaction on top shared posts on the social network .
gold_template: This statistic presents the reaction usage in templateTitle[2] templateTitle[3] posts on templateTitleSubject[0] in templateTitleDate[0] . During the measured period , templateXValue[0] was the most popular templateTitleSubject[0] reaction on templateTitle[2] templateTitle[3] posts on the social network .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Share of reactions at the Facebook street .  \\n The highest Share was 41 in the Sad Response followed by 28 % in the Haha Response , 41 % in Sad and finally 5 % in Angry .

Example 426:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2015']}
title: YouTube : distribution of U.S. users 2015 , by gender
X_Axis['Sex']: ['Male', 'Female']
Y_Axis['Percentage', 'of', 'users']: ['51', '49']

gold: This statistic gives information on the distribution of YouTube users in the United States as of Fall 2015 , sorted by gender . During the survey period , 51 percent of YouTube users were male and 49 percent of users were female .
gold_template: This statistic gives information on the templateTitle[1] of templateTitleSubject[0] templateYLabel[1] in the templateTitle[2] as of Fall templateTitleDate[0] , sorted templateTitle[5] templateTitle[6] . During the survey period , templateYValue[max] templateScale of templateTitleSubject[0] templateYLabel[1] were templateXValue[0] and templateYValue[min] templateScale of templateYLabel[1] were templateXValue[last] .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the YouTube distribution U.S. , expressed in percentage three different countries .  The Female and Male have similar YouTube distribution gaps at around 20 percentage whilst Female is doing a little better at 49 percentage .

Example 427:
titleEntities: {'Subject': ['Fastest'], 'Date': ['2017']}
title: Fastest growing internet companies 2017
X_Axis['Platform']: ['GrubHub', 'Facebook', 'Arista_Networks', 'Paycom_Software', 'Ellie_Mae', 'Stamps.com', 'NetScout_Systems', 'Veeva_Systems', 'Gigamon', 'Shutterstock']
Y_Axis['Three-year', 'average', 'sales', 'growth']: ['52', '51', '46', '46', '43', '42', '37', '37', '31', '28']

gold: This statistic gives information on the fastest growing online and tech companies in 2017 , based on three-year average sales growth . Food delivery platform GrubHub went public in 2014 and was ranked first with a three-year average sales growth of 52 percent .
gold_template: This statistic gives information on the templateTitleSubject[0] templateTitle[1] online and tech templateTitle[3] in templateTitleDate[0] , based on templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] . Food delivery templateXLabel[0] templateXValue[0] went public in 2014 and was ranked first with a templateYLabel[0] templateYLabel[1] templateYLabel[2] templateYLabel[3] of templateYValue[max] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Fastest growing internet in the companies competirion .  \\n From the chart we see that the Ellie_Mae Platform made the Fastest average by some margin , with only 28 .  Facebook and GrubHub made a respectable 51 and 52 average , with Shutterstock and Paycom_Software not far behind , at 28 and 46 respectively .

Example 428:
titleEntities: {'Subject': ['Shades Grey U.S.'], 'Date': ['2012']}
title: Fifty Shades of Grey : U.S. sales figures in 2012 , by platform
X_Axis['Copy', 'Type']: ['Print', 'Digital']
Y_Axis['Number', 'of', 'copies', 'in', 'millions']: ['29', '15']

gold: The statistic presents U.S. sales figures of the 'Fifty Shades of Grey ' trilogy in 2012 , broken down by platform . The book sold 29 million print and 15 million digital copies in 2012 . It topped the 2012 best-seller lists in the categories adult fiction and romance .
gold_template: The statistic presents templateTitleSubject[0] templateTitle[4] templateTitle[5] of the 'Fifty templateTitleSubject[0] of templateTitleSubject[0] ' trilogy in templateTitleDate[0] , broken down templateTitle[7] templateTitle[8] . The book sold templateYValue[max] templateScale templateXValue[0] and templateYValue[min] templateScale templateXValue[last] templateYLabel[1] in templateTitleDate[0] . It topped the templateTitleDate[0] best-seller lists in the categories adult fiction and romance .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] compared with that in templateXValue[1] and the templateXValue[last] . In templateXValue[0] there was a templateYValue[max] templateScale difference in the salaries of men and women . In templateXValue[1] the difference was templateYValue[min] templateScale .
generated: This chart shows the Fifty Shades Grey in Print 2012 compared with that in Digital and the Digital .  In Print there was a 29 millions difference in the salaries of men and women .  In Digital the difference was 15 millions .

Example 429:
titleEntities: {'Subject': ['Major League Baseball', 'MLB'], 'Date': ['2014']}
title: Share of U.S. male/female adults following Major League Baseball ( MLB ) 2014
X_Axis['Sex']: ['Male', 'Female', 'All_adults']
Y_Axis['Answered', 'yes']: ['47', '27', '37']

gold: The statistic depicts the the share of the surveyed respondents that follow Major League Baseball . 47 percent of the male respondents said that they do follow Major League Baseball .
gold_template: The statistic depicts the templateTitle[0] of the surveyed respondents that follow templateTitleSubject[0] . templateYValue[max] templateScale of the templateXValue[0] respondents said that they do follow templateTitleSubject[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] templateTitle[2] in templateXValue[0] in templateTitleDate[0] . It shows that templateXValue[0] had just over 20 templateScale , templateXValue[1] templateYValue[min] templateScale and the templateXValue[last] a similar templateScale to templateXValue[0] .
generated: This graph shows the Share U.S. male/female in Male 2014 .  It shows that Male had just over 20 % , Female 27 % and the All_adults a similar percentage to Male .

Example 430:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: U.S. consumer usage of mobile payments 2017
X_Axis['Response']: ['Made_a_mobile_payment', 'Paid_a_bill', 'Purchase_in-app_or_online', 'Received_loyalty_points', 'Sent/received_money_(P2P)', 'Paid_in-store', 'Paid_for_parking/taxi/transit', 'Withdrew_money_from_ATM', 'Paid_by_text_message', 'Sent_money_internationally']
Y_Axis['Share', 'of', 'respondents']: ['64', '49', '44', '26', '23', '19', '12', '6', '3', '2']

gold: This statistic gives information on the U.S. consumer usage of mobile payment offerings as of January 2017 . During a survey of smartphone owners , 49 percent of respondents stated they had paid a bill via mobile .
gold_template: This statistic gives information on the templateTitleSubject[0] templateTitle[1] templateTitle[2] of templateXValue[0] offerings as of templateTitleDate[0] . During a survey of smartphone owners , templateYValue[1] templateScale of templateYLabel[1] stated they had templateXValue[1] a templateXValue[1] via templateXValue[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the U.S. consumer in U.S. It shows Purchase_in-app_or_online was the U.S. at just 2 degrees and Sent/received_money_(P2P) was the warmest at 64 degrees .  After Purchase_in-app_or_online , the next U.S. consumer are Made_a_mobile_payment at 64 degrees , followed by Sent_money_internationally at 18 degrees , Paid_a_bill at 49 degrees and then Received_loyalty_points at 26 degrees .

Example 431:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: U.S. consumers who use marijuana 2017 , by gender
X_Axis['Response']: ['Men', 'Women']
Y_Axis['Share', 'of', 'respondents']: ['13', '7']

gold: A July 2017 survey of U.S. adults found that approximately 13 percent of American men and seven percent of American women currently smoke marijuana . Impact of Legalizing Cannabis in the U.S . Since Washington and Colorado legalized recreational marijuana in 2012 , several more states have followed suit .
gold_template: A templateTitleDate[0] survey of templateTitleSubject[0] adults found that approximately templateYValue[max] templateScale of American templateXValue[0] and templateYValue[min] templateScale of American templateXValue[last] currently smoke templateTitle[4] . Impact of Legalizing Cannabis in the templateTitle[0] . Since Washington and Colorado legalized recreational templateTitle[4] in 2012 , several more states have followed suit .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the U.S. consumers who , expressed in percentage three different countries .  The Women and Men have similar U.S. consumers gaps at around 20 % whilst Women is doing a little better at 7 % .

Example 432:
titleEntities: {'Subject': ['Ford', 'United Kingdom', 'UK'], 'Date': ['2016', '2019']}
title: Ford car sales in the United Kingdom ( UK ) 2016 to 2019
X_Axis['Month']: ['Dec_19', 'Nov_19', 'Oct_19', 'Sep_19', 'Aug_19', 'Jul_19', 'Jun_19', 'May_19', 'Apr_19', 'Mar_19', 'Feb_19', 'Jan_19', 'Dec_18', 'Nov_18', 'Oct_18', 'Sep_18', 'Aug_18', 'Jul_18', 'Jun_18', 'May_18', 'Apr_18', 'Mar_18', 'Feb_18', 'Jan_18', 'Dec_17', 'Nov_17', 'Oct_17', 'Sep_17', 'Aug_17', 'Jul_17', 'Jun_17', 'May_17', 'Apr_17', 'Mar_17', 'Feb_17', 'Jan_17', 'Dec_16', 'Nov_16', 'Oct_16', 'Sep_16', 'Aug_16', 'Jul_16', 'Jun_16', 'May_16', 'Apr_16', 'Mar_16', 'Feb_16', 'Jan_16']
Y_Axis['Units', 'sold']: ['15030', '16238', '16745', '32522', '10764', '17049', '22049', '19892', '18074', '40755', '10390', '16629', '16493', '14666', '16820', '33326', '11208', '16028', '22334', '21136', '20114', '50257', '12046', '19654', '15541', '18095', '19580', '39696', '9234', '16934', '27095', '20514', '16183', '71837', '9909', '22778', '20741', '21944', '21411', '49078', '11703', '22247', '30244', '23740', '23311', '60349', '11513', '22035']

gold: This statistic illustrates the number of cars sold by Ford in the United Kingdom ( UK ) between January 2016 and December 2019 . In December 2019 , sales volume amounted to 15,030 units . Ford was one of the leading car companies in the UK .
gold_template: This statistic illustrates the number of cars templateYLabel[1] by templateTitleSubject[0] in the templateTitleSubject[1] ( templateTitleSubject[2] ) between templateTitleDate[min] and templateTitleDate[max] . In templateTitleDate[max] , templateTitle[2] volume amounted to templateYValue[0] templateYLabel[0] . templateTitleSubject[0] was one of the leading templateTitle[1] companies in the templateTitleSubject[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Ford car sales in the United competirion .  \\n From the chart we see that the Aug_19 Month made the Ford sold by some margin , with only 9234 .  Nov_19 and Dec_19 made a respectable 16238 and 15030 sold , with Jan_16 and Sep_19 not far behind , at 22035 and 32522 respectively .

Example 433:
titleEntities: {'Subject': ['Groupon.com'], 'Date': ['2019']}
title: Total global visitor traffic to Groupon.com 2019
X_Axis['Month']: ["Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19"]
Y_Axis['Number', 'of', 'unique', 'visitors', 'in', 'millions']: ['43.4', '42.5', '47.7', '54.1', '54.2', '52.9']

gold: This statistic shows the unique monthly visitors to social couponing site Groupon from May 2019 to October 2019 . During the last measured month , almost 43.4 million unique global visitors had visited Groupon , down from 52.9 million visitors in May 2019 .
gold_template: This statistic shows the templateYLabel[1] monthly templateYLabel[2] to social couponing site Groupon from templateXValue[last] templateTitleDate[0] to templateTitleDate[0] . During the last measured templateXLabel[0] , almost templateYValue[0] templateScale templateYLabel[1] templateTitle[1] templateYLabel[2] had visited Groupon , down from templateYValue[last] templateScale templateYLabel[2] in templateXValue[last] templateTitleDate[0] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Number of unique made by visitor in a traffic Groupon.com .  \\n From the chart we see that the Aug_'19 Month was the Total global Month in the Groupon.com with 54.2 unique .  The next Month to make the most unique was the Jul_'19 Month with 54.1 unique closely followed by the May_'19 Month with 52.9 unique .

Example 434:
titleEntities: {'Subject': ['England'], 'Date': ['2018']}
title: Average distance travelled for commuting purposes , by mode England 2018
X_Axis['Commuter', 'Mode']: ['Car/van_(driver)', 'Surface_Rail', 'Car/van_(passenger)', 'London_Underground', 'Other_local_bus', 'Bicycle', 'Bus_in_London', 'Other_public_transport', 'Walk', 'Motorcycle', 'Taxi/minicab', 'Other_private_transport']
Y_Axis['Average', 'miles', 'per', 'person', 'per', 'year']: ['788', '225', '84', '54', '37', '20', '17', '15', '15', '10', '6', '6']

gold: Cars and vans were the most popular mode of transport for commuting purposes in England . In 2018 , car and van drivers travelled an average of 788 miles per year , nearly three and a half times the distance travelled by those using surface rail as a means of commuting . In Great Britain overall , the car was used by more than two thirds of commuters , by far the majority of those travelling to work .
gold_template: Cars and vans were the most popular templateXLabel[1] of templateXValue[7] templateTitle[3] templateTitle[4] templateTitle[5] in templateTitleSubject[0] . In templateTitleDate[0] , car and van drivers templateTitle[2] an templateYLabel[0] of templateYValue[max] templateYLabel[1] templateYLabel[2] templateYLabel[5] , nearly three and a half times the templateTitle[1] templateTitle[2] templateTitle[6] those using templateXValue[1] as a means of templateTitle[4] . In Great Britain overall , the car was used templateTitle[6] more than two thirds of commuters , templateTitle[6] far the majority of those travelling to work .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average distance in England .  It shows Car/van_(passenger) was the Average at just 6 degrees and Other_local_bus was the warmest at 788 miles .  After Car/van_(passenger) , the next Average distance are Car/van_(driver) at 788 degrees , followed by Other_private_transport at 18 degrees , Surface_Rail at 225 degrees and then London_Underground at 54 degrees .

Example 435:
titleEntities: {'Subject': ['Canada'], 'Date': ['2019']}
title: Number of immigrants in Canada , by province 2019
X_Axis['Month']: ['Ontario', 'Quebec', 'British_Columbia', 'Alberta', 'Manitoba', 'Saskatchewan', 'Nova_Scotia', 'New_Brunswick', 'Prince_Edward_Island', 'Newfoundland_and_Labrador', 'Yukon', 'Northwest_Territories', 'Nunavut']
Y_Axis['Number', 'of', 'Immigrants']: ['139071', '44856', '43151', '40725', '15918', '13910', '6393', '5076', '2267', '1651', '310', '227', '25']

gold: Ontario was the province with the most immigrants in 2019 , with 139,071 immigrants living within its boundaries . Nunavut , Canada 's northernmost territory , had 25 immigrants residing there in the same year . Immigration to Canada Over the past 20 years , the number of immigrants to Canada has held steady and is just about evenly split between men and women .
gold_template: templateXValue[0] was the templateTitle[4] with the most templateYLabel[1] in templateTitleDate[0] , with templateYValue[max] templateYLabel[1] living within its boundaries . templateXValue[last] , templateTitleSubject[0] 's northernmost territory , had templateYValue[min] templateYLabel[1] residing there in the same year . Immigration to templateTitleSubject[0] Over the past 20 years , the templateYLabel[0] of templateYLabel[1] to templateTitleSubject[0] has held steady and is just about evenly split between men and women .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number immigrants in Canada .  It shows British_Columbia was the Number at just 25 degrees and Manitoba was the warmest at 139071 Immigrants .  After British_Columbia , the next Number immigrants are Ontario at 139071 degrees , followed by Nunavut at 18 degrees , Quebec at 44856 degrees and then Alberta at 40725 degrees .

Example 436:
titleEntities: {'Subject': ['NFL'], 'Date': ['2019']}
title: Average ticket price in the NFL by team 2019
X_Axis['Team']: ['Los_Angeles_Chargers', 'New_England_Patriots', 'Chicago_Bears', 'Green_Bay_Packers', 'Philadelphia_Eagles', 'Los_Angeles_Rams', 'San_Francisco_49ers', 'New_York_Giants', 'Houston_Texans', 'Seattle_Seahawks', 'Dallas_Cowboys', 'Denver_Broncos', 'Pittsburgh_Steelers', 'Atlanta_Falcons', 'Minnesota_Vikings', 'Baltimore_Ravens', 'Washington_Redskins', 'NFL_Average', 'Carolina_Panthers', 'New_Orleans_Saints', 'New_York_Jets', 'Indianapolis_Colts', 'Detroit_Lions', 'Oakland_Raiders', 'Tennessee_Titans', 'Arizona_Cardinals', 'Miami_Dolphins', 'Kansas_City_Chiefs', 'Tampa_Bay_Buccaneers', 'Jacksonville_Jaguars', 'Cincinnati_Bengals', 'Cleveland_Browns', 'Buffalo_Bills']
Y_Axis['Ticket', 'price', 'in', 'U.S.', 'dollars']: ['165.77', '127.04', '124.51', '122.68', '119.59', '118.09', '116.98', '115.31', '115.24', '111.79', '110.27', '105.14', '104.6', '104.08', '103.98', '103.59', '103.39', '102.35', '99.77', '97.72', '94.16', '93.62', '92.88', '87.78', '86.33', '84.83', '84.51', '83.4', '82.59', '81.54', '77.41', '73.91', '71.08']

gold: As one of the most popular sports leagues in the world , the NFL attracts huge television audiences and thousands of fans flocks to the stadiums every week to see their favorite teams in action . However , fans of the Los Angeles Chargers had to fork out a league-high average of almost 166 U.S. dollars to see their team play live at the Dignity Health Sports Park . In contrast , the Cleveland Browns charged a comparatively low 71.08 U.S. dollars for an average home game .
gold_template: As one of the most popular sports leagues in the world , the templateXValue[17] attracts huge television audiences and thousands of fans flocks to the stadiums every week to see their favorite teams in action . However , fans of the templateXValue[0] had to fork out a league-high templateXValue[17] of almost templateYValue[max] templateYLabel[2] templateYLabel[3] to see their templateXLabel[0] play live at the Dignity Health Sports Park . In contrast , the templateXValue[31] charged a comparatively low templateYValue[min] templateYLabel[2] templateYLabel[3] for an templateXValue[17] home game .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Average ticket price in the NFL competirion .  \\n From the chart we see that the Philadelphia_Eagles Team made the Average price by some margin , with only 71.08 .  New_England_Patriots and Los_Angeles_Chargers made a respectable 127.04 and 165.77 price , with Buffalo_Bills and Green_Bay_Packers not far behind , at 71.08 and 122.68 respectively .

Example 437:
titleEntities: {'Subject': ['Canada'], 'Date': ['2016']}
title: Top 5 origin countries of refugees admitted to Canada in 2016
X_Axis['Country']: ['Syria', 'Eritrea', 'Iraq', 'Congo', 'Afghanistan']
Y_Axis['Number', 'of', 'refugees', 'admitted']: ['33266', '3934', '1650', '1644', '1354']

gold: This statistic shows the top five origin counties of refugees that were admitted to Canada in 2016 . Syria topped the list in 2016 with 33,266 refugees from the country admitted into Canada .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateTitle[2] counties of templateYLabel[1] that were templateYLabel[2] to templateTitleSubject[0] in templateTitleDate[0] . templateXValue[0] topped the list in templateTitleDate[0] with templateYValue[max] templateYLabel[1] from the templateXLabel[0] templateYLabel[2] into templateTitleSubject[0] .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Number of Canada origin in Canada .  We can see that both Eritrea and Iraq have a very small amount whilst Afghanistan , Congo and Syria have a much higher amount . 

Example 438:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2012']}
title: Value of the U.S. tableware market 2012 , by category
X_Axis['Category']: ['Cookware', 'Pantry/kitchen', 'Beverage/stemware', 'Dinnerware', 'Cutlery', 'Flatware']
Y_Axis['Market', 'value', 'in', 'billion', 'U.S.', 'dollars']: ['3.3', '2.2', '2.1', '1.9', '1.8', '0.9']

gold: This statistic depicts the value of the U.S. tableware market in 2012 . In 2012 , cookware generated about 3.3 billion U.S. dollars for the U.S. tabletop market . The total market value of the U.S. tabletop market was about 12.2 billion U.S. dollars .
gold_template: This statistic depicts the templateYLabel[1] of the templateYLabel[3] templateTitle[2] templateYLabel[0] in templateTitleDate[0] . In templateTitleDate[0] , templateXValue[0] generated about templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] for the templateYLabel[3] tabletop templateYLabel[0] . The total templateYLabel[0] templateYLabel[1] of the templateYLabel[3] tabletop templateYLabel[0] was about 12.2 templateScale templateYLabel[3] templateYLabel[4] .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Market of value made by tableware in a market 2012 .  \\n From the chart we see that the Beverage/stemware Category was the Value U.S. Category in the 2012 with 3.3 value .  The next Category to make the most value was the Dinnerware Category with 1.9 value closely followed by the Flatware Category with 0.9 value .

Example 439:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017', '2017']}
title: Internet activities of U.S. users 2017
X_Axis['Activity']: ['Using_email', 'Using_text_messaging_or_instant_messaging', 'Using_online_social_networks', 'Watching_video_online', 'Shopping_making_reservations_or_using_other_consumer_services_online', 'Using_online_financial_services_(banking_investing_paying_bills_etc.)', 'Streaming_or_downloading_music_radio_podcasts_etc.', 'Participating_in_online_video_calls_or_conferences', 'Working_remotely_via_internet', 'Searching_for_a_job_online', 'Taking_classes_or_participating_in_job_training_online', 'Interacting_with_household_equipment_via_internet']
Y_Axis['Share', 'of', 'internet', 'users']: ['90.8', '90.2', '74.4', '69.5', '68.5', '65.9', '52.6', '46.6', '22.6', '20.8', '19.1', '11']

gold: This ranking gives information on the most popular online activities of adult internet users in the United States as of November 2017 . During the survey period , it was found that 74.4 percent of the online adult population accessed social networks .
gold_template: This ranking gives information on the most popular templateXValue[2] templateTitle[1] of adult templateXValue[8] templateYLabel[2] in the templateTitle[2] as of templateTitleDate[0] . During the survey period , it was found that templateYValue[2] templateScale of the templateXValue[2] adult population accessed templateXValue[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Internet activities in U.S. It shows Using_online_social_networks was the Internet at just 11 degrees and Shopping_making_reservations_or_using_other_consumer_services_online was the warmest at 90.8 internet .  After Using_online_social_networks , the next Internet activities are Using_email at 90.8 degrees , followed by Interacting_with_household_equipment_via_internet at 18 degrees , Using_text_messaging_or_instant_messaging at 90.2 degrees and then Watching_video_online at 69.5 degrees .

Example 440:
titleEntities: {'Subject': ['Hispanic'], 'Date': ['2017']}
title: Hispanic high school graduation rate , by state U.S. 2017
X_Axis['State']: ['West_Virginia', 'Vermont', 'Maine', 'Alabama', 'Texas', 'Arkansas', 'Missouri', 'New_Jersey', 'Kentucky', 'Tennessee', 'Illinois', 'Iowa', 'Delaware', 'Nebraska', 'Florida', 'Kansas', 'Mississippi', 'North_Carolina', 'South_Carolina', 'California', 'Wisconsin', 'Wyoming', 'U.S._average', 'Montana', 'Hawaii', 'Nevada', 'Oklahoma', 'Connecticut', 'Utah', 'Alaska', 'Rhode_Island', 'North_Dakota', 'New_Hampshire', 'Indiana', 'Idaho', 'Arizona', 'Massachusetts', 'Maryland', 'Pennsylvania', 'Ohio', 'Georgia', 'Michigan', 'Virginia', 'Washington', 'Oregon', 'District_of_Columbia', 'New_York', 'Colorado', 'South_Dakota', 'New_Mexico', 'Louisiana', 'Minnesota']
Y_Axis['Graduation', 'rate', 'of', 'the', 'class', 'of', '2016']: ['92', '90', '89', '88', '87.7', '85.7', '84.4', '84.3', '84', '83.8', '83.5', '82.4', '82', '81.6', '81.3', '81.1', '81', '80.6', '80.5', '80.3', '80.3', '80', '80', '80', '80', '79.7', '79.3', '77.7', '77.3', '77', '76', '76', '76', '75.8', '74.8', '74.5', '74.4', '74', '73.9', '73.6', '73.6', '73.3', '73', '72.7', '72.5', '72', '71.2', '71.1', '71', '70.5', '67', '66.3']

gold: This statistic shows the high school graduation rate of Hispanic ( Latino ) students in the United States of the class of 2017 . Data is distinguished by state . In 2017 , West Virginia had the highest graduation rate for Hispanic students in the U.S. at 92 percent .
gold_template: This statistic shows the templateTitle[1] templateTitle[2] templateYLabel[0] templateYLabel[1] of templateTitleSubject[0] ( Latino ) students in the templateTitle[7] of the templateYLabel[2] of templateTitleDate[0] . Data is distinguished templateTitle[5] templateXLabel[0] . In templateTitleDate[0] , templateXValue[0] had the highest templateYLabel[0] templateYLabel[1] for templateTitleSubject[0] students in the templateXValue[22] at templateYValue[max] templateScale .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .
generated: This chart shows the Hispanic high in Hispanic .  \n It demonstrates that Texas is the Hispanic , with a Graduation of 92 rate , while Maine is the coldest , with a Graduation of 66.3 rate .

Example 441:
titleEntities: {'Subject': ['WeChat', 'United States'], 'Date': ['2018']}
title: WeChat usage frequency in the United States 2018
X_Axis['Response']: ['Several_times_a_day', 'Once_a_day', 'Once_every_few_days', 'Once_a_week', 'Once_every_few_weeks', 'Less_often_than_every_few_weeks', 'Never']
Y_Axis['Share', 'of', 'respondents']: ['2', '2', '2', '2', '1', '2', '87']

gold: This statistic presents the frequency of WeChat usage in the United States as of January 2018 . During an online survey conducted by We Are Flint , it was found that two percent of internet users in the United States accessed the messenger app once every few days .
gold_template: This statistic presents the templateTitle[2] of templateTitleSubject[0] templateTitle[1] in the templateTitleSubject[1] as of templateTitleDate[0] . During an online survey conducted by We Are Flint , it was found that templateYValue[0] templateScale of internet users in the templateTitleSubject[1] accessed the messenger app templateXValue[1] templateXValue[2] .

generated_template: The graph shows the templateTitle[0] templateTitle[1] templateTitle[3] templateTitle[2] based on the numbers of templateYLabel[1] they made . The templateTitle[0] templateTitle[1] were templateXValue[4] with only templateYValue[min] mistake whereas the least templateTitle[1] templateXLabel[0] were templateXValue[2] who made templateYValue[max] templateYLabel[1] in total .
generated: The graph shows the WeChat usage United frequency based on the numbers of respondents they made .  The WeChat usage were Once_every_few_weeks with only 1 mistake whereas the least usage Response were Once_every_few_days who made 87 respondents in total .

Example 442:
titleEntities: {'Subject': ['eBay'], 'Date': ['2014', '2019']}
title: eBay : quarterly net revenue 2014 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14"]
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['2821', '2649', '2687', '2643', '2877', '2649', '2640', '2580', '2707', '2498', '2419', '2303', '2474', '2299', '2309', '2137', '2322', '2099', '2110', '2061', '2323', '2150', '2168', '2149']

gold: eBay 's revenue in the fourth quarter of 2019 amounted to 2.82 billion U.S. dollars . This represents a two percent year-on-year decline . The majority of revenue is generated through transactions , which accounted for 2.28 billion U.S. dollars in the most recent quarter .
gold_template: templateTitleSubject[0] 's templateYLabel[0] in the fourth templateXLabel[0] of templateTitleDate[max] amounted to templateYValue[0] templateScale templateYLabel[2] templateYLabel[3] . This represents a two templateScale year-on-year decline . The majority of templateYLabel[0] is generated through transactions , which accounted for 2.28 templateScale templateYLabel[2] templateYLabel[3] in the most recent templateXLabel[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the eBay quarterly in eBay .  It shows Q2_'19 was the eBay at just 2061 degrees and Q4_'18 was the warmest at 2877 degrees .  After Q2_'19 , the next eBay quarterly are Q4_'19 at 2821 degrees , followed by Q1_'14 at 18 degrees , Q3_'19 at 2649 degrees and then Q1_'19 at 2643 degrees .

Example 443:
titleEntities: {'Subject': ['Asian'], 'Date': ['2013']}
title: Most popular social network sites in Asian countries in 2013
X_Axis['Country', 'and', 'Platform']: ['China_(QZone)', 'India_(Facebook)', 'Indonesia_(Facebook)', 'Japan_(LINE)', 'Philippines_(Facebook)', 'South_Korea_(Kakaotalk)', 'Thailand_(Facebook)', 'Taiwan_(Facebook)', 'Malaysia_(Facebook)', 'Vietnam_(Facebook)', 'Pakistan_(Facebook)', 'Hong_Kong_(Facebook)', 'Bangladesh_(Facebook)', 'Singapore_(Facebook)', 'Sri_Lanka_(Facebook)']
Y_Axis['Number', 'of', 'registered', 'users', '(in', 'millions)']: ['598.0', '63.0', '48.0', '36.0', '30.0', '19.0', '18.0', '13.0', '13.0', '12.0', '8.0', '3.7', '3.4', '2.7', '1.6']

gold: This statistic shows the most popular social networking sites in selected Asian countries , based on user figures . As of May 2013 , Facebook was the most popular social network in Singapore with 2.7 million registered users .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] templateTitle[2] networking templateTitle[4] in selected templateTitleSubject[0] templateTitle[6] , based on user figures . As of templateTitleDate[0] , Facebook was the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] in templateXValue[13] with templateYValue[13] templateScale templateYLabel[1] templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most popular in Asian .  It shows Indonesia_(Facebook) was the Most at just 1.6 degrees and Philippines_(Facebook) was the warmest at 598.0 registered .  After Indonesia_(Facebook) , the next Most popular are China_(QZone) at 598.0 degrees , followed by Sri_Lanka_(Facebook) at 18 degrees , India_(Facebook) at 63.0 degrees and then Japan_(LINE) at 36.0 degrees .

Example 444:
titleEntities: {'Subject': ['South Africa'], 'Date': ['2020', '2020']}
title: South Africa : digital population as of January 2020
X_Axis['Digital', 'Population']: ['Active_internet_users', 'Active_mobile_internet_users', 'Active_social_media_users', 'Active_mobile_social_media_users']
Y_Axis['Number', 'of', 'users', 'in', 'millions']: ['36.54', '34.93', '22.0', '21.56']

gold: This statistic presents the digital population in South Africa as of January 2020 . During this period of time , it was found that South Africa had 36.54 million internet users , of which 34.93 million were mobile internet users .
gold_template: This statistic presents the templateXLabel[0] templateXLabel[1] in templateTitleSubject[0] as of templateTitle[4] templateTitleDate[0] . During this period of time , it was found that templateTitleSubject[0] had templateYValue[max] templateScale templateXValue[0] , of which templateYValue[1] templateScale were templateXValue[1] templateXValue[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the South Africa on South Africa in the January 2020 on different continents .  The most South Africa was in Active_mobile_social_media_users where £ 36.54 millions was Africa .  The amount in Active_mobile_internet_users was a little lower at £ 34.93 ,000,000 .

Example 445:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2012', '2019']}
title: Major domestic appliances : revenue in the United Kingdom ( UK ) 2012 to 2019
X_Axis['Quarter']: ['Q3_2019', 'Q2_2019', 'Q1_2019', 'Q4_2018', 'Q3_2018', 'Q2_2018', 'Q1_2018', 'Q4_2017', 'Q3_2017', 'Q2_2017', 'Q1_2017', 'Q4_2016', 'Q3_2016', 'Q2_2016', 'Q1_2016', 'Q4_2015', 'Q3_2015', 'Q2_2015', 'Q1_2015', 'Q4_2014', 'Q3_2014', 'Q2_2014', 'Q1_2014', 'Q4_2013', 'Q3_2013', 'Q2_2013', 'Q1_2013', 'Q4_2012', 'Q3_2012']
Y_Axis['Revenue', 'in', 'million', 'GBP']: ['1119', '1018', '1107', '1228', '1188', '1007', '1073', '1186', '1208', '1059', '1107', '1192', '1107', '1040', '1097', '1202', '985', '966', '1052', '1045', '0', '919', '1020', '1027', '944', '873', '946', '1000', '942']

gold: Revenue derived from the sales of major domestic appliances in the United Kingdom reached 1.119 billion British pounds in the third quarter of 2019 . This is 5.8 percent less than the 1.188 billion British pounds generated in Q3 2018 . Share of households with dishwashers , washers and dryers Dishwashers , washing machines and dryers are three of the major appliances in this category .
gold_template: templateYLabel[0] derived from the sales of templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitleSubject[0] reached 1.119 templateScale British pounds in the third templateXLabel[0] of templateXValue[0] . This is 5.8 templateScale less than the 1.188 templateScale British pounds generated in templateXValue[0] templateXValue[3] . Share of households with dishwashers , washers and dryers Dishwashers , washing machines and dryers are three of the templateTitle[0] templateTitle[2] in this category .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Major domestic in United Kingdom .  It shows Q1_2019 was the Major at just 0 degrees and Q3_2018 was the warmest at 1228 degrees .  After Q1_2019 , the next Major domestic are Q3_2019 at 1119 degrees , followed by Q3_2012 at 18 degrees , Q2_2019 at 1018 degrees and then Q4_2018 at 1228 degrees .

Example 446:
titleEntities: {'Subject': ['Apple App Store'], 'Date': ['2019']}
title: Most popular Apple App Store categories 2019
X_Axis['App', 'Category']: ['Games', 'Business', 'Education', 'Lifestyle', 'Utilities', 'Entertainment', 'Travel', 'Food_&_Drink', 'Health_&_Fitness', 'Productivity', 'Book', 'Finance', 'Music', 'Social_Networking', 'Shopping', 'Sports', 'Photo_&_Video', 'Reference', 'Medical', 'News']
Y_Axis['Share', 'of', 'active', 'apps']: ['22.37', '10.12', '8.68', '8.62', '5.9', '5.8', '3.85', '3.4', '3.31', '2.99', '2.49', '2.42', '2.35', '2.24', '2.18', '2.15', '2.05', '2.01', '1.93', '1.86']

gold: The statistic shows the most popular categories in the Apple App Store ranked share of active apps . In November 2019 , business apps were the second-most popular category , with a share of 10.12 percent of active all apps being business apps . Apple app store categories – additional information Apple App Store is a platform in which users can browse and download applications for an Apple device .
gold_template: The statistic shows the templateTitle[0] templateTitle[1] templateTitle[5] in the templateTitleSubject[0] templateXLabel[0] templateTitleSubject[0] ranked templateYLabel[0] of templateYLabel[1] templateYLabel[2] . In templateTitleDate[0] , templateXValue[1] templateYLabel[2] were the second-most templateTitle[1] templateXLabel[1] , with a templateYLabel[0] of templateYValue[1] templateScale of templateYLabel[1] all templateYLabel[2] being templateXValue[1] templateYLabel[2] . templateTitleSubject[0] templateXLabel[0] templateTitleSubject[0] templateTitle[5] – additional information templateTitleSubject[0] templateXLabel[0] templateTitleSubject[0] is a platform in which users can browse and download applications for an templateTitleSubject[0] device .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Most popular in Apple App Store .  It shows Education was the Most at just 1.86 degrees and Utilities was the warmest at 22.37 degrees .  After Education , the next Most popular are Games at 22.37 degrees , followed by News at 18 degrees , Business at 10.12 degrees and then Lifestyle at 8.62 degrees .

Example 447:
titleEntities: {'Subject': ['Scottish Premiership'], 'Date': []}
title: Average player salary in the Scottish Premiership 2019/20 , by team
X_Axis['Team', 'Name']: ['Celtic', 'Rangers', 'Aberdeen', 'Hearts', 'Hibernian', 'Kilmarnock', 'St_Johnstone', 'Motherwell', 'Ross_County', 'St_Mirren', 'Livingston', 'Hamilton']
Y_Axis['Average', 'player', 'salary', 'in', 'thousand', 'U.S.', 'dollars']: ['1119.46', '812.21', '175.58', '172.43', '149.63', '85.51', '78.36', '74.13', '69.47', '60.78', '53.88', '51.44']

gold: In the 2019/2020 season , Celtic was the highest paying club in Scottish Premiership . The average annual player salary in that season was 1.12 million U.S. dollars , while in Hamilton , the lowest paying club in the Scottish Premiership , it was 51.44 thousand U.S. dollars . 12 clubs consistently play in the Scottish Premiership .
gold_template: In the 2019/2020 season , templateXValue[0] was the highest paying club in templateTitleSubject[0] . The templateYLabel[0] annual templateYLabel[1] templateYLabel[2] in that season was templateYValue[max] templateScale templateYLabel[4] templateYLabel[5] , while in templateXValue[last] , the lowest paying club in the templateTitleSubject[0] , it was templateYValue[min] thousand templateYLabel[4] templateYLabel[5] . 12 clubs consistently play in the templateTitleSubject[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Average player in Scottish Premiership .  It shows Aberdeen was the Average at just 51.44 degrees and Hibernian was the warmest at 1119.46 player .  After Aberdeen , the next Average player are Celtic at 1119.46 degrees , followed by Hamilton at 18 degrees , Rangers at 812.21 degrees and then Hearts at 172.43 degrees .

Example 448:
titleEntities: {'Subject': ['Hollywood', 'India'], 'Date': ['2019']}
title: Highest grossing Hollywood movies India 2019
X_Axis['Movie', 'Names']: ['Avengers:_Endgame', 'Avengers:_Infinity_War', 'The_Jungle_Book', 'The_Lion_King', 'Fast_&_Furious_7', 'Jurassic_World', 'Fast_and_Furious_8', 'Spider-Man:_Far_From_Home', 'Captain_Marvel', 'Jurassic_World:_Fallen_Kingdom']
Y_Axis['Box', 'office', 'gross', 'in', 'billion', 'Indian', 'rupees']: ['3.73', '2.27', '1.88', '1.58', '1.08', '1.01', '0.86', '0.86', '0.84', '0.82']

gold: Avengers : Endgame was all-time highest grossing Hollywood movie in India as of September 2019 . The top ten movies include genres that are loaded with action or are animated , similar to the trend in domestic movies . A dramatic consistency With an industry estimated to be valued at nearly 229 billion rupees by 2023 , it comes as no surprise that India 's film industry produced the largest number of movies .
gold_template: Avengers : templateXValue[0] was all-time templateTitle[0] templateTitle[1] templateTitleSubject[0] templateXLabel[0] in templateTitleSubject[1] as of templateTitleDate[0] . The top ten templateTitle[3] include genres that are loaded with action or are animated , similar to the trend in domestic templateTitle[3] . A dramatic consistency With an industry estimated to be valued at nearly 229 templateScale templateYLabel[5] by 2023 , it comes as no surprise that templateTitleSubject[1] 's film industry produced the largest number of templateTitle[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Highest grossing Hollywood in the movies competirion .  \\n From the chart we see that the Fast_&_Furious_7 Movie made the Highest office by some margin , with only 0.82 .  Avengers:_Infinity_War and Avengers:_Endgame made a respectable 2.27 and 3.73 office , with Jurassic_World:_Fallen_Kingdom and The_Lion_King not far behind , at 0.82 and 1.58 respectively .

Example 449:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': []}
title: Most popular brand pages on Facebook in the United Kingdom ( UK ) March 2019
X_Axis['Month']: ['Amazon_UK', 'Coca-Cola', 'Skittles', 'Samsung_UK', 'Cadbury_Creme_Egg', 'Marks_and_Spencer', 'iTunes_UK', 'Red_Bull', 'Tesco', 'Asda']
Y_Axis['Local', 'fans', 'in', 'millions']: ['5.78', '2.52', '2.42', '2.23', '2.06', '1.94', '1.91', '1.86', '1.84', '1.79']

gold: Amazon UK was the most popular brand page on Facebook in the United Kingdom ( UK ) as of March 2019 , attracting 5.78 million local fans . This was more than double that of Coca-Cola , the company with the second highest number of fans . Amazon UK : more than just e-commerce Amazon has enjoyed significant growth in the UK market in recent years .
gold_template: templateXValue[0] was the templateTitle[0] templateTitle[1] templateTitle[2] page on templateTitle[4] in the templateTitleSubject[0] ( templateXValue[0] ) as of templateTitle[8] templateTitleDate[0] , attracting templateYValue[max] templateScale templateYLabel[0] templateYLabel[1] . This was more than double that of templateXValue[1] , the company with the second highest number of templateYLabel[1] . templateXValue[0] : more than just e-commerce templateXValue[0] has enjoyed significant growth in the templateXValue[0] market in recent years .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Most popular brand in the pages competirion .  \\n From the chart we see that the Cadbury_Creme_Egg Month made the Most fans by some margin , with only 1.79 .  Coca-Cola and Amazon_UK made a respectable 2.52 and 5.78 fans , with Asda and Samsung_UK not far behind , at 1.79 and 2.23 respectively .

Example 450:
titleEntities: {'Subject': ['PV'], 'Date': ['2018']}
title: Solar PV capacity - new installations worldwide by country 2018
X_Axis['Country']: ['China', 'India', 'US', 'Japan', 'Australia', 'Germany', 'Mexico', 'Republic_of_Korea', 'Turkey', 'Netherlands']
Y_Axis['Percentage', 'of', 'newly', 'installed', 'capacity']: ['45', '11', '11', '7', '4', '3', '3', '2', '2', '1']

gold: This statistic shows the share of new installed solar PV capacity worldwide in 2018 , by country . In 2018 , new solar PV capacity installations in China accounted for around 45 percent of the world 's total new installed grid-connected PV capacity .
gold_template: This statistic shows the share of templateTitle[3] templateYLabel[2] templateTitle[0] templateTitleSubject[0] templateYLabel[3] templateTitle[5] in templateTitleDate[0] , templateTitle[6] templateXLabel[0] . In templateTitleDate[0] , templateTitle[3] templateTitle[0] templateTitleSubject[0] templateYLabel[3] templateTitle[4] in templateXValue[0] accounted for around templateYValue[max] templateScale of the world 's total templateTitle[3] templateYLabel[2] grid-connected templateTitleSubject[0] templateYLabel[3] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Solar PV in .  It shows US was the Solar at just 1 degrees and Australia was the warmest at 45 degrees .  After US , the next Solar PV are China at 45 degrees , followed by Netherlands at 18 degrees , India at 11 degrees and then Japan at 7 degrees .

Example 451:
titleEntities: {'Subject': ['GDP'], 'Date': ['2018']}
title: National debt of selected countries in relation to gross domestic product ( GDP ) 2018
X_Axis['Country']: ['Japan', 'United_States', 'France', 'Brazil', 'United_Kingdom', 'India', 'Germany', 'China', 'Russia']
Y_Axis['National', 'debt', 'in', 'relation', 'to', 'gross', 'domestic', 'product', '(GDP)']: ['237.69', '106.22', '99.31', '91.57', '85.55', '69.04', '58.58', '55.57', '16.49']

gold: This statistic shows the national debt of important industrial and emerging countries in 2019 in relation to the gross domestic product ( GDP ) . In 2019 , the national debt of China was at about 55.57 percent of the gross domestic product .
gold_template: This statistic shows the templateYLabel[0] templateYLabel[1] of important industrial and emerging templateTitle[3] in 2019 in templateYLabel[2] to the templateYLabel[3] templateYLabel[4] templateYLabel[5] ( templateTitleSubject[0] ) . In 2019 , the templateYLabel[0] templateYLabel[1] of templateXValue[7] was at about templateYValue[7] templateScale of the templateYLabel[3] templateYLabel[4] templateYLabel[5] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the National debt selected countries the National of debt they 've had .  \n It shows Japan has had 237.69 debt , United_States has had the National at 16.49 debt , France has had 99.31 , Brazil has had 91.57 , United_Kingdom has had the most debt at 237.69 and Russia has had 16.49 debt .

Example 452:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2018']}
title: Store numbers of leading supermarkets in the United Kingdom ( UK ) 2018
X_Axis['Supermarket']: ['Tesco', "Sainsbury's", 'Aldi', 'Lidl', 'Asda', 'Morrisons', 'Waitrose']
Y_Axis['Number', 'of', 'stores']: ['2653', '1412', '750', '700', '646', '491', '353']

gold: This statistic shows the number of stores for seven of the leading supermarkets in the United Kingdom ( UK ) as of February 2018 . Tesco had by far the highest number of stores in the United Kingdom , with a total of 2,653 . This was almost double the amount of Sainbury 's who had the second highest number of stores open .
gold_template: This statistic shows the templateYLabel[0] of templateYLabel[1] for seven of the templateTitle[2] templateTitle[3] in the templateTitleSubject[0] ( templateTitleSubject[1] ) as of templateTitleDate[0] . templateXValue[0] had by far the highest templateYLabel[0] of templateYLabel[1] in the templateTitleSubject[0] , with a total of templateYValue[max] . This was almost double the amount of Sainbury 's who had the second highest templateYLabel[0] of templateYLabel[1] open .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateTitle[2] in a templateTitle[3] templateTitle[4] . \\n From the chart we see that the templateXValue[2] templateXLabel[0] was the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[4] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] to make the most templateYLabel[1] was the templateXValue[3] templateXLabel[0] with templateYValue[3] templateYLabel[1] closely followed by the templateXValue[last] templateXLabel[0] with templateYValue[last] templateYLabel[1] .
generated: This chart shows the Number of stores made by leading in a supermarkets United .  \\n From the chart we see that the Aldi Supermarket was the Store numbers Supermarket in the United with 2653 stores .  The next Supermarket to make the most stores was the Lidl Supermarket with 700 stores closely followed by the Waitrose Supermarket with 353 stores .

Example 453:
titleEntities: {'Subject': ['NASCAR'], 'Date': ['2017']}
title: Racing teams of NASCAR ranked by revenue 2017
X_Axis['Teams']: ['Hendrick_Motorsports', 'Richard_Childress_Racing', 'Joe_Gibbs_Racing', 'Stewart-Haas_Racing', 'Roush_Fenway_Racing', 'Team_Penske', 'Chip_Ganassi_Racing', 'Front_Row_Motorsports']
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['180', '145', '131', '109', '97', '63', '49', '19']

gold: The statistic ranks the racing teams of NASCAR according to revenue in 2017 . Hendrick Motorsports generated 180 million U.S. dollars in revenue in 2017 .
gold_template: The statistic ranks the templateXValue[1] templateXLabel[0] of templateTitleSubject[0] according to templateYLabel[0] in templateTitleDate[0] . templateXValue[0] generated templateYValue[max] templateScale templateYLabel[2] templateYLabel[3] in templateYLabel[0] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Racing teams NASCAR in the ranked competirion .  \\n From the chart we see that the Roush_Fenway_Racing Teams made the Racing million by some margin , with only 19 .  Richard_Childress_Racing and Hendrick_Motorsports made a respectable 145 and 180 million , with Front_Row_Motorsports and Stewart-Haas_Racing not far behind , at 19 and 109 respectively .

Example 454:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2012']}
title: Number of U.S. patents held by tech companies in 2012
X_Axis['Company']: ['Samsung', 'Canon', 'Sony', 'Hewlett-Packard', 'Xerox', 'Intel', 'Motorola', 'Microsoft', 'Ricoh', 'Lucent', 'Nokia', 'Cisco', 'Apple', 'Oracle', 'Dell', 'Google', 'Verizon', 'Yahoo', 'AOL', 'Amazon']
Y_Axis['Number', 'of', 'U.S.', 'patents']: ['47855', '46322', '36508', '23904', '23603', '21153', '21027', '19800', '14363', '11713', '9615', '7208', '4649', '3371', '2489', '1124', '1110', '1029', '533', '448']

gold: This statistic shows the number of U.S. patents held by selected tech companies . As of March 2012 , Samsung held 47,855 U.S. patents . Apple , one of Samsung 's main competitors , held 4,649 patents .
gold_template: This statistic shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] templateTitle[3] templateTitle[4] selected templateTitle[5] templateTitle[6] . As of templateTitleDate[0] , templateXValue[0] templateTitle[3] templateYValue[max] templateYLabel[1] templateYLabel[2] . templateXValue[12] , one of templateXValue[0] 's main competitors , templateTitle[3] templateYValue[12] templateYLabel[2] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Number U.S. in .  It shows Sony was the Number at just 448 degrees and Xerox was the warmest at 47855 degrees .  After Sony , the next Number U.S. are Samsung at 47855 degrees , followed by Amazon at 18 degrees , Canon at 46322 degrees and then Hewlett-Packard at 23904 degrees .

Example 455:
titleEntities: {'Subject': ['Facebook'], 'Date': ['2008', '2019']}
title: Facebook : number of monthly active users worldwide 2008 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14", "Q3_'14", "Q2_'14", "Q1_'14", "Q4_'13", "Q3_'13", "Q2_'13", "Q1_'13", "Q4_'12", "Q3_'12", "Q2_'12", "Q1_'12", "Q4_'11", "Q3_'11", "Q2_'11", "Q1_'11", "Q4_'10", "Q3_'10", "Q2_'10", "Q1_'10", "Q4_'09", "Q3_'09", "Q2_'09", "Q1_'09", "Q3_'08"]
Y_Axis['Number', 'of', 'users', 'in', 'millions']: ['2498', '2449', '2414', '2375', '2320', '2271', '2234', '2196', '2129', '2072', '2006', '1936', '1860', '1788', '1712', '1654', '1591', '1545', '1490', '1441', '1393', '1350', '1317', '1276', '1228', '1189', '1155', '1110', '1056', '1007', '955', '901', '845', '800', '739', '680', '608', '550', '482', '431', '360', '305', '242', '197', '100']

gold: How many users does Facebook have ? With almost 2.5 billion monthly active users as of the fourth quarter of 2019 , Facebook is the biggest social network worldwide . In the third quarter of 2012 , the number of active Facebook users surpassed one billion , making it the first social network ever to do so . Active users are those which have logged in to Facebook during the last 30 days .
gold_template: How many templateYLabel[1] does templateTitleSubject[0] have ? With almost templateYValue[max] templateScale templateTitle[2] templateTitle[3] templateYLabel[1] as of the fourth templateXLabel[0] of templateTitleDate[max] , templateTitleSubject[0] is the biggest social network templateTitle[5] . In the third templateXLabel[0] of 2012 , the templateYLabel[0] of templateTitle[3] templateTitleSubject[0] templateYLabel[1] surpassed templateYValue[18] templateScale , making it the first social network ever to do so . templateTitle[3] templateYLabel[1] are those which have logged in to templateTitleSubject[0] during the last 30 days .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Facebook number monthly in the active competirion .  \\n From the chart we see that the Q4_'18 Quarter made the Facebook users by some margin , with only 100 .  Q3_'19 and Q4_'19 made a respectable 2449 and 2498 users , with Q3_'08 and Q1_'19 not far behind , at 100 and 2375 respectively .

Example 456:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2015']}
title: Number of households in the U.S. 2015 , by age of householder
X_Axis['Age', 'of', 'householder']: ['15_to_24_years_old', '25_to_29_years_old', '30_to_34_years_old', '35_to_44_years_old', '45_to_54_years_old', '55_to_64_years_old', '65_to_74_years_old', '75_years_old_and_over']
Y_Axis['Number', 'of', 'households', 'in', 'millions']: ['6.37', '9.35', '10.73', '21.12', '23.57', '23.51', '16.89', '13.06']

gold: This graph shows the number of households in the U.S. by age of householder in 2015 . In 2015 , about 10.73 million households were led by a person between 30 and 34 years old .
gold_template: This graph shows the templateYLabel[0] of templateYLabel[1] in the templateTitleSubject[0] templateTitle[4] templateXLabel[0] of templateXLabel[1] in templateTitleDate[0] . In templateTitleDate[0] , about templateYValue[2] templateScale templateYLabel[1] were led templateTitle[4] a person between templateXValue[2] and templateXValue[2] templateXValue[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Number households U.S. in the 2015 competirion .  \\n From the chart we see that the 45_to_54_years_old Age made the Number households by some margin , with only 6.37 .  25_to_29_years_old and 15_to_24_years_old made a respectable 9.35 and 6.37 households , with 75_years_old_and_over and 35_to_44_years_old not far behind , at 13.06 and 21.12 respectively .

Example 457:
titleEntities: {'Subject': ['Global'], 'Date': ['2018']}
title: Global cumulative installed capacity of wind power by country 2018
X_Axis['Country']: ['China', 'United_States', 'Germany', 'India', 'Spain', 'United_Kingdom', 'France', 'Brazil', 'Canada', 'Rest_of_the_world']
Y_Axis['Cumulative', 'installed', 'capacity', 'in', 'megawatts']: ['216870', '96363', '59313', '35017', '23494', '20743', '15313', '14490', '12816', '102138']

gold: China is by far the largest installer of wind power capacity in the world , more than doubling the second-ranked United States . As of 2018 , China had cumulatively installed over 216.87 gigawatts of wind energy , in comparison to 96.4 gigawatts of wind energy installed in the United States . Worldwide , cumulative capacity of installed wind energy reached 596.6 gigawatts in 2018 , a generous increase over the last decades .
gold_template: templateXValue[0] is templateTitle[6] far the largest installer of templateTitle[4] templateTitle[5] templateYLabel[2] in the templateXValue[last] , more than doubling the second-ranked templateXValue[1] . As of templateTitleDate[0] , templateXValue[0] had cumulatively templateYLabel[1] over 216.87 gigawatts of templateTitle[4] energy , in comparison to 96.4 gigawatts of templateTitle[4] energy templateYLabel[1] in the templateXValue[1] . Worldwide , templateYLabel[0] templateYLabel[2] of templateYLabel[1] templateTitle[4] energy reached 596.6 gigawatts in templateTitleDate[0] , a generous templatePositiveTrend over the last decades .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Global cumulative installed capacity the Cumulative of installed they 've had .  \n It shows China has had 216870 installed , United_States has had the Global at 12816 installed , Germany has had 59313 , India has had 35017 , Spain has had the most installed at 216870 and Rest_of_the_world has had 102138 installed .

Example 458:
titleEntities: {'Subject': ['FIFA'], 'Date': ['2019']}
title: Multiple winners of FIFA football Ballon d'Or 1956 to 2019
X_Axis['Month']: ['Lionel_Messi_(Argentina)', 'Cristiano_Ronaldo_(Portugal)', 'Johann_Cruyff_(The_Netherlands)', 'Michel_Platini_(France)', 'Marco_van_Basten_(The_Netherlands)', 'Alfredo_Di_Stéfano_(Spain)', 'Franz_Beckenbauer_(West_Germany)', 'Kevin_Keegan_(England)', 'Karl-Heinz_Rummenigge_(West_Germany)', 'Ronaldo_(Brazil)']
Y_Axis['Number', 'of', 'awards']: ['6', '5', '3', '3', '3', '2', '2', '2', '2', '2']

gold: The Ballon d'Or is an annual football prize presented by France Football . The award , voted for by football journalists , is given to the male player who was deemed to have played the best football over the previous 12 months . Unsurprisingly , two of the greatest footballers of all time , Lionel Messi and Cristiano Ronaldo , top the list of all-time winners .
gold_template: The templateTitleSubject[1] templateTitle[5] is an annual templateTitle[3] prize presented by France templateTitle[3] . The award , voted for by templateTitle[3] journalists , is given to the male player who was deemed to have played the best templateTitle[3] over the previous 12 months . Unsurprisingly , templateYValue[min] of the greatest footballers of all time , templateXValue[0] and templateXValue[1] , top the list of all-time templateTitle[1] .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] made per templateXLabel[0] in a templateTitle[3] so that the highest bar shows the templateTitle[0] templateTitle[1] - templateXLabel[0] templateXValue[2] with templateYValue[max] templateYLabel[1] , templateXValue[3] with templateYValue[3] , templateXValue[last] with templateYValue[last] , templateXValue[0] with templateYValue[0] , templateXValue[1] with templateYValue[1] and the only templateYValue[min] mistake made by templateXValue[4] .
generated: The chart shows the Number of awards made per Month in a football so that the highest bar shows the Multiple winners - Month Johann_Cruyff_(The_Netherlands) with 6 awards , Michel_Platini_(France) with 3 , Ronaldo_(Brazil) with 2 , Lionel_Messi_(Argentina) with 6 , Cristiano_Ronaldo_(Portugal) with 5 and the only 2 mistake made by Marco_van_Basten_(The_Netherlands) .

Example 459:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2015', '2019']}
title: Wholesale price of iceberg lettuce in the United Kingdom ( UK ) 2015 to 2019
X_Axis['Month']: ["Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18", "Jun_'18", "May_'18", "Feb_'18", "Nov_'17", "Oct_'17", "Sep_'17", "Aug_'17", "Jul_'17", "Jun_'17", "May_'17", "Oct_'16", "Sep_'16", "Aug_'16", "Jul_'16", "Jun_'16", "May_'16", "Nov_'15", "Oct_'15", "Sep_'15", "Aug_'15", "Jul_'15", "Jun_'15", "May_'15"]
Y_Axis['Price', 'in', 'GBP', 'per', 'head']: ['0.79', '0.56', '0.53', '0.43', '0.39', '0.4', '0.45', '0.47', '0.47', '0.75', '0.69', '0.63', '0.41', '0.48', '0.35', '0.41', '0.36', '0.38', '0.34', '0.36', '0.38', '0.4', '0.35', '0.38', '0.45', '0.4', '0.37', '0.44', '0.35', '0.4', '0.45', '0.32', '0.29', '0.35', '0.34']

gold: This statistic displays the wholesale price of iceberg lettuce in the United Kingdom ( UK ) from 2015 to 2019 . The wholesale price of iceberg lettuce was valued at 0.79 British pounds per head in November 2019 , an increase compared to the price a year earlier .
gold_template: This statistic displays the templateTitle[0] templateYLabel[0] of templateTitle[2] templateTitle[3] in the templateTitleSubject[0] ( templateTitleSubject[1] ) from templateTitleDate[min] to templateTitleDate[max] . The templateTitle[0] templateYLabel[0] of templateTitle[2] templateTitle[3] was valued at templateYValue[max] British pounds templateYLabel[2] templateYLabel[3] in templateTitleDate[max] , an templatePositiveTrend compared to the templateYLabel[0] a year earlier .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Wholesale price in United Kingdom .  It shows Sep_'19 was the Wholesale at just 0.29 degrees and Jul_'19 was the warmest at 0.79 degrees .  After Sep_'19 , the next Wholesale price are Nov_'19 at 0.79 degrees , followed by May_'15 at 18 degrees , Oct_'19 at 0.56 degrees and then Aug_'19 at 0.43 degrees .

Example 460:
titleEntities: {'Subject': ['Revenues'], 'Date': ['2018']}
title: Bombardier - Revenues by segment 2018
X_Axis['Segment']: ['Transportation', 'Business_Aircraft', 'Aerostructures_and_Engineering_Services', 'Commercial_Aircraft']
Y_Axis['Billion', 'U.S.', 'dollars']: ['8.91', '4.99', '1.95', '1.76']

gold: This statistic gives a breakdown of Bombardier 's revenue in the fiscal year of 2018 , by segment . The Montreal-headquartered company had revenues of approximately five billion U.S. dollars in its business aircraft segment .
gold_template: This statistic gives a breakdown of templateTitleSubject[0] 's revenue in the fiscal year of templateTitleDate[0] , templateTitle[2] templateXLabel[0] . The Montreal-headquartered company had templateTitleSubject[0] of approximately templateYValue[1] templateScale templateYLabel[1] templateYLabel[2] in its templateXValue[1] templateXLabel[0] .

generated_template: This graph shows the templateTitle[0] templateTitle[1] on templateTitleSubject[0] in the templateTitle[4] templateTitleDate[0] on different continents . The most templateTitle[0] templateTitle[1] was in templateXValue[last] where £ templateYValue[max] templateScale was templateTitle[1] . The amount in templateXValue[1] was a little lower at £ templateYValue[1] ,000,000 .
generated: This graph shows the Bombardier Revenues on in the 2018 on different continents .  The most Bombardier Revenues was in Commercial_Aircraft where £ 8.91 billion was Revenues .  The amount in Business_Aircraft was a little lower at £ 4.99 ,000,000 .

Example 461:
titleEntities: {'Subject': ['Monthly Shanghai Stock Exchange Composite Index'], 'Date': ['18', '20']}
title: Monthly Shanghai Stock Exchange Composite Index performance January 2020
X_Axis['Month']: ["Jan_'20", "Dec_'19", "Nov_'19", "Oct_'19", "Sep_'19", "Aug_'19", "Jul_'19", "Jun_'19", "May_'19", "Apr_'19", "Mar_'19", "Feb_'19", "Jan_'19", "Dec_'18", "Nov_'18", "Oct_'18", "Sep_'18", "Aug_'18", "Jul_'18"]
Y_Axis['Index', 'points']: ['2976.53', '3050.12', '2871.98', '2929.06', '2905.19', '2886.24', '2932.51', '2978.88', '2898.7', '3086.4', '3090.76', '2940.95', '2584.57', '2493.9', '2588.19', '2602.78', '2821.35', '2725.25', '2876.4']

gold: The statistic shows the monthly development of the Shanghai Stock Exchange Composite Index from July 2018 to January 2020 . The SSE Composite Index reflects the performance of all stocks traded on the Shanghai Stock Exchange . On January 23rd , 2020 the SSE Composite Index had closed at about 2,976.53 points .
gold_template: The statistic shows the templateTitle[0] development of the templateTitleSubject[0] templateYLabel[0] from 2018 to templateTitle[7] templateTitleDate[0] . The SSE templateTitleSubject[0] templateYLabel[0] reflects the templateTitle[6] of all stocks traded on the templateTitleSubject[0] . On templateTitle[7] 23rd , templateTitleDate[0] the SSE templateTitleSubject[0] templateYLabel[0] had closed at about templateYValue[0] templateYLabel[1] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Monthly Shanghai in Monthly Shanghai Stock Exchange Composite Index .  It shows Nov_'19 was the Monthly at just 2493.9 degrees and Sep_'19 was the warmest at 3090.76 degrees .  After Nov_'19 , the next Monthly Shanghai are Jan_'20 at 2976.53 degrees , followed by Jul_'18 at 18 degrees , Dec_'19 at 3050.12 degrees and then Oct_'19 at 2929.06 degrees .

Example 462:
titleEntities: {'Subject': ['Tumblr'], 'Date': ['2011', '2019']}
title: Cumulative total of Tumblr posts 2011 to 2019
X_Axis['Month']: ["Apr_'19", "Jan_'19", "Oct_'18", "Jul_'18", "Apr_'18", "Jan_'18", "Oct_'17", "Jul_'17", "Apr_'17", "Jan_'17", "Oct_'16", "Jul_'16", "Apr_'16", "Jan_'16", "Oct_'15", "Jul_'15", "Apr_'15", "Jan_'15", "Oct_'14", "Jul_'14", "Apr_'14", "Jan_'14", "Oct_'13", "Jul_'13", "Apr_'13", "Jan_'13", "Oct_'12", "Jul_'12", "Mar_'12", "Sep_'11", "May_'11"]
Y_Axis['Number', 'of', 'Tumblr', 'posts', 'in', 'billions']: ['171.5', '168.4', '165.5', '162.7', '160.0', '157.2', '154.1', '151.2', '148.1', '144.7', '141.2', '137.0', '133.0', '128.2', '122.7', '116.2', '106.1', '102.2', '93.7', '83.1', '82.9', '73.4', '64.0', '55.1', '44.6', '40.0', '33.1', '26.5', '20.0', '10.0', '5.0']

gold: This statistic shows the cumulative total of Tumblr posts from May 2011 to April 2019 . In the most recently measured period , the social platform surpassed 171.5 billion posts , up from 160 billion posts in the corresponding period of the previous year . Tumblr and user-generated content Tumblr is a blog-based microblogging site and social networking platform based on user-generated content which is uploaded to individual users ' blogs .
gold_template: This statistic shows the templateTitle[0] templateTitle[1] of templateYLabel[1] templateYLabel[2] from templateXValue[last] templateTitleDate[min] to templateTitleDate[max] . In the most recently measured period , the social platform surpassed templateYValue[max] templateScale templateYLabel[2] , up from templateYValue[4] templateScale templateYLabel[2] in the corresponding period of the previous year . templateYLabel[1] and user-generated content templateYLabel[1] is a blog-based microblogging site and social networking platform based on user-generated content which is uploaded to individual users ' blogs .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Cumulative total in Tumblr .  It shows Oct_'18 was the Cumulative at just 5.0 degrees and Apr_'18 was the warmest at 171.5 degrees .  After Oct_'18 , the next Cumulative total are Apr_'19 at 171.5 degrees , followed by May_'11 at 18 degrees , Jan_'19 at 168.4 degrees and then Jul_'18 at 162.7 degrees .

Example 463:
titleEntities: {'Subject': ['Change'], 'Date': ['2018', '2019']}
title: Change of domestic heating oil price in selected countries 2018 to 2019
X_Axis['Country']: ['Canada', 'Italy', 'Spain', 'France', 'United_Kingdom', 'Japan', 'Germany', 'United_States']
Y_Axis['Change', 'in', 'heating', 'oil', 'price']: ['7', '5.9', '5.9', '4', '0.8', '-0.1', '-4.4', '0']

gold: This statistic shows the change in the price of domestic heating oil per liter in selected countries for the period between December 2018 and December 2019 . In December 2019 , the domestic heating oil price in Germany was some -4.4 percent lower than in December 2018 . Domestic heating oil The price of domestic heating oil per liter has decreased in many countries .
gold_template: This statistic shows the templateYLabel[0] in the templateYLabel[3] of templateTitle[1] templateYLabel[1] templateYLabel[2] per liter in templateTitle[5] templateTitle[6] for the period between templateTitleDate[min] and templateTitleDate[max] . In templateTitleDate[max] , the templateTitle[1] templateYLabel[1] templateYLabel[2] templateYLabel[3] in templateXValue[6] was some templateYValue[min] templateScale lower than in templateTitleDate[min] . templateTitle[1] templateYLabel[1] templateYLabel[2] The templateYLabel[3] of templateTitle[1] templateYLabel[1] templateYLabel[2] per liter has templateNegativeTrend in many templateTitle[6] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Change domestic heating oil the Change of heating they 've had .  \n It shows Canada has had 7 heating , Italy has had the Change at -4.4 heating , Spain has had 5.9 , France has had 4 , United_Kingdom has had the most heating at 7 and United_States has had 0 heating .

Example 464:
titleEntities: {'Subject': ['Alibaba'], 'Date': ['2018']}
title: Alibaba : number of employees 2018 , by department
X_Axis['Department']: ['General_and_administrative', 'Sales_and_marketing', 'Research_and_development', 'Operations_and_customer_service']
Y_Axis['Number', 'of', 'employees']: ['6494', '10143', '24820', '24964']

gold: The statistic shows the number of full-time employees of the Alibaba Group , sorted by department . As of March 2018 , the Chinese e-commerce corporation had 24,964 full-time employees working in operations and customer service .
gold_template: The statistic shows the templateYLabel[0] of full-time templateYLabel[1] of the templateTitleSubject[0] Group , sorted templateTitle[4] templateXLabel[0] . As of templateTitleDate[0] , the Chinese e-commerce corporation had templateYValue[max] full-time templateYLabel[1] working in templateXValue[last] and templateXValue[last] .

generated_template: This chart shows the templateTitle[0] in templateScale of templateYLabel[1] that was templateTitle[1] on templateTitle[2] templateTitle[3] in different continents in templateTitleDate[0] . \n\\n templateXValue[2] templateTitle[1] the most templateTitle[0] on templateTitle[2] templateTitle[3] in templateTitleSubject[0] with around templateYValue[max] templateScale templateYLabel[1] being templateTitle[1] . templateXValue[0] then templateTitle[1] the next highest amount with templateYValue[0] templateScale templateYLabel[1] and templateXValue[1] templateTitle[1] half in at templateYValue[1] templateScale .
generated: This chart shows the Alibaba in millions of employees that was number on employees 2018 in different continents in 2018 .  \n\\n Research_and_development number the most Alibaba on employees 2018 in Alibaba with around 24964 % employees being number .  General_and_administrative then number the next highest amount with 6494 % employees and Sales_and_marketing number half in at 10143 % .

Example 465:
titleEntities: {'Subject': ['Japan'], 'Date': ['2017']}
title: Main import partners for Japan 2017
X_Axis['Country']: ['China', 'United_States', 'Australia', 'South_Korea', 'Saudi_Arabia']
Y_Axis['Share', 'in', 'total', 'imports']: ['24.5', '11', '5.8', '4.2', '4.1']

gold: The statistic shows the main import partners for Japan in 2017 . In 2017 , Japan 's main import partner was China , accounting for 24.5 percent of all imports .
gold_template: The statistic shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitleSubject[0] in templateTitleDate[0] . In templateTitleDate[0] , templateTitleSubject[0] 's templateTitle[0] templateTitle[1] partner was templateXValue[0] , accounting templateTitle[3] templateYValue[max] templateScale of all templateYLabel[2] .

generated_template: This chart shows the templateYLabel[0] of templateTitleSubject[0] templateTitle[2] templateTitleSubject[0] in templateTitleSubject[0] . We can see that both templateXValue[1] and templateXValue[2] have a very small amount whilst templateXValue[last] , templateXValue[3] and templateXValue[0] have a much higher amount
generated: This chart shows the Share of Japan partners in Japan .  We can see that both United_States and Australia have a very small amount whilst Saudi_Arabia , South_Korea and China have a much higher amount . 

Example 466:
titleEntities: {'Subject': ['U.S. UHNW'], 'Date': ['2014']}
title: Wealth in the U.S. - UHNW ( super rich ) population in 2014 , by city
X_Axis['State']: ['New_York', 'San_Francisco', 'Los_Angeles', 'Chicago', 'Washington', 'Houston', 'Dallas', 'Toronto', 'Atlanta', 'Seattle']
Y_Axis['Number', 'of', 'Ultra-High-Net-Worth', 'people']: ['8655', '5460', '5135', '2885', '2730', '2545', '2330', '1840', '1230', '1095']

gold: This statistic shows the number of the super-rich , or Ultra-High-Net-Worth , persons in the United States in 2014 , sorted by city . New York has the largest concentration of super-rich individuals ; about 8,655 UHNW ( Ultra High Net Worth ) people are living in the metro area .
gold_template: This statistic shows the templateYLabel[0] of the super-rich , or templateYLabel[1] , persons in the templateTitle[1] in templateTitleDate[0] , sorted templateTitle[7] templateTitle[8] . templateXValue[0] has the largest concentration of super-rich individuals ; about templateYValue[max] templateTitleSubject[0] ( Ultra High Net Worth ) templateYLabel[2] are living in the metro area .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Wealth U.S. UHNW in the super competirion .  \\n From the chart we see that the Washington State made the Wealth Ultra-High-Net-Worth by some margin , with only 1095 .  San_Francisco and New_York made a respectable 5460 and 8655 Ultra-High-Net-Worth , with Seattle and Chicago not far behind , at 1095 and 2885 respectively .

Example 467:
titleEntities: {'Subject': ['DTH', 'India'], 'Date': ['2023']}
title: DTH share of TV market in India 2023
X_Axis['Kind', 'Of', 'Share']: ['Share_of_pay_TV_market', 'Share_of_digital_TV_market']
Y_Axis['Market', 'share']: ['39', '56']

gold: The statistics presents a forecast on the market share of direct-to-home ( DTH ) TV in India in 2023 . The source projects that the market share of DTH on the pay TV market amounted to 39 percent .
gold_template: The statistics presents a forecast on the templateXValue[0] of direct-to-home ( templateTitleSubject[0] ) templateXValue[0] in templateTitleSubject[1] in templateTitleDate[0] . The source projects that the templateXValue[0] of templateTitleSubject[0] on the templateXValue[0] amounted to templateYValue[min] templateScale .

generated_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .
generated: The chart shows the DTH share TV , expressed in percent three different countries .  The Share_of_digital_TV_market and Share_of_pay_TV_market have similar DTH share gaps at around 20 % whilst Share_of_digital_TV_market is doing a little better at 39 % .

Example 468:
titleEntities: {'Subject': ['Women', 'Great Britain'], 'Date': ['2017']}
title: Women 's magazine websites ranked by visitors in Great Britain ( GB ) 2017
X_Axis['British', 'Retailers']: ['tesco.com', 'asda.com', 'bbcgoodfood.com', 'johnlewis.com', 'ok.co.uk', 'jamieoliver.com', 'waitrose.com', 'Cosmopolitan_UK', 'vogue.co.uk', 'goodhousekeeping.co.uk', 'slimmingworld.co.uk', 'hellomagazine.com', 'deliciousmagazine.co.uk', 'glamourmagazine.co.uk', 'idealhome.co.uk', 'vanityfair.com', 'marieclaire.co.uk', 'elleuk.com', 'celebsnow.co.uk', 'womanandhome.com', 'redonline.co.uk', 'youandyourwedding.co.uk', 'whatsontv.co.uk', 'takeabreak.co.uk', 'weightwatchers.co.uk']
Y_Axis['Visitors', 'in', 'thousands']: ['3498', '2067', '1901', '1576', '542', '456', '441', '298', '260', '239', '227', '223', '191', '158', '153', '136', '124', '103', '80', '78', '77', '62', '59', '39', '38']

gold: Among the websites of women 's magazines in the United Kingdom ( UK ) , as defined by the National Readership Survey , tesco.com was the most visited . Tesco.com , the website of the retailer Tesco with the print magazine titled Tesco - Food Family Living , attracted 3.498 million views monthly from October 2016 to September 2017 . Top selling print editions Between January and December of 2018 , Cosmopolitan was the leading women 's lifestyle and fashion magazine by copies sold , with more than 334 thousand copies making their way off the shelves .
gold_template: Among the templateTitle[3] of templateTitle[0] templateTitle[1] magazines in the United Kingdom ( templateXValue[7] ) , as defined templateTitle[5] the National Readership Survey , templateXValue[0] was the most visited . templateXValue[0] , the website of the retailer Tesco with the print templateTitle[2] titled Tesco - Food Family Living , attracted 3.498 templateScale views monthly from 2016 to templateTitleDate[0] . Top selling print editions Between and of 2018 , templateXValue[7] was the leading templateTitle[0] templateTitle[1] lifestyle and fashion templateTitle[2] templateTitle[5] copies sold , with more than 334 thousand copies making their way off the shelves .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Women 's in Women .  It shows bbcgoodfood.com was the Women at just 38 degrees and ok.co.uk was the warmest at 3498 degrees .  After bbcgoodfood.com , the next Women 's are tesco.com at 3498 degrees , followed by weightwatchers.co.uk at 18 degrees , asda.com at 2067 degrees and then johnlewis.com at 1576 degrees .

Example 469:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2018']}
title: U.S. mobile telecommunications providers ranked by revenue 2018
X_Axis['Telecommunications', 'Provider']: ['AT&T', 'Verizon', 'T-Mobile_US', 'Sprint_Corporation', 'US_Cellular']
Y_Axis['Revenue', 'in', 'billion', 'U.S.', 'dollars']: ['170.72', '130.86', '43.31', '33.6', '5.2']

gold: AT & T had a total revenue that amounted to just over 170 billion U.S. dollars in 2018 . This is about 40 billion higher than the revenue produced by runner-up , Verizon . Main U.S. wireless providers Between 2008 and 2018 , AT & T had the highest operating revenue in the United States each year .
gold_template: AT & T had a total templateYLabel[0] that amounted to just over 170 templateScale templateYLabel[2] templateYLabel[3] in templateTitleDate[0] . This is about 40 templateScale higher than the templateYLabel[0] produced templateTitle[5] runner-up , templateXValue[1] . Main templateYLabel[2] wireless templateTitle[3] Between 2008 and templateTitleDate[0] , AT & T had the highest operating templateYLabel[0] in the templateTitle[0] each year .

generated_template: The chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] street templateTitleSubject[0] . \\n The highest templateYLabel[0] was templateYValue[max] in the templateXValue[3] templateXLabel[0] followed by templateYValue[1] templateScale in the templateXValue[1] templateXLabel[0] , templateYValue[0] templateScale in templateXValue[3] and finally templateYValue[min] templateScale in templateXValue[last] .
generated: The chart shows the Revenue of billion U.S. at the U.S. street .  \\n The highest Revenue was 170.72 in the Sprint_Corporation Telecommunications followed by 130.86 billion in the Verizon Telecommunications , 170.72 billion in Sprint_Corporation and finally 5.2 billion in US_Cellular .

Example 470:
titleEntities: {'Subject': ['World Risk Index'], 'Date': ['2019']}
title: Safest countries according to the World Risk Index 2019
X_Axis['Country']: ['Qatar', 'Malta', 'St_Vincent_and_the_Grenadines', 'Grenada', 'Saudi_Arabia', 'Barbados', 'Iceland', 'Egypt', 'Finland', 'Estonia', 'Switzerland', 'Maldives', 'Sweden', 'Lithuania', 'Norway']
Y_Axis['World', 'Risk', 'Index', 'score']: ['0.31', '0.54', '0.8', '1.01', '1.04', '1.35', '1.71', '1.84', '1.94', '2.04', '2.05', '2.08', '2.2', '2.29', '2.34']

gold: This statistic shows the countries with the lowest risk of natural disasters according to the Global Risk Index in 2019 . At this time , Qatar , with an index value of 0.31 , was the safest country in the world . In the framework of the WorldRiskIndex , disaster risk is analyzed as a complex interplay of natural hazards and social , political and environmental factors .
gold_template: This statistic shows the templateTitle[1] with the lowest templateYLabel[1] of natural disasters templateTitle[2] to the Global templateYLabel[1] templateYLabel[2] in templateTitleDate[0] . At this time , templateXValue[0] , with an templateYLabel[2] value of templateYValue[min] , was the templateTitle[0] templateXLabel[0] in the templateYLabel[0] . In the framework of the WorldRiskIndex , disaster templateYLabel[1] is analyzed as a complex interplay of natural hazards and social , political and environmental factors .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Safest countries in World Risk Index .  It shows St_Vincent_and_the_Grenadines was the Safest at just 0.31 degrees and Saudi_Arabia was the warmest at 2.34 degrees .  After St_Vincent_and_the_Grenadines , the next Safest countries are Qatar at 0.31 degrees , followed by Norway at 18 degrees , Malta at 0.54 degrees and then Grenada at 1.01 degrees .

Example 471:
titleEntities: {'Subject': ['Countries'], 'Date': ['2018']}
title: Countries with the largest population 2018
X_Axis['Country']: ['China', 'India', 'USA', 'Indonesia', 'Brazil', 'Pakistan', 'Nigeria', 'Bangladesh', 'Russia', 'Mexico']
Y_Axis['Inhabitants', 'in', 'millions']: ['1393.8', '1371.3', '328.0', '265.2', '209.4', '200.6', '195.9', '166.4', '147.3', '130.8']

gold: The statistic shows the ten countries with the ten largest populations in mid 2018 . In mid 2018 , approximately 1.39 billion people lived in China . The largest countries and the global population The total world population amounts to more than 7 billion people , with China reporting the highest number of inhabitants – its total population surpassed the 1.3 billion mark a few years ago and continues to rise .
gold_template: The statistic shows the ten templateTitleSubject[0] templateTitle[1] the ten templateTitle[2] populations in mid templateTitleDate[0] . In mid templateTitleDate[0] , approximately templateYValue[max] templateScale people lived in templateXValue[0] . The templateTitle[2] templateTitleSubject[0] and the global templateTitle[3] The total world templateTitle[3] amounts to more than 7 templateScale people , templateTitle[1] templateXValue[0] reporting the highest number of templateYLabel[0] – its total templateTitle[3] surpassed the 1.3 templateScale mark a few years ago and continues to rise .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] they 've had . \n It shows templateXValue[0] has had templateYValue[0] templateYLabel[1] , templateXValue[1] has had the templateTitle[0] at templateYValue[min] templateYLabel[1] , templateXValue[2] has had templateYValue[2] , templateXValue[3] has had templateYValue[3] , templateXValue[4] has had the most templateYLabel[1] at templateYValue[max] and templateXValue[last] has had templateYValue[last] templateYLabel[1] .
generated: This chart shows the Countries largest population 2018 the Inhabitants of millions they 've had .  \n It shows China has had 1393.8 millions , India has had the Countries at 130.8 millions , USA has had 328.0 , Indonesia has had 265.2 , Brazil has had the most millions at 1393.8 and Mexico has had 130.8 millions .

Example 472:
titleEntities: {'Subject': ['United states'], 'Date': ['2017']}
title: Total number of registered buses in the United states by state 2017
X_Axis['State']: ['California', 'New_York', 'Texas', 'Florida', 'Pennsylvania', 'Ohio', 'Georgia', 'Illinois', 'Virginia', 'North_Carolina', 'Louisiana', 'Tennessee', 'Missouri', 'New_Jersey', 'Washington', 'Maryland', 'Indiana', 'Minnesota', 'South_Carolina', 'Oregon', 'Wisconsin', 'Nebraska', 'Massachusetts', 'Colorado', 'Arkansas', 'Connecticut', 'Kentucky', 'Iowa', 'Arizona', 'Michigan', 'Alaska', 'Mississippi', 'New_Mexico', 'Kansas', 'Utah', 'Alabama', 'District_of_Columbia', 'Montana', 'Maine', 'Wyoming', 'Idaho', 'Delaware', 'West_Virginia', 'North_Dakota', 'Nevada', 'Oklahoma', 'Hawaii', 'New_Hampshire', 'South_Dakota', 'Rhode_Island', 'Vermont']
Y_Axis['Number', 'of', 'buses']: ['99917', '80446', '67143', '59596', '55935', '41255', '36418', '34359', '34268', '32493', '29160', '29158', '27180', '25097', '23566', '22972', '20726', '19980', '17728', '17691', '15567', '13564', '13498', '13305', '11941', '11378', '10759', '9284', '9051', '8737', '8080', '8018', '6278', '6228', '6108', '5682', '4885', '4702', '4339', '4219', '3870', '3763', '3342', '3331', '3198', '3155', '3033', '2871', '2614', '2273', '1070']

gold: This statistic represents the number of bus registrations in the United States in 2017 , by federal state , including the District of Columbia . With around 99,900 registered buses , California was ranked first .
gold_template: This statistic represents the templateYLabel[0] of bus registrations in the templateTitleSubject[0] templateTitle[5] in templateTitleDate[0] , templateTitle[6] federal templateXLabel[0] , including the templateXValue[36] of templateXValue[36] . With around 99,900 templateTitle[2] templateYLabel[1] , templateXValue[0] was ranked first .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Total number registered in the buses competirion .  \\n From the chart we see that the Pennsylvania State made the Total buses by some margin , with only 1070 .  New_York and California made a respectable 80446 and 99917 buses , with Vermont and Florida not far behind , at 1070 and 59596 respectively .

Example 473:
titleEntities: {'Subject': ['U.S.'], 'Date': ['2017']}
title: Leading causes of death among black U.S. residents in 2017
X_Axis['Month']: ['Diseases_of_the_heart', 'Malignant_neoplasms_(cancers)', 'Accidents_(unintentional_injuries)', 'Cerebrovascular_diseases_(stroke)', 'Diabetes_mellitus', 'Chronic_lower_respiratorydiseases_(CLRD)', 'Assault_(homicide)', 'Nephritis_nephrotic_syndrome_and_nephrosis_(kidney_diseases)', "Alzheimer's_disease", 'Septicemia']
Y_Axis['Percentage', 'of', 'all', 'causes', 'of', 'death']: ['23.3', '20.8', '5.9', '5.7', '4.4', '3.3', '3', '2.8', '2.7', '2']

gold: The leading causes of death among black residents in the United States in 2017 included diseases of the heart , cancer , stroke , and unintentional injuries . The leading causes of death for African Americans generally reflects the leading causes of death for the entire United States population . However , a major exception is that death from assault or homicide is the seventh leading cause of death among African Americans but is not among the ten leading causes for the general population .
gold_template: The templateTitle[0] templateYLabel[2] of templateYLabel[3] templateTitle[3] templateTitle[4] templateTitle[6] in the templateTitle[5] in templateTitleDate[0] included templateXValue[0] of the templateXValue[0] , cancer , stroke , and unintentional injuries . The templateTitle[0] templateYLabel[2] of templateYLabel[3] for African Americans generally reflects the templateTitle[0] templateYLabel[2] of templateYLabel[3] for the entire templateTitle[5] population . However , a major exception is that templateYLabel[3] from templateXValue[6] or homicide is the seventh templateTitle[0] cause of templateYLabel[3] templateTitle[3] African Americans but is not templateTitle[3] the ten templateTitle[0] templateYLabel[2] for the general population .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Leading causes death in the among competirion .  \\n From the chart we see that the Diabetes_mellitus Month made the Leading all by some margin , with only 2 .  Malignant_neoplasms_(cancers) and Diseases_of_the_heart made a respectable 20.8 and 23.3 all , with Septicemia and Cerebrovascular_diseases_(stroke) not far behind , at 2 and 5.7 respectively .

Example 474:
titleEntities: {'Subject': ['eBay'], 'Date': ['2014', '2019']}
title: eBay : quarterly classifieds revenue 2014 to 2019
X_Axis['Quarter']: ["Q4_'19", "Q3_'19", "Q2_'19", "Q1_'19", "Q4_'18", "Q3_'18", "Q2_'18", "Q1_'18", "Q4_'17", "Q3_'17", "Q2_'17", "Q1_'17", "Q4_'16", "Q3_'16", "Q2_'16", "Q1_'16", "Q4_'15", "Q3_'15", "Q2_'15", "Q1_'15", "Q4_'14"]
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['269', '265', '271', '256', '263', '254', '259', '246', '244', '235', '219', '199', '201', '197', '207', '186', '183', '178', '180', '162', '180']

gold: eBay 's classifieds revenue in the fourth quarter of 2019 amounted to 269 million U.S. dollars . This represents a three percent year-on-year change . The classifieds revenue is counted towards the company 's marketing services and other revenues segment .
gold_template: templateTitleSubject[0] 's templateTitle[2] templateYLabel[0] in the fourth templateXLabel[0] of templateTitleDate[max] amounted to templateYValue[0] templateScale templateYLabel[2] templateYLabel[3] . This represents a three templateScale year-on-year change . The templateTitle[2] templateYLabel[0] is counted towards the company 's marketing services and other revenues segment .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the eBay quarterly in eBay .  It shows Q2_'19 was the eBay at just 162 degrees and Q4_'18 was the warmest at 271 degrees .  After Q2_'19 , the next eBay quarterly are Q4_'19 at 269 degrees , followed by Q4_'14 at 18 degrees , Q3_'19 at 265 degrees and then Q1_'19 at 256 degrees .

Example 475:
titleEntities: {'Subject': ['India'], 'Date': ['2019']}
title: Movies with biggest production budgets in India 2019
X_Axis['Movie']: ['2.0', 'Thugs_of_Hindostan', 'Zero', 'Padmaavat', 'Tiger_Zinda_Hai', 'Bahubali_2_-_The_Conclusion', 'Race_3', 'Saaho', 'Bharat', 'War']
Y_Axis['Production', 'budget', 'in', 'billion', 'Indian', 'rupees']: ['5.75', '3.25', '2.7', '2.15', '2.1', '1.95', '1.85', '3.25', '2.4', '2.05']

gold: The science fiction movie 2.0 was ranked as the all-time highest budget movie in India with a production value of almost six billion Indian rupees . Saaho , another action thriller produced in 2019 became the second highest big-budget film costing over 3.2 billion rupees . The business of Bollywood The Indian film industry was valued at over 180 billion rupees in fiscal year 2019 , and it was estimated to reach up to 260 billion rupees by the end of fiscal year 2024 .
gold_template: The science fiction templateXLabel[0] templateXValue[0] was ranked as the all-time highest templateYLabel[1] templateXLabel[0] in templateTitleSubject[0] templateTitle[1] a templateYLabel[0] value of almost templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . templateXValue[7] , another action thriller produced in templateTitleDate[0] became the second highest big-budget film costing over 3.2 templateScale templateYLabel[4] . The business of Bollywood The templateYLabel[3] film industry was valued at over 180 templateScale templateYLabel[4] in fiscal year templateTitleDate[0] , and it was estimated to reach up to 260 templateScale templateYLabel[4] by the end of fiscal year 2024 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Movies biggest production in the budgets competirion .  \\n From the chart we see that the Tiger_Zinda_Hai Movie made the Movies budget by some margin , with only 1.85 .  Thugs_of_Hindostan and 2.0 made a respectable 3.25 and 5.75 budget , with War and Padmaavat not far behind , at 2.05 and 2.15 respectively .

Example 476:
titleEntities: {'Subject': ['Spain'], 'Date': ['2019']}
title: Leading car brands : market share in Spain 2019
X_Axis['Car', 'Brand']: ['Peugeot', 'Seat', 'Volkswagen', 'Renault', 'Citroën', 'Opel', 'Toyota', 'Ford', 'Hyundai', 'Kia', 'Dacia', 'Mercedes', 'Nissan', 'Audi', 'BMW']
Y_Axis['Market', 'share']: ['8.73', '8.51', '7.24', '6.63', '6.56', '5.63', '5.51', '4.86', '4.82', '4.57', '4.27', '4.13', '3.96', '3.92', '3.6']

gold: In 2019 , Peugeot ranked as the leading make in Spain with a market share of 8.73 percent . SEAT ranked second with a market share of 8.51 percent , followed by Volkswagen with 7.24 percent . The Spanish car brand saw its sales increase , with the most registered SEAT models being the SEAT Leon and SEAT Ibiza , both exceeding 30 thousand registrations during 2018 .
gold_template: In templateTitleDate[0] , templateXValue[0] ranked as the templateTitle[0] make in templateTitleSubject[0] with a templateYLabel[0] templateYLabel[1] of templateYValue[max] templateScale . templateXValue[1] ranked second with a templateYLabel[0] templateYLabel[1] of templateYValue[1] templateScale , followed by templateXValue[2] with templateYValue[2] templateScale . The Spanish templateXLabel[0] templateXLabel[1] saw its sales templatePositiveTrend , with the most registered templateXValue[1] models being the templateXValue[1] Leon and templateXValue[1] Ibiza , both exceeding 30 thousand registrations during 2018 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] templateYLabel[1] . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Leading car in Spain .  It shows Volkswagen was the Leading at just 3.6 degrees and Citroën was the warmest at 8.73 share .  After Volkswagen , the next Leading car are Peugeot at 8.73 degrees , followed by BMW at 18 degrees , Seat at 8.51 degrees and then Renault at 6.63 degrees .

Example 477:
titleEntities: {'Subject': ['North America'], 'Date': ['2018']}
title: Highest grossing James Bond movies in North America 2018
X_Axis['Month']: ['Skyfall_(2012)', 'Spectre_(2015)', 'Quantum_of_Solace_(2008)', 'Casino_Royale_(2006)', 'Die_Another_Day_(2002)', 'The_World_Is_Not_Enough_(1999)', 'Tomorrow_Never_Dies_(1997)', 'Goldeneye_(1995)', 'Moonraker_(1979)', 'Octopussy_(1983)']
Y_Axis['Revenue', 'in', 'million', 'U.S.', 'dollars']: ['304.36', '200.07', '169.37', '167.37', '160.94', '126.93', '125.3', '106.43', '70.3', '67.9']

gold: This statistic provides information on the highest grossing James Bond movies in North America as of November 2018 . The James Bond film with the highest domestic box office revenue was 'Skyfall ' _ , having made over 304 million dollars at the North American box office , followed by 'Spectre ' with revenues of 200 million . 'Skyfall ' was also the most successful James Bond movie worldwide in terms of revenue , having made over 1.1 billion U.S. dollars globally after its release in 2015 .
gold_template: This statistic provides information on the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] in templateTitleSubject[0] as of templateTitleDate[0] . The templateTitle[2] templateTitle[3] film with the templateTitle[0] domestic box office templateYLabel[0] was 'Skyfall ' _ , having made over templateYValue[max] templateScale templateYLabel[3] at the templateTitleSubject[0] American box office , followed by 'Spectre ' with revenues of templateYValue[1] templateScale . 'Skyfall ' was also the most successful templateTitle[2] templateTitle[3] movie worldwide in terms of templateYLabel[0] , having made over 1.1 templateScale templateYLabel[2] templateYLabel[3] globally after its release in 2015 .

generated_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] competirion . \\n From the chart we see that the templateXValue[4] templateXLabel[0] made the templateTitle[0] templateYLabel[1] by some margin , with only templateYValue[min] . templateXValue[1] and templateXValue[0] made a respectable templateYValue[1] and templateYValue[0] templateYLabel[1] , with templateXValue[last] and templateXValue[3] not far behind , at templateYValue[last] and templateYValue[3] respectively .
generated: This chart shows the Highest grossing James in the Bond competirion .  \\n From the chart we see that the Die_Another_Day_(2002) Month made the Highest million by some margin , with only 67.9 Spectre_(2015) and Skyfall_(2012) made a respectable 200.07 and 304.36 million , with Octopussy_(1983) and Casino_Royale_(2006) not far behind , at 67.9 and 167.37 respectively .

Example 478:
titleEntities: {'Subject': ['United Kingdom', 'UK'], 'Date': ['2014']}
title: Beauty products : Buying behavior of shoppers in the United Kingdom ( UK ) 2014
X_Axis['Type', 'Of', 'Behaviors']: ['Research_online_and_buy_in-store', 'Shop_with_friends', "Seek_friends'_opinions_before_heading_to_the_shops", "Use_Facebook_to_'check-in'_to_a_store", "Use_Instagram_Facebook_or_Twitter_to_recommend_what_you've_bought"]
Y_Axis['Percentage', 'of', 'respondents']: ['25', '9', '6', '4', '3']

gold: This statistic shows the buying behavior of shoppers in the United Kingdom when purchasing beauty products , according to a survey published March 2014 . Of respondents , 25 percent said they researched products online before buying in store , where as 3 percent of people use instagram , twitter or other forms of social media to give recommendations to the customer . Online sales have seen the highest market sales growth in the beauty and cosmetics industry , with the high street falling behind , with a growth of only 1.2 percent .
gold_template: This statistic shows the templateTitle[2] templateTitle[3] of templateTitle[4] in the templateTitleSubject[0] when purchasing templateTitle[0] templateTitle[1] , according to a survey published templateTitleDate[0] . Of templateYLabel[1] , templateYValue[max] templateScale said they researched templateTitle[1] templateXValue[0] templateXValue[2] templateTitle[2] in templateXValue[3] , where as templateYValue[min] templateScale of people templateXValue[3] templateXValue[last] , templateXValue[last] or other forms of social media to give recommendations to the customer . templateXValue[0] sales have seen the highest market sales growth in the templateTitle[0] and cosmetics industry , templateXValue[1] the high street templateNegativeTrend behind , templateXValue[1] a growth of only 1.2 templateScale .

generated_template: This chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] from templateXValue[0] - templateXValue[last] . \\n In templateXValue[0] the templateTitleSubject[0] saw templateYValue[0] templateYLabel[1] , in templateXValue[1] there were templateYValue[max] templateTitleSubject[0] , templateXValue[2] saw at least templateYValue[2] , templateYValue[min] .
generated: This chart shows the Percentage of respondents at the United Kingdom from Research_online_and_buy_in-store - Use_Instagram_Facebook_or_Twitter_to_recommend_what_you've_bought .  \\n In Research_online_and_buy_in-store the United Kingdom saw 25 respondents , in Shop_with_friends there were 25 United Kingdom , Seek_friends'_opinions_before_heading_to_the_shops saw at least 6 , 3 .

Example 479:
titleEntities: {'Subject': ['Net'], 'Date': ['2019']}
title: Net worth of the richest internet billionaires 2019
X_Axis['Month']: ['Jeff_Bezos_Amazon', 'Mark_Zuckerberg_Facebook', 'Larry_Page_Google', 'Sergey_Brin_Google', 'Ma_Huateng_Tencent', 'Jack_Ma_Alibaba', 'William_Ding_Netease', 'Colin_Huang_Pinduoduo', 'Zhang_Zhidong_Tencent', 'Eric_Schmidt_Google', 'Pierre_Omidyar_eBay', 'Dustin_Moskovitz_Facebook', 'Eduardo_Saverin_Facebook', 'Jan_Koum_WhatsApp', 'Robin_Li_Baidu', 'Joseph_Tsai_Alibaba', 'Kim_Jung-Ju_Nexon', 'Richard_Liu_JD.com', 'Andreas_von_Bechtolsheim_Google', 'David_Cheriton_Google']
Y_Axis['Net', 'worth', 'in', 'billion', 'U.S.', 'dollars']: ['131.0', '62.3', '50.8', '49.8', '38.8', '37.3', '14.7', '13.5', '13.3', '12.9', '11.4', '11.1', '9.7', '9.6', '9.6', '9.5', '6.5', '6.0', '6.4', '5.8']

gold: The ranking of the richest billionaires who earned their fortune in the internet business is headed by Amazon founder Jeff Bezos , who is sitting in first place with a personal net worth of 131 billion U.S. dollars . Facebook founder Mark Zuckerberg was ranked second with 62.3 billion U.S. dollars . Both Bezos and Zuckerberg are also featured in the top 5 ranking of the richest Americans of 2019 .
gold_template: The ranking of the templateTitle[2] templateTitle[4] who earned their fortune in the templateTitle[3] business is headed by templateXValue[0] founder templateXValue[0] , who is sitting in first place with a personal templateYLabel[0] templateYLabel[1] of templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] . templateXValue[1] founder templateXValue[1] was ranked second with templateYValue[1] templateScale templateYLabel[3] templateYLabel[4] . Both templateXValue[0] and templateXValue[1] are also featured in the top 5 ranking of the templateTitle[2] Americans of templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Net worth in Net .  It shows Larry_Page_Google was the Net at just 5.8 degrees and Ma_Huateng_Tencent was the warmest at 131.0 degrees .  After Larry_Page_Google , the next Net worth are Jeff_Bezos_Amazon at 131.0 degrees , followed by David_Cheriton_Google at 18 degrees , Mark_Zuckerberg_Facebook at 62.3 degrees and then Sergey_Brin_Google at 49.8 degrees .

Example 480:
titleEntities: {'Subject': ['Countries'], 'Date': ['2018']}
title: Countries with the highest military spending in 2018
X_Axis['Country']: ['USA', 'China', 'Saudi_Arabia', 'India', 'France', 'Russia', 'United_Kingdom', 'Germany', 'Japan', 'South_Korea', 'Brazil', 'Italy', 'Australia', 'Canada', 'Turkey']
Y_Axis['Military', 'spending', 'in', 'billion', 'U.S.', 'dollars']: ['649.0', '250.0', '67.6', '66.5', '63.8', '61.4', '50.0', '49.5', '46.6', '43.1', '27.8', '27.8', '26.7', '21.6', '19.0']

gold: This statistic ranks the 15 countries with the highest military spending in 2018 . With defense spending totaling USD 649 billion , the USA ranked first . Worldwide leaders in military spending The United States lead the globe in military spending in 2018 .
gold_template: This statistic ranks the 15 templateTitleSubject[0] templateTitle[1] the templateTitle[2] templateYLabel[0] templateYLabel[1] in templateTitleDate[0] . templateTitle[1] defense templateYLabel[1] totaling USD templateYValue[max] templateScale , the templateXValue[0] ranked first . Worldwide leaders in templateYLabel[0] templateYLabel[1] The templateXValue[6] States lead the globe in templateYLabel[0] templateYLabel[1] in templateTitleDate[0] .

generated_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . It shows templateXValue[2] was the templateTitle[0] at just templateYValue[min] degrees and templateXValue[4] was the warmest at templateYValue[max] degrees . After templateXValue[2] , the next templateTitle[0] templateTitle[1] are templateXValue[0] at templateYValue[0] degrees , followed by templateXValue[last] at 18 degrees , templateXValue[1] at templateYValue[1] degrees and then templateXValue[3] at templateYValue[3] degrees .
generated: This chart shows the Countries highest in Countries .  It shows Saudi_Arabia was the Countries at just 19.0 degrees and France was the warmest at 649.0 degrees .  After Saudi_Arabia , the next Countries highest are USA at 649.0 degrees , followed by Turkey at 18 degrees , China at 250.0 degrees and then India at 66.5 degrees .

