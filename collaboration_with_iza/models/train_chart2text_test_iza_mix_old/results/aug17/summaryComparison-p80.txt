Example 1:
titleEntities: {'Subject': ['Germany'], 'Date': ['2017']}
title: Gender pay gap in Germany in 2017
X_Axis['Country']: ['Germany', 'Spain', 'UK']
Y_Axis['Percentage']: ['21.0', '15.1', '20.5']

gold: The chart shows the gender pay gap , expressed in percentage in three different countries . The UK and Germany have similar gender pay gaps at around 20 % whilst Spain is doing a little better at 15 % .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] , expressed in templateScale in three different countries . The templateXValue[last] and templateXValue[0] have similar templateTitle[0] templateTitle[1] gaps at around 20 templateScale whilst templateXValue[1] is doing a little better at templateYValue[min] templateScale .

generated_template: This statistic shows the templateTitle[2] of templateTitleSubject[0] templateYLabel[1] templateTitle[4] region as of the end of the 2014/15 financial year . templateTitleSubject[0] had a total of templateYValue[max] templateYLabel[1] situated in the templateXValue[0] and an additional 87 templateYLabel[1] and templateXValue[1] spread worldwide . templateTitleSubject[0] is a British retailer selling clothing , furniture and other household items in a department templateTitle[1] format .
generated: This statistic shows the gap of Germany Percentage 2017 region as of the end of the 2014/15 financial year .  Germany had a total of 21.0 Percentage situated in the Germany and an additional 87 Percentage and Spain spread worldwide .  Germany is a British retailer selling clothing , furniture and other household items in a department pay format .

Example 2:
titleEntities: {'Subject': ['Germany'], 'Date': ['2017']}
title: Gender pay gap in Germany in 2017
X_Axis['Country']: ['Germany', 'Spain', 'UK']
Y_Axis['Percentage']: ['21.0', '15.1', '20.5']

gold: By the figures on the graph we can see that Germany had the biggest gender pay gap in 2017 with a gap of 21 % . The UK has a 20.5 % gap and spain with the smallest gap of 15 % .
gold_template: By the figures on the graph we can see that templateXValue[0] had the biggest templateTitle[0] templateTitle[1] templateTitle[2] in templateTitleDate[0] with a templateTitle[2] of templateYValue[max] templateScale . The templateXValue[last] has a templateYValue[last] templateScale templateTitle[2] and templateXValue[1] with the smallest templateTitle[2] of templateYValue[min] templateScale .

generated_template: This statistic shows the templateTitle[2] of templateTitleSubject[0] templateYLabel[1] templateTitle[4] region as of the end of the 2014/15 financial year . templateTitleSubject[0] had a total of templateYValue[max] templateYLabel[1] situated in the templateXValue[0] and an additional 87 templateYLabel[1] and templateXValue[1] spread worldwide . templateTitleSubject[0] is a British retailer selling clothing , furniture and other household items in a department templateTitle[1] format .
generated: This statistic shows the gap of Germany Percentage 2017 region as of the end of the 2014/15 financial year .  Germany had a total of 21.0 Percentage situated in the Germany and an additional 87 Percentage and Spain spread worldwide .  Germany is a British retailer selling clothing , furniture and other household items in a department pay format .

Example 3:
titleEntities: {'Subject': ['Salary Women Per Year'], 'Date': []}
title: Median Salary of Women Per Year
X_Axis['Year']: ['2000', '2005', '2010', '2015']
Y_Axis['Salary', '1000']: ['40', '45', '50', '55']

gold: This graph shows how the median salary of women has changed over time . This is done by looking every half decade from the year 2000 to 2015 . $ 40 000 - 2000 \\n $ 42 000 - 2005 \\n $ 50 000 - 2010 \\n $ 52 000 - 2015
gold_template: This graph shows how the templateTitle[0] templateYLabel[0] of templateTitleSubject[0] has changed over time . This is done by looking every half decade from the templateXLabel[0] templateXValue[0] to templateXValue[last] . $ templateYValue[min] 000 - templateXValue[idxmin(Y)] \\n $ 42 000 - templateXValue[1] \\n $ templateYValue[2] 000 - templateXValue[2] \\n $ 52 000 - templateXValue[last]

generated_template: This statistic shows the monthly wages of templateTitle[2] templateTitle[3] in templateYLabel[2] templateTitleSubject[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , a templateTitle[2] soldier of templateXValue[0] , the lowest templateXLabel[1] during the compulsory templateXLabel[0] service , is paid approximately templateYValue[min] thousand templateYLabel[2] templateYLabel[3] templateYLabel[4] per month .
generated: This statistic shows the monthly wages of Women Per in 1000 Salary Women Per Year in , Year .  In , a Women soldier of 2000 , the lowest Year during the compulsory Year service , is paid approximately 40 thousand 1000 per month .

Example 4:
titleEntities: {'Subject': ['Salary Women Per Year'], 'Date': []}
title: Median Salary of Women Per Year
X_Axis['Year']: ['2000', '2005', '2010', '2015']
Y_Axis['Salary', '1000']: ['40', '45', '50', '55']

gold: 2015 saw women median pay rise to 53 k , from 50 k in 2010 . 2005 it was at 45 k from 40 k in 2000 , so you can see it has been rising steadily
gold_template: templateXValue[last] saw templateTitleSubject[0] templateTitle[0] pay rise to 53 k , from templateYValue[2] k in templateXValue[2] . templateXValue[1] it was at templateYValue[1] k from templateYValue[min] k in templateXValue[idxmin(Y)] , so you can see it has been templatePositiveTrend steadily

generated_template: This statistic shows the monthly wages of templateTitle[2] templateTitle[3] in templateYLabel[2] templateTitleSubject[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , a templateTitle[2] soldier of templateXValue[0] , the lowest templateXLabel[1] during the compulsory templateXLabel[0] service , is paid approximately templateYValue[min] thousand templateYLabel[2] templateYLabel[3] templateYLabel[4] per month .
generated: This statistic shows the monthly wages of Women Per in 1000 Salary Women Per Year in , Year .  In , a Women soldier of 2000 , the lowest Year during the compulsory Year service , is paid approximately 40 thousand 1000 per month .

Example 5:
titleEntities: {'Subject': ['Najaf Per Year'], 'Date': []}
title: Median Salary of Women in Najaf Per Year
X_Axis['Year']: ['2000', '2005', '2010', '2015']
Y_Axis['Salary', 'Thousand', 'Pounds']: ['22.7', '25.65', '19.7', '16.0']

gold: The median salary of women in Najaf per 5 years started fairly high in the table in the year 2000 and showed its highest in 2005 being £ 26 ,000 . Over the next 10 years the salary soon dropped to a shocking £ 16 ,000 by 2015 .
gold_template: The templateTitle[0] templateYLabel[0] of templateTitle[2] in templateTitleSubject[0] templateTitle[4] 5 years started fairly high in the table in the templateXLabel[0] templateXValue[0] and showed its highest in templateXValue[1] being £ templateYValue[max] ,000 . Over the next 10 years the templateYLabel[0] soon templateNegativeTrend to a shocking £ templateYValue[min] ,000 by templateXValue[idxmin(Y)] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateXLabel[0] in templateTitleSubject[0] templateTitle[4] templateTitle[5] templateTitle[6] templateTitle[7] ( templateYLabel[2] ) in templateTitleDate[0] , templateTitle[7] templateXLabel[0] . In that year , templateXValue[0] had an templateYLabel[0] of templateYValue[max] templateScale , the highest among the referenced templateTitleSubject[0] templateTitle[4] .
generated: This statistic shows the Salary of Year in Najaf Per Year Per Year ( Pounds ) in , Year .  In that year , 2000 had an Salary of 25.65 thousand , the highest among the referenced Najaf Per Year Per .

Example 6:
titleEntities: {'Subject': ['Najaf Per Year'], 'Date': []}
title: Median Salary of Women in Najaf Per Year
X_Axis['Year']: ['2000', '2005', '2010', '2015']
Y_Axis['Salary', 'Thousand', 'Pounds']: ['22.7', '25.65', '19.7', '16.0']

gold: The bar chart shows the median salary of women in Najar per year over a 4 year period . In 2000 the median salary was approximately £ 22.5 k . In 2005 the median salary was just under £ 26 k .
gold_template: The bar chart shows the templateTitle[0] templateYLabel[0] of templateTitle[2] in Najar templateTitle[4] templateXLabel[0] over a 4 templateXLabel[0] period . In templateXValue[0] the templateTitle[0] templateYLabel[0] was approximately £ 22.5 k . In templateXValue[1] the templateTitle[0] templateYLabel[0] was just under £ templateYValue[max] k .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateXLabel[0] in templateTitleSubject[0] templateTitle[4] templateTitle[5] templateTitle[6] templateTitle[7] ( templateYLabel[2] ) in templateTitleDate[0] , templateTitle[7] templateXLabel[0] . In that year , templateXValue[0] had an templateYLabel[0] of templateYValue[max] templateScale , the highest among the referenced templateTitleSubject[0] templateTitle[4] .
generated: This statistic shows the Salary of Year in Najaf Per Year Per Year ( Pounds ) in , Year .  In that year , 2000 had an Salary of 25.65 thousand , the highest among the referenced Najaf Per Year Per .

Example 7:
titleEntities: {'Subject': ['Young People Spend Evenings'], 'Date': []}
title: How do Young People Spend their Evenings
X_Axis['type']: ['Watching_TV', 'Spend_Time_With_Family', 'Reading_a_Book', 'Going_Out']
Y_Axis['Percentage', 'of', 'People']: ['40', '20', '10', '30']

gold: 40 % of young people spend their evenings watching tv , 30 % prefer to go out , 20 % spend time with family and only 10 % choose to spend time reading a book in the evenings
gold_template: templateYValue[max] templateScale of templateTitleSubject[0] templateYLabel[1] templateXValue[1] templateTitle[5] templateTitleSubject[0] templateXValue[0] , templateYValue[last] templateScale prefer to go templateXValue[last] , templateYValue[1] templateScale templateXValue[1] and only templateYValue[min] templateScale choose to templateXValue[1] templateXValue[2] a templateXValue[2] in the templateTitleSubject[0]

generated_template: This statistic shows the templateYLabel[0] templateYLabel[1] of the templateTitle[2] at the templateXValue[0] of a templateXLabel[1] in the templateTitleSubject[0] in templateTitleDate[0] , according to whether it is the templateTitle[2] 's first , second , third , or fourth templateXLabel[1] . It reveals that in templateTitleDate[0] women in the templateTitleSubject[0] on templateYLabel[0] were templateYValue[min] years old when they had their first templateXLabel[1] . If they had a second templateXLabel[1] , on templateYLabel[0] it came a little over two years later , when they were templateYValue[1] years old .
generated: This statistic shows the Percentage People of the Young at the Watching_TV of a type in the Young People Spend Evenings in , according to whether it is the Young 's first , second third , or fourth type .  It reveals that in women in the Young People Spend Evenings on Percentage were 10 years old when they had their first type .  If they had a second type , on Percentage it came a little over two years later , when they were 20 years old .

Example 8:
titleEntities: {'Subject': ['Young People Spend Evenings'], 'Date': []}
title: How do Young People Spend their Evenings
X_Axis['type']: ['Watching_TV', 'Spend_Time_With_Family', 'Reading_a_Book', 'Going_Out']
Y_Axis['Percentage', 'of', 'People']: ['40', '20', '10', '30']

gold: Watching TV is how 40 % young people spend their evenings , 30 % go out , 20 % spend time with family and 10 % read a book
gold_template: templateXValue[0] is templateTitle[0] templateYValue[max] templateScale templateTitleSubject[0] templateYLabel[1] templateXValue[1] templateTitle[5] templateTitleSubject[0] , templateYValue[last] templateScale go templateXValue[last] , templateYValue[1] templateScale templateXValue[1] and templateYValue[min] templateScale read a templateXValue[2]

generated_template: This statistic shows the templateYLabel[0] templateYLabel[1] of the templateTitle[2] at the templateXValue[0] of a templateXLabel[1] in the templateTitleSubject[0] in templateTitleDate[0] , according to whether it is the templateTitle[2] 's first , second , third , or fourth templateXLabel[1] . It reveals that in templateTitleDate[0] women in the templateTitleSubject[0] on templateYLabel[0] were templateYValue[min] years old when they had their first templateXLabel[1] . If they had a second templateXLabel[1] , on templateYLabel[0] it came a little over two years later , when they were templateYValue[1] years old .
generated: This statistic shows the Percentage People of the Young at the Watching_TV of a type in the Young People Spend Evenings in , according to whether it is the Young 's first , second third , or fourth type .  It reveals that in women in the Young People Spend Evenings on Percentage were 10 years old when they had their first type .  If they had a second type , on Percentage it came a little over two years later , when they were 20 years old .

Example 9:
titleEntities: {'Subject': ['Young People Zarqa Spend Evenings'], 'Date': []}
title: How Young People in Zarqa Spend their Evenings
X_Axis['Activity']: ['Watching_TV', 'Spend_Time_With_Family', 'Reading_a_Book', 'Going_Out']
Y_Axis['Percentage', 'of', 'People']: ['12', '32', '38', '18']

gold: The young people of Zarqua spend the majority of their evenings reading a book and spending time with their families . On the chart this has been represented as a percentage of young people at a given time . 32 % choose to spend time with family whereas 38 % choose to read .
gold_template: The templateTitleSubject[0] templateYLabel[1] of Zarqua templateXValue[1] the majority of templateTitle[5] templateTitleSubject[0] templateXValue[2] a templateXValue[2] and spending templateXValue[1] templateTitle[5] families . On the chart this has been represented as a templateScale of templateTitleSubject[0] templateYLabel[1] at a given templateXValue[1] . templateYValue[1] templateScale choose to templateXValue[1] whereas templateYValue[max] templateScale choose to read .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] in the templateTitle[0] in templateTitleDate[0] , sorted templateTitle[5] templateTitle[6] templateTitle[7] . In templateTitleDate[0] , about templateYValue[1] templateScale of the templateTitleSubject[0] templateTitle[2] in the templateTitle[1] were templateXValue[2] templateTitle[5] templateXValue[2] and templateXValue[2] . There were a total of 1,780 commercial templateTitleSubject[0] templateTitle[2] in the templateTitle[3] in 2015 , a slight templatePositiveTrend from the 1,753 in 2005 .
generated: This statistic shows the Percentage of Young People in the How in , sorted their Evenings .  In , about 32 percentage of the Young People Zarqa Spend Evenings People in the Young were Reading_a_Book their and Reading_a_Book .  There were a total of 1,780 commercial Young People Zarqa Spend Evenings People in the Zarqa in 2015 , a slight increase from the 1,753 in 2005 .

Example 10:
titleEntities: {'Subject': ['Young People Zarqa Spend Evenings'], 'Date': []}
title: How Young People in Zarqa Spend their Evenings
X_Axis['Activity']: ['Watching_TV', 'Spend_Time_With_Family', 'Reading_a_Book', 'Going_Out']
Y_Axis['Percentage', 'of', 'People']: ['12', '32', '38', '18']

gold: This chart shows that the majority of people in Zarqa prefer reading a book in an evening . Although this would suggest they may prefer solitude , interestingly , they do not like watching TV with only 12 % stating that as their chosen way to pass the time .
gold_template: This chart shows that the majority of templateYLabel[1] in templateTitleSubject[0] prefer templateXValue[2] a templateXValue[2] in an evening . Although this would suggest they prefer solitude , interestingly , they do not like templateXValue[0] templateXValue[1] only templateYValue[min] templateScale stating that as templateTitle[5] chosen way to pass the templateXValue[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] in the templateTitle[0] in templateTitleDate[0] , sorted templateTitle[5] templateTitle[6] templateTitle[7] . In templateTitleDate[0] , about templateYValue[1] templateScale of the templateTitleSubject[0] templateTitle[2] in the templateTitle[1] were templateXValue[2] templateTitle[5] templateXValue[2] and templateXValue[2] . There were a total of 1,780 commercial templateTitleSubject[0] templateTitle[2] in the templateTitle[3] in 2015 , a slight templatePositiveTrend from the 1,753 in 2005 .
generated: This statistic shows the Percentage of Young People in the How in , sorted their Evenings .  In , about 32 percentage of the Young People Zarqa Spend Evenings People in the Young were Reading_a_Book their and Reading_a_Book .  There were a total of 1,780 commercial Young People Zarqa Spend Evenings People in the Zarqa in 2015 , a slight increase from the 1,753 in 2005 .

Example 11:
titleEntities: {'Subject': ['Asia'], 'Date': ['2010']}
title: Money spent on higher education in Asia in 2010
X_Axis['Continent']: ['North_America', 'Europe', 'Asia', 'Africa']
Y_Axis['Million', 'Pounds']: ['200', '100', '320', '50']

gold: The chart compares money spent in millions of pounds on different continents During 2010 , Africa spent only £ 50 million , being the least and Asia spent £ 310 million , being the most
gold_template: The chart compares templateTitle[0] templateTitle[1] in templateScale of templateYLabel[1] on different continents During templateTitleDate[0] , templateXValue[last] templateTitle[1] only £ templateYValue[min] templateScale , being the least and templateXValue[2] templateTitle[1] £ 310 templateScale , being the most

generated_template: This statistic shows the templateYLabel[0] templateYLabel[1] of the templateTitle[2] at the templateXValue[0] of a templateXLabel[1] in the templateTitleSubject[0] in templateTitleDate[0] , according to whether it is the templateTitle[2] 's first , second , third , or fourth templateXLabel[1] . It reveals that in templateTitleDate[0] women in the templateTitleSubject[0] on templateYLabel[0] were templateYValue[min] years old when they had their first templateXLabel[1] . If they had a second templateXLabel[1] , on templateYLabel[0] it came a little over two years later , when they were templateYValue[1] years old .
generated: This statistic shows the Million Pounds of the higher at the North_America of a Continent in the Asia in 2010 , according to whether it is the higher 's first , second third , or fourth Continent .  It reveals that in 2010 women in the Asia on Million were 50 years old when they had their first Continent .  If they had a second Continent , on Million it came a little over two years later , when they were 100 years old .

Example 12:
titleEntities: {'Subject': ['Asia'], 'Date': ['2010']}
title: Money spent on higher education in Asia in 2010
X_Axis['Continent']: ['North_America', 'Europe', 'Asia', 'Africa']
Y_Axis['Million', 'Pounds']: ['200', '100', '320', '50']

gold: This graph explores the money spent on higher education in Asia in 2010 . The amount is in millions pounds . Asia spent £ 320 m which is 3 x more than europes total of £ 100 m .
gold_template: This graph explores the templateTitle[0] templateTitle[1] on templateTitle[2] templateTitle[3] in templateXValue[2] in templateTitleDate[0] . The amount is in templateScale templateYLabel[1] . templateXValue[2] templateTitle[1] £ templateYValue[max] m which is 3 x more than europes total of £ templateYValue[1] m .

generated_template: This statistic shows the templateYLabel[0] templateYLabel[1] of the templateTitle[2] at the templateXValue[0] of a templateXLabel[1] in the templateTitleSubject[0] in templateTitleDate[0] , according to whether it is the templateTitle[2] 's first , second , third , or fourth templateXLabel[1] . It reveals that in templateTitleDate[0] women in the templateTitleSubject[0] on templateYLabel[0] were templateYValue[min] years old when they had their first templateXLabel[1] . If they had a second templateXLabel[1] , on templateYLabel[0] it came a little over two years later , when they were templateYValue[1] years old .
generated: This statistic shows the Million Pounds of the higher at the North_America of a Continent in the Asia in 2010 , according to whether it is the higher 's first , second third , or fourth Continent .  It reveals that in 2010 women in the Asia on Million were 50 years old when they had their first Continent .  If they had a second Continent , on Million it came a little over two years later , when they were 100 years old .

Example 13:
titleEntities: {'Subject': ['Obesity'], 'Date': []}
title: What causes Obesity
X_Axis['type']: ['Fast_Food', 'Genetic', 'Lack_of_Exercises']
Y_Axis['Percentage']: ['60', '30', '10']

gold: This graph shows what causes obesity or is a factor in someone becoming obese . 60 % Fast food \\n 30 % Genetic \\n 10 % Lack of Exercises
gold_template: This graph shows templateTitle[0] templateTitle[1] templateTitleSubject[0] or is a factor in someone becoming obese . templateYValue[max] templateScale templateXValue[0] \\n templateYValue[1] templateScale templateXValue[1] \\n templateYValue[min] templateScale templateXValue[last] of templateXValue[last]

generated_template: This statistic shows the results of a survey , conducted by Gallup in the templateTitle[7] in templateTitleDate[0] , on templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] . During this survey , templateYValue[max] templateScale of the templateYLabel[1] were in favor of templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] in the templateTitle[7] .
generated: This statistic shows the results of a survey , conducted by Gallup in the Obesity in , on Obesity gay and lesbian Obesity .  During this survey , 60 percentage of the Percentage were in favor of Obesity gay and lesbian Obesity in the Obesity .

Example 14:
titleEntities: {'Subject': ['Obesity'], 'Date': []}
title: What causes Obesity
X_Axis['type']: ['Fast_Food', 'Genetic', 'Lack_of_Exercises']
Y_Axis['Percentage']: ['60', '30', '10']

gold: Fast food causes 60 % of obesity , genetic predisposition some 30 % whilst lack of exercise contributes the other 10 %
gold_template: templateXValue[0] templateTitle[1] templateYValue[max] templateScale of templateTitleSubject[0] , templateXValue[1] predisposition some templateYValue[1] templateScale whilst templateXValue[last] of exercise contributes the other templateYValue[min] templateScale

generated_template: This statistic shows the results of a survey , conducted by Gallup in the templateTitle[7] in templateTitleDate[0] , on templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] . During this survey , templateYValue[max] templateScale of the templateYLabel[1] were in favor of templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] in the templateTitle[7] .
generated: This statistic shows the results of a survey , conducted by Gallup in the Obesity in , on Obesity gay and lesbian Obesity .  During this survey , 60 percentage of the Percentage were in favor of Obesity gay and lesbian Obesity in the Obesity .

Example 15:
titleEntities: {'Subject': ['Kiribati'], 'Date': []}
title: What causes Obesity in Kiribati
X_Axis['Cause']: ['Fast_Food', 'Genetic', 'Lack_of_Exercise']
Y_Axis['Percentage']: ['24.3', '40.1', '35.6']

gold: The causes of obesity in Kiribati are charted above to show that the predominant cause of obesity was found to be genetic at 40 % . Fast food was the lowest charted percentage at 24 % with lack of exercise only contributing 35 % towards the outcome .
gold_template: The templateTitle[1] of templateTitle[2] in templateTitleSubject[0] are charted above to show that the predominant templateXLabel[0] of templateTitle[2] was found to be templateXValue[1] at templateYValue[max] templateScale . templateXValue[0] was the lowest charted templateScale at templateYValue[min] templateScale with templateXValue[last] of templateXValue[last] only contributing 35 templateScale towards the outcome .

generated_template: This statistic shows the results of a survey , conducted by Gallup in the templateTitle[7] in templateTitleDate[0] , on templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] . During this survey , templateYValue[max] templateScale of the templateYLabel[1] were in favor of templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] in the templateTitle[7] .
generated: This statistic shows the results of a survey , conducted by Gallup in the Kiribati in , on Obesity Kiribati gay and lesbian Kiribati .  During this survey , 40.1 percentage of the Percentage were in favor of Obesity Kiribati gay and lesbian Kiribati in the Kiribati .

Example 16:
titleEntities: {'Subject': ['Kiribati'], 'Date': []}
title: What causes Obesity in Kiribati
X_Axis['Cause']: ['Fast_Food', 'Genetic', 'Lack_of_Exercise']
Y_Axis['Percentage']: ['24.3', '40.1', '35.6']

gold: This chart indicates three possible causes of obesity in the Kiribati population . It indicates the main cause of obesity was attributed to genetic cause with 40 % of the sample identifying that as the main reason . Only 25 % indicated fast food contributed to the problem .
gold_template: This chart indicates three possible templateTitle[1] of templateTitle[2] in the templateTitleSubject[0] population . It indicates the main templateXLabel[0] of templateTitle[2] was attributed to templateXValue[1] templateXLabel[0] with templateYValue[max] templateScale of the sample identifying that as the main reason . Only 25 templateScale indicated templateXValue[0] contributed to the problem .

generated_template: This statistic shows the results of a survey , conducted by Gallup in the templateTitle[7] in templateTitleDate[0] , on templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] . During this survey , templateYValue[max] templateScale of the templateYLabel[1] were in favor of templateTitle[2] templateTitle[3] templateTitle[4] gay and lesbian templateTitle[6] in the templateTitle[7] .
generated: This statistic shows the results of a survey , conducted by Gallup in the Kiribati in , on Obesity Kiribati gay and lesbian Kiribati .  During this survey , 40.1 percentage of the Percentage were in favor of Obesity Kiribati gay and lesbian Kiribati in the Kiribati .

Example 17:
titleEntities: {'Subject': ['Students'], 'Date': []}
title: What do Students choose to study ?
X_Axis['Deparment']: ['STEM', 'Literature', 'Philosophy', 'Medicine']
Y_Axis['Percentage']: ['50', '20', '10', '20']

gold: This graph shows the percentage of students who choose to study in four different departments . 50 % - STEM \\n 20 % - Literature \\n 10 % - Philosophy \\n 20 % - Medicine
gold_template: This graph shows the templateScale of templateTitleSubject[0] who templateTitle[3] to templateTitle[4] in four different departments . templateYValue[max] templateScale - templateXValue[0] \\n templateYValue[last] templateScale - templateXValue[1] \\n templateYValue[min] templateScale - templateXValue[2] \\n templateYValue[last] templateScale - templateXValue[last]

generated_template: This statistic shows the templateTitle[0] of templateTitle[1] templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] of templateTitle[9] . There were approximately templateYValue[max] templateScale templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] .
generated: This statistic shows the What of do Students choose the study to STEM in , ? Deparment of ? .  There were approximately 50 percentage Students choose the study to STEM in .

Example 18:
titleEntities: {'Subject': ['Students'], 'Date': []}
title: What do Students choose to study ?
X_Axis['Deparment']: ['STEM', 'Literature', 'Philosophy', 'Medicine']
Y_Axis['Percentage']: ['50', '20', '10', '20']

gold: Most students choose STEM subjects at 50 % whilst Literature and Medicine only attract 20 % , and philosophy is least popular at 10 % .
gold_template: Most templateTitleSubject[0] templateTitle[3] templateXValue[0] subjects at templateYValue[max] templateScale whilst templateXValue[1] and templateXValue[last] only attract templateYValue[last] templateScale , and templateXValue[2] is least popular at templateYValue[min] templateScale .

generated_template: This statistic shows the templateTitle[0] of templateTitle[1] templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] of templateTitle[9] . There were approximately templateYValue[max] templateScale templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] .
generated: This statistic shows the What of do Students choose the study to STEM in , ? Deparment of ? .  There were approximately 50 percentage Students choose the study to STEM in .

Example 19:
titleEntities: {'Subject': ['Lagos State University'], 'Date': []}
title: What Students at Lagos State University choose to study
X_Axis['Course', 'of', 'Study']: ['STEM', 'Literature', 'Philosophy', 'Medicine']
Y_Axis['Percentage']: ['15', '24', '30', '31']

gold: What the students at Lagos State University choose to study have been fairly equal with STEM being the lowest at 15 % and medicine being the highest at 31 % with the other course of studies being in between them .
gold_template: templateTitle[0] the templateTitle[1] at templateTitleSubject[0] templateTitle[5] to templateXLabel[1] have been fairly equal with templateXValue[0] being the lowest at templateYValue[min] templateScale and templateXValue[last] being the highest at templateYValue[max] templateScale with the other templateXLabel[0] of studies being in between them .

generated_template: This statistic shows the templateTitle[0] of templateTitle[1] templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] of templateTitle[9] . There were approximately templateYValue[max] templateScale templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] .
generated: This statistic shows the What of Students Lagos State the University to STEM in , study Course of study .  There were approximately 31 percentage Lagos State the University to STEM in .

Example 20:
titleEntities: {'Subject': ['Lagos State University'], 'Date': []}
title: What Students at Lagos State University choose to study
X_Axis['Course', 'of', 'Study']: ['STEM', 'Literature', 'Philosophy', 'Medicine']
Y_Axis['Percentage']: ['15', '24', '30', '31']

gold: The bar chart shows the percentage of students showing particular subjects at Lagos State University . There were 15 % choosing STEM subjects , approximately 24 % choosing Literature and 30 % choosing Philosophy . Roughly 31 % of students chose to study medicine .
gold_template: The bar chart shows the templateScale of templateTitle[1] showing particular subjects at templateTitleSubject[0] . There were templateYValue[min] templateScale choosing templateXValue[0] subjects , approximately templateYValue[1] templateScale choosing templateXValue[1] and templateYValue[2] templateScale choosing templateXValue[2] . Roughly templateYValue[max] templateScale of templateTitle[1] chose to templateXLabel[1] templateXValue[last] .

generated_template: This statistic shows the templateTitle[0] of templateTitle[1] templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] , templateTitle[7] templateXLabel[0] of templateTitle[9] . There were approximately templateYValue[max] templateScale templateTitle[2] templateTitle[3] the templateTitle[4] to templateXValue[0] in templateTitleDate[0] .
generated: This statistic shows the What of Students Lagos State the University to STEM in , study Course of study .  There were approximately 31 percentage Lagos State the University to STEM in .

Example 21:
titleEntities: {'Subject': ['Women'], 'Date': []}
title: Women representation in the literature department
X_Axis['Department']: ['Computer_Science', 'Arts', 'Mathematics', 'Literature', 'Engineering']
Y_Axis['Percentage']: ['60', '32', '55', '23', '70']

gold: The following graph show the percentage representation of women in the literature department . Engineering has the most representation at 70 % . Literature has the lowest percent representation at 22 % .
gold_template: The following graph show the templateScale templateTitle[1] of templateTitleSubject[0] in the templateXValue[3] templateXLabel[0] . templateXValue[last] has the most templateTitle[1] at templateYValue[max] templateScale . templateXValue[3] has the lowest templateScale templateTitle[1] at 22 templateScale .

generated_template: This statistic shows the templateTitle[0] of templateTitle[1] templateTitle[2] templateTitle[3] in templateTitleSubject[0] in templateTitleDate[0] , templateTitle[8] demographic group . Among templateXValue[1] templateYLabel[1] , templateYValue[1] templateScale reported regularly visiting templateTitle[1] templateTitle[3] or blogs as of templateTitle[6] templateTitleDate[0] .
generated: This statistic shows the Women of representation literature department in Women , department demographic group .  Among Arts Percentage , 32 percentage reported regularly visiting representation department or blogs as of department .

Example 22:
titleEntities: {'Subject': ['Women'], 'Date': []}
title: Women representation in the literature department
X_Axis['Department']: ['Computer_Science', 'Arts', 'Mathematics', 'Literature', 'Engineering']
Y_Axis['Percentage']: ['60', '32', '55', '23', '70']

gold: This graph displays women representation in the literature department as a % , comparing the female representation to four other departments ( Arts , Computer Science , Mathematics and Engineering ) . In Literature , women represent 22 % of the department . Comparing this to other departments ( 32 % for Arts , 55 % for Mathematics , 60 % for Computer Science and 70 % for Engineering ) , the Literature department has the least female representation .
gold_template: This graph displays templateTitleSubject[0] templateTitle[1] in the templateXValue[3] templateXLabel[0] as a templateScale , comparing the female templateTitle[1] to four other departments ( templateXValue[1] , templateXValue[0] , templateXValue[2] and templateXValue[last] ) . In templateXValue[3] , templateTitleSubject[0] represent 22 templateScale of the templateXLabel[0] . Comparing this to other departments ( templateYValue[1] templateScale for templateXValue[1] , templateYValue[2] templateScale for templateXValue[2] , templateYValue[0] templateScale for templateXValue[0] and templateYValue[max] templateScale for templateXValue[last] ) , the templateXValue[3] templateXLabel[0] has the least female templateTitle[1] .

generated_template: This statistic shows the templateTitle[0] of templateTitle[1] templateTitle[2] templateTitle[3] in templateTitleSubject[0] in templateTitleDate[0] , templateTitle[8] demographic group . Among templateXValue[1] templateYLabel[1] , templateYValue[1] templateScale reported regularly visiting templateTitle[1] templateTitle[3] or blogs as of templateTitle[6] templateTitleDate[0] .
generated: This statistic shows the Women of representation literature department in Women , department demographic group .  Among Arts Percentage , 32 percentage reported regularly visiting representation department or blogs as of department .

Example 23:
titleEntities: {'Subject': ['Women'], 'Date': []}
title: Women representation in law firms
X_Axis['Sector']: ['Financial_Groups', 'Tech', 'Insurance', 'Law_Firms']
Y_Axis['Percentage']: ['50', '62', '65', '35']

gold: The chart compares the percentage of female representation across different sectors . Whilst insurance and tech sectors are leading the charge at over 60 % , law firms are farther behind around 35 % .
gold_template: The chart compares the templateScale of female templateTitle[1] across different sectors . Whilst templateXValue[2] and templateXValue[1] sectors are leading the charge at over 60 templateScale , templateXValue[last] are farther behind around templateYValue[min] templateScale .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] in the templateTitle[0] in templateTitleDate[0] , sorted templateTitle[5] templateTitle[6] templateTitle[7] . According to the source , templateYValue[max] templateScale of female students in the templateTitleSubject[0] were templateTitle[5] templateTitle[6] as of 2013 . There were a total of 1,780 commercial templateTitleSubject[0] templateTitle[2] in the templateTitle[3] in 2015 , a slight templatePositiveTrend from the 1,753 in 2005 .
generated: This statistic shows the Percentage of representation law in the Women in , sorted firms .  According to the source , 65 percentage of female students in the Women were firms as of 2013 .  There were a total of 1,780 commercial Women law in the firms in 2015 , a slight increase from the 1,753 in 2005 .

Example 24:
titleEntities: {'Subject': ['Women'], 'Date': []}
title: Women representation in law firms
X_Axis['Sector']: ['Financial_Groups', 'Tech', 'Insurance', 'Law_Firms']
Y_Axis['Percentage']: ['50', '62', '65', '35']

gold: The graph shows the representation of woman in different sectors . This shows that women are less likely to be employed by law firms than financial groups , tech and insurance .
gold_template: The graph shows the templateTitle[1] of woman in different sectors . This shows that templateTitleSubject[0] are less likely to be employed by templateXValue[last] than templateXValue[0] , templateXValue[1] and templateXValue[2] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] in the templateTitle[0] in templateTitleDate[0] , sorted templateTitle[5] templateTitle[6] templateTitle[7] . According to the source , templateYValue[max] templateScale of female students in the templateTitleSubject[0] were templateTitle[5] templateTitle[6] as of 2013 . There were a total of 1,780 commercial templateTitleSubject[0] templateTitle[2] in the templateTitle[3] in 2015 , a slight templatePositiveTrend from the 1,753 in 2005 .
generated: This statistic shows the Percentage of representation law in the Women in , sorted firms .  According to the source , 65 percentage of female students in the Women were firms as of 2013 .  There were a total of 1,780 commercial Women law in the firms in 2015 , a slight increase from the 1,753 in 2005 .

Example 25:
titleEntities: {'Subject': ['Akef'], 'Date': []}
title: Closing stock prices for Akef Inc. on Wednesday
X_Axis['Day', 'of', 'the', 'Week']: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri']
Y_Axis['Closing', 'Stock', 'Price']: ['51.4', '62.0', '74.38', '21.9', '9.42']

gold: The chart shows the closing stock prices for AKEF inc on different days of the week . Monday saw a stock price of £ 51 . Tuesday and Wednesday saw a rise to £ 74 .
gold_template: The chart shows the templateYLabel[0] templateYLabel[1] templateTitle[2] templateTitle[3] templateTitleSubject[0] inc on different days of the templateXLabel[1] . Monday saw a templateYLabel[1] templateYLabel[2] of £ templateYValue[0] . Tuesday and templateTitle[6] saw a rise to £ templateYValue[max] .

generated_template: This statistic shows the templateYLabel[0] templateYLabel[1] of templateYLabel[2] of templateTitleSubject[0] worldwide in templateTitleDate[0] , templateTitle[5] templateXLabel[0] templateXLabel[1] . In that year , templateYValue[max] templateScale of templateTitleSubject[0] 's templateTitle[1] templateYLabel[1] templateYLabel[2] came from templateXValue[0] . Founded in 1961 in Agordo , Italy , the templateTitleSubject[0] Group S.p.A. is the templateXValue[last] 's largest eyewear company .
generated: This statistic shows the Closing Stock of Price Akef worldwide in , Inc. Day Week .  In that year , 74.38 % of Akef 's stock Price came from Mon .  Founded in 1961 Agordo , Italy the Akef Group S.p.A. is the Fri 's largest eyewear company .

Example 26:
titleEntities: {'Subject': ['Akef'], 'Date': []}
title: Closing stock prices for Akef Inc. on Wednesday
X_Axis['Day', 'of', 'the', 'Week']: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri']
Y_Axis['Closing', 'Stock', 'Price']: ['51.4', '62.0', '74.38', '21.9', '9.42']

gold: This graph compares the closing stock prices in GBP for Akef Inc on different days of the week . The highest closing stock price is on a Wednesday which is around 74 pound . The lowest closing stock price is on a friday with the price being around 10 pound .
gold_template: This graph compares the templateYLabel[0] templateYLabel[1] templateTitle[2] in GBP templateTitle[3] templateTitleSubject[0] Inc on different days of the templateXLabel[1] . The highest templateYLabel[0] templateYLabel[1] templateYLabel[2] is on a templateTitle[6] which is around templateYValue[max] pound . The lowest templateYLabel[0] templateYLabel[1] templateYLabel[2] is on a friday with the templateYLabel[2] being around 10 pound .

generated_template: This statistic shows the templateYLabel[0] templateYLabel[1] of templateYLabel[2] of templateTitleSubject[0] worldwide in templateTitleDate[0] , templateTitle[5] templateXLabel[0] templateXLabel[1] . In that year , templateYValue[max] templateScale of templateTitleSubject[0] 's templateTitle[1] templateYLabel[1] templateYLabel[2] came from templateXValue[0] . Founded in 1961 in Agordo , Italy , the templateTitleSubject[0] Group S.p.A. is the templateXValue[last] 's largest eyewear company .
generated: This statistic shows the Closing Stock of Price Akef worldwide in , Inc. Day Week .  In that year , 74.38 % of Akef 's stock Price came from Mon .  Founded in 1961 Agordo , Italy the Akef Group S.p.A. is the Fri 's largest eyewear company .

Example 27:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This chart shows the distribution of social media usage among different age groups . By far the highest usage is among the 45 - 54 age group at 150 minutes . The 15 - 24 age group is some way behind , followed by the 55 - 64 age group .
gold_template: This chart shows the distribution of templateTitle[4] templateTitle[5] usage among different templateXLabel[0] groups . By far the highest usage is among the 45 - 54 templateXLabel[0] templateXLabel[1] at templateYValue[max] templateYLabel[0] . The 15 - 24 templateXLabel[0] templateXLabel[1] is some way behind , followed by the 55 - 64 templateXLabel[0] templateXLabel[1] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 28:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This chart shows on average how many minutes different age groups use social media . It shows that 45 - 54 year olds use it the most with 150 minutes followed by 15 - 24 year olds with 123 minutes , then 55 - 64 with 110 minutes and the using it the least amount of time were 25 - 34 and 35 - 44 year olds with 77 minutes .
gold_template: This chart shows on average how many templateYLabel[0] different templateXLabel[0] groups use templateTitle[4] templateTitle[5] . It shows that 45 - 54 year olds use it the templateTitle[0] with templateYValue[max] templateYLabel[0] followed by 15 - 24 year olds with 123 templateYLabel[0] , then 55 - 64 with templateYValue[last] templateYLabel[0] and the using it the least amount of time were 25 - 34 and 35 - 44 year olds with 77 templateYLabel[0] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 29:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The graph shows that people aged between 45 - 54 spend approximately 152 minutes on social media per day . The next highest figure is people aged 15 - 24 who spend around 124 minutes each day . Those aged 25 - 34 and 35 - 44 spend a similar amount of time on social media per day , 76 minutes and 72 minutes respectively .
gold_template: The graph shows that people aged between 45 - 54 spend approximately 152 templateYLabel[0] on templateTitle[4] templateTitle[5] per day . The next highest figure is people aged 15 - 24 who spend around 124 templateYLabel[0] each day . Those aged 25 - 34 and 35 - 44 spend a similar amount of time on templateTitle[4] templateTitle[5] per day , 76 templateYLabel[0] and 72 templateYLabel[0] respectively .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 30:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This chart shows how many minutes different age groups use social media each day . \\n It shows the youngest group of 15 - 24 year olds use social media for 124 minutes a day , which decreases sharply for the next age group of 25 - 34 year olds who only use it for 77 minutes a day . This is almost the same as those in the 35 - 44 year olds who use is for one minute less at 76 minutes a day .
gold_template: This chart shows how many templateYLabel[0] different templateXLabel[0] groups use templateTitle[4] templateTitle[5] each day . \\n It shows the youngest templateXLabel[1] of 15 - 24 year olds use templateTitle[4] templateTitle[5] for 124 templateYLabel[0] a day , which decreases sharply for the next templateXLabel[0] templateXLabel[1] of 25 - 34 year olds who only use it for 77 templateYLabel[0] a day . This is almost the same as those in the 35 - 44 year olds who use is for one minute less at 76 templateYLabel[0] a day .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 31:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The chart shows the number of minutes people in equlised age ranges use social media . 45 - 54 year olds use social media the most at 150 minutes followed by 15 - 24 year old at about 123 minutes then the oldest group 55 - 64 year olds 115 minutes followed by the 25 - 34 and 35 - 44 group equally at about 70 minutes . \\n The lower end is expected but the upper end of the age range seems odd at first glance .
gold_template: The chart shows the number of templateYLabel[0] people in equlised templateXLabel[0] ranges use templateTitle[4] templateTitle[5] . 45 - 54 year olds use templateTitle[4] templateTitle[5] the templateTitle[0] at templateYValue[max] templateYLabel[0] followed by 15 - 24 year old at about 123 templateYLabel[0] then the oldest templateXLabel[1] 55 - 64 year olds 115 templateYLabel[0] followed by the 25 - 34 and 35 - 44 templateXLabel[1] equally at about 70 templateYLabel[0] . \\n The lower end is expected but the upper end of the templateXLabel[0] range seems odd at first glance .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 32:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The chart shows what age groups are most likely to use social media on a daily basis . The most frequent daily users of social media were those in the 45 - 54 age group at a rate of over 140 minutes a day . The second biggest daily users were those in the 15 - 24 age category at a little over 120 minutes per day , followed by the oldest group of 55 - 64 who used social media for over 100 minutes a day .
gold_template: The chart shows what templateXLabel[0] groups are templateTitle[0] likely to use templateTitle[4] templateTitle[5] on a templateTitle[2] basis . The templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] were those in the 45 - 54 templateXLabel[0] templateXLabel[1] at a rate of over 140 templateYLabel[0] a day . The second biggest templateTitle[2] templateTitle[3] were those in the 15 - 24 templateXLabel[0] category at a little over 120 templateYLabel[0] per day , followed by the oldest templateXLabel[1] of 55 - 64 who used templateTitle[4] templateTitle[5] for over 100 templateYLabel[0] a day .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 33:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The age group 45 - 54 are the most frequent daily users of social media with an average time of around 150 minutes . Age group 15 - 24 is the next most frequent user while age groups 25 - 34 & 35 - 44 are the least frequent user
gold_template: The templateXLabel[0] templateXLabel[1] 45 - 54 are the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] with an average time of around templateYValue[max] templateYLabel[0] . templateXLabel[0] templateXLabel[1] 15 - 24 is the next templateTitle[0] templateTitle[1] user while templateXLabel[0] groups 25 - 34 & 35 - 44 are the least templateTitle[1] user

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 34:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This bar graph shows the most frequent daily users of social media by various age groups by time in minutes . The highest was the age bracket 45 - 54 at 150 minutes . Followed by the 15 - 24 age bracket which has a total of 124 minutes .
gold_template: This bar graph shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] by various templateXLabel[0] groups by time in templateYLabel[0] . The highest was the templateXLabel[0] bracket 45 - 54 at templateYValue[max] templateYLabel[0] . Followed by the 15 - 24 templateXLabel[0] bracket which has a total of 124 templateYLabel[0] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 35:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The chart shows the most frequent daily users of social media by age group . The most frequent users of social media are 45 - 54 year olds with 150 minutes of daily use , closely followed by 15 - 24 year olds with 125 minutes of daily use . In third place is 55 - 64 year olds with 110 minutes of daily use , and finally both 25 - 34 and 35 - 44 age groups spend roughly 75 minutes a day on social media
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] by templateXLabel[0] templateXLabel[1] . The templateTitle[0] templateTitle[1] templateTitle[3] of templateTitle[4] templateTitle[5] are 45 - 54 year olds with templateYValue[max] templateYLabel[0] of templateTitle[2] use , closely followed by 15 - 24 year olds with templateYValue[0] templateYLabel[0] of templateTitle[2] use . In third place is 55 - 64 year olds with templateYValue[last] templateYLabel[0] of templateTitle[2] use , and finally both 25 - 34 and 35 - 44 templateXLabel[0] groups spend roughly templateYValue[1] templateYLabel[0] a day on templateTitle[4] templateTitle[5]

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 36:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: Surprisingly research shows that the age group 45 - 54 were the most frequently daily users of social media clocking up an average of 150 minutes per day followed closely by the 15 - 24 year olds at just over 120 minutes a day \\n Next were the 55 - 64 year olds with an average of 110 with the lowest users overall tying at 70 minutes were 25 - 34 and 34 - 44 year olds .
gold_template: Surprisingly research shows that the templateXLabel[0] templateXLabel[1] 45 - 54 were the templateTitle[0] frequently templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] clocking up an average of templateYValue[max] templateYLabel[0] per day followed closely by the 15 - 24 year olds at just over 120 templateYLabel[0] a day \\n Next were the 55 - 64 year olds with an average of templateYValue[last] with the lowest templateTitle[3] overall tying at 70 templateYLabel[0] were 25 - 34 and 34 - 44 year olds .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 37:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: People aged 45 - 54 and 15 - 24 are the most frequent daily users of social media where they spend 148 and 124 daily minutes surfing . People aged 25 - 34 and 35 - 44 are the least frequent users with 72 daily minutes .
gold_template: People aged 45 - 54 and 15 - 24 are the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] where they spend 148 and 124 templateTitle[2] templateYLabel[0] surfing . People aged 25 - 34 and 35 - 44 are the least templateTitle[1] templateTitle[3] with 72 templateTitle[2] templateYLabel[0] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 38:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The age group who spent the most time online and represents the most frequent users are the cohort aged 45 - 54 . The least frequent were the ages 25 - 34 and 35 - 44 , both spending less than 80 minutes daily on social media . The youngest group , aged between 15 and 24 spent more than 120 minutes online whilst the oldest spent around 110 minutes using social media
gold_template: The templateXLabel[0] templateXLabel[1] who spent the templateTitle[0] time online and represents the templateTitle[0] templateTitle[1] templateTitle[3] are the cohort aged 45 - 54 . The least templateTitle[1] were the ages 25 - 34 and 35 - 44 , both spending less than 80 templateYLabel[0] templateTitle[2] on templateTitle[4] templateTitle[5] . The youngest templateXLabel[1] , aged between 15 and 24 spent more than 120 templateYLabel[0] online whilst the oldest spent around templateYValue[last] templateYLabel[0] using templateTitle[4] templateTitle[5]

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 39:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This graph is showing the most frequent social media users by age bracket . On average it shows that people in both 25 - 34 and 35 - 44 age groups use social media the same amount at less than 80 minutes ; A large jump to 55 - 64 year olds who average around 110 minutes , 15 - 24 year olds average just about 120 minutes and the highest and most surprising number , at 150 minute is 45 - 54 year olds .
gold_template: This graph is showing the templateTitle[0] templateTitle[1] templateTitle[4] templateTitle[5] templateTitle[3] by templateXLabel[0] bracket . On average it shows that people in both 25 - 34 and 35 - 44 templateXLabel[0] groups use templateTitle[4] templateTitle[5] the same amount at less than 80 templateYLabel[0] ; A large jump to 55 - 64 year olds who average around templateYValue[last] templateYLabel[0] , 15 - 24 year olds average just about 120 templateYLabel[0] and the highest and templateTitle[0] surprising number , at templateYValue[max] minute is 45 - 54 year olds .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 40:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The age group 45 - 54 was found to be the most frequent daily users of social media , spending approximately 150 minutes per day on social media platforms . The least frequent users were the age groups 25 - 34 and 35 - 44 , with 35 - 44 spending approximately 70 minutes on social media per day and the age group 25 - 34 spending slightly longer , at 75 minutes per day .
gold_template: The templateXLabel[0] templateXLabel[1] 45 - 54 was found to be the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] , spending approximately templateYValue[max] templateYLabel[0] per day on templateTitle[4] templateTitle[5] platforms . The least templateTitle[1] templateTitle[3] were the templateXLabel[0] groups 25 - 34 and 35 - 44 , with 35 - 44 spending approximately 70 templateYLabel[0] on templateTitle[4] templateTitle[5] per day and the templateXLabel[0] templateXLabel[1] 25 - 34 spending slightly longer , at templateYValue[1] templateYLabel[0] per day .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 41:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: Users aged 45 - 54 are the most frequrnt daily users of social media at 150 minutes , followed by 15 - 24 year olds at 124 minutes . 55 - 64 year olds come next with 110 minutes , while 25 - 34 year olds and 35 - 44 year olds the lowest users at 75 - 80 minutes each .
gold_template: templateTitle[3] aged 45 - 54 are the templateTitle[0] frequrnt templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] at templateYValue[max] templateYLabel[0] , followed by 15 - 24 year olds at 124 templateYLabel[0] . 55 - 64 year olds come next with templateYValue[last] templateYLabel[0] , while 25 - 34 year olds and 35 - 44 year olds the lowest templateTitle[3] at templateYValue[1] - 80 templateYLabel[0] each .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 42:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This chart shows which age groups are the most frequent users of social media . The highest using group is the age range 45 - 54 who use social media for 148 minutes a day . The second highest group is 15 - 24 year olds who register 124 minutes a day .
gold_template: This chart shows which templateXLabel[0] groups are the templateTitle[0] templateTitle[1] templateTitle[3] of templateTitle[4] templateTitle[5] . The highest using templateXLabel[1] is the templateXLabel[0] range 45 - 54 who use templateTitle[4] templateTitle[5] for 148 templateYLabel[0] a day . The second highest templateXLabel[1] is 15 - 24 year olds who register 124 templateYLabel[0] a day .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 43:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The graph details the most frequent daily users of social media , by looking at how long various age ranges spend using it . We do not how whether the time given is per day or per week . The graph tells us that 45 - 54 year olds use Social Media the most , with around 2½ hours usage .
gold_template: The graph details the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] , by looking at how long various templateXLabel[0] ranges spend using it . We do not how whether the time given is per day or per week . The graph tells us that 45 - 54 year olds use templateTitle[4] templateTitle[5] the templateTitle[0] , with around 2½ hours usage .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 44:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This chart shows the number of minutes spent using social media by age group per day . \\n The age group 45 - 54 spend the most amount of time on social media spending 150 minutes , they are followed by the age group 15 - 24 who spend 122 minutes , they are then closely followed by the age group 55 - 64 who spend 110 minutes . Age groups 25 - 34 and 35 - 44 spend approximately the same amount of time on social media at 75 minutes .
gold_template: This chart shows the number of templateYLabel[0] spent using templateTitle[4] templateTitle[5] by templateXLabel[0] templateXLabel[1] per day . \\n The templateXLabel[0] templateXLabel[1] 45 - 54 spend the templateTitle[0] amount of time on templateTitle[4] templateTitle[5] spending templateYValue[max] templateYLabel[0] , they are followed by the templateXLabel[0] templateXLabel[1] 15 - 24 who spend 122 templateYLabel[0] , they are then closely followed by the templateXLabel[0] templateXLabel[1] 55 - 64 who spend templateYValue[last] templateYLabel[0] . templateXLabel[0] groups 25 - 34 and 35 - 44 spend approximately the same amount of time on templateTitle[4] templateTitle[5] at templateYValue[1] templateYLabel[0] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 45:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The most frequent daily users according to this chart are the age group 45 - 54 , with around 150 minutes usage per day . The second age group is the 15 - 24 's , who frequent social media sites just over 120 minutes a day . The least frequent users we can see from this chart are the 25s-34 ' s , along with the 35 ' s - 44 ' s .
gold_template: The templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] according to this chart are the templateXLabel[0] templateXLabel[1] 45 - 54 , with around templateYValue[max] templateYLabel[0] usage per day . The second templateXLabel[0] templateXLabel[1] is the 15 - 24 's , who templateTitle[1] templateTitle[4] templateTitle[5] sites just over 120 templateYLabel[0] a day . The least templateTitle[1] templateTitle[3] we can see from this chart are the 25s-34 ' s , along with the 35 ' s - 44 ' s .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 46:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The graph compares the daily minutes spent on social media by users from 5 ages groups . The overall age range is from 15 to 64 years . Users aged 45 - 54 are the most frequent daily users with an average of 150 minutes spent on social media .
gold_template: The graph compares the templateTitle[2] templateYLabel[0] spent on templateTitle[4] templateTitle[5] by templateTitle[3] from 5 ages groups . The overall templateXLabel[0] range is from 15 to 64 years . templateTitle[3] aged 45 - 54 are the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] with an average of templateYValue[max] templateYLabel[0] spent on templateTitle[4] templateTitle[5] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 47:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The most frequent daily users of social media are between ages 45 - 54 with a 150 minutes average daily . The least amount is ages 35 - 44 with an average of 70 minutes daily . Ages 15 - 24 were second highest with just over 120 minutes daily and then ages 55 - 64 with 110 minutes .
gold_template: The templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] are between ages 45 - 54 with a templateYValue[max] templateYLabel[0] average templateTitle[2] . The least amount is ages 35 - 44 with an average of 70 templateYLabel[0] templateTitle[2] . Ages 15 - 24 were second highest with just over 120 templateYLabel[0] templateTitle[2] and then ages 55 - 64 with templateYValue[last] templateYLabel[0] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 48:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: The following graph shows the most frequent users of social media by age group . 45 - 54 year olds come in top at 152 minutes a day . 25 - 34 and 35 - 44 year olds use social media the least at 76 minutes a day each .
gold_template: The following graph shows the templateTitle[0] templateTitle[1] templateTitle[3] of templateTitle[4] templateTitle[5] by templateXLabel[0] templateXLabel[1] . 45 - 54 year olds come in top at 152 templateYLabel[0] a day . 25 - 34 and 35 - 44 year olds use templateTitle[4] templateTitle[5] the least at 76 templateYLabel[0] a day each .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 49:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most frequent daily users of social media
X_Axis['Age', 'Group']: ['15-24', '25-34', '35-44', '45-54', '55-64']
Y_Axis['Minutes']: ['125', '75', '74', '150', '110']

gold: This graph compares the most frequent daily users of social media by minutes ( y axis ) with age groups ( x axis ) . 45 - 54 year olds spend the most amount of time on social media out of the 5 age groups , with an average of 150 minutes . 15 - 24 year olds spend the second most amount of time on social media , with an average of 124 minutes .
gold_template: This graph compares the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] of templateTitle[4] templateTitle[5] by templateYLabel[0] ( y axis ) with templateXLabel[0] groups ( x axis ) . 45 - 54 year olds spend the templateTitle[0] amount of time on templateTitle[4] templateTitle[5] out of the 5 templateXLabel[0] groups , with an average of templateYValue[max] templateYLabel[0] . 15 - 24 year olds spend the second templateTitle[0] amount of time on templateTitle[4] templateTitle[5] , with an average of 124 templateYLabel[0] .

generated_template: This statistic displays the templateTitle[0] templateTitle[1] templateYLabel[0] templateYLabel[1] in templateTitleSubject[0] from templateTitleDate[min] to templateTitleDate[max] , templateTitle[7] templateXLabel[0] templateXLabel[1] . In the four year period of investigation templateXValue[2] aged between 11 and 18 templateXValue[0] old had the highest templateTitle[0] templateTitle[1] templateYLabel[1] of templateYLabel[0] with templateYValue[max] templateYLabel[2] of templateTitle[1] templateYLabel[0] in their diet . The dietary templateYLabel[1] of templateYLabel[0] for templateXValue[0] in this templateXLabel[0] bracket was 15.4 templateScale of total energy templateYLabel[1] .
generated: This statistic displays the most frequent Minutes in The from to , media Age Group .  In the four year period of investigation 35-44 aged between 11 and 18 15-24 old had the highest most frequent Minutes of with 150 Minutes of frequent Minutes in their diet .  The dietary Minutes of for 15-24 in this Age bracket was 15.4 % of total energy Minutes .

Example 50:
titleEntities: {'Subject': ['Fatal Injuries Pula Steel Factory'], 'Date': []}
title: Number of Fatal Injuries at the Pula Steel Factory
X_Axis['Year']: ['2012', '2013', '2014', '2015', '2016']
Y_Axis['Number', 'of', 'Fatal', 'Injuries']: ['27', '32', '26', '22', '25']

gold: We can see from the chart the fatal injuries sustained at the Pula Steel Factory between 2012 and 2016 . The number of fatalities grew from 27 in 2012 to 32 in 2013 . Thereafter , there has been a decline over the years down to 22 in 2015 .
gold_template: We can see from the chart the templateYLabel[1] templateYLabel[2] sustained at the templateTitleSubject[0] between templateXValue[0] and templateXValue[last] . The templateYLabel[0] of fatalities templatePositiveTrend from templateYValue[0] in templateXValue[0] to templateYValue[max] in templateXValue[idxmax(Y)] . Thereafter , there has been a decline over the years down to templateYValue[min] in templateXValue[idxmin(Y)] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] , by type . In that year , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] templateTitle[1] in the country .
generated: This statistic shows the Number of Fatal in Pula and provincial Steel in Fatal Injuries Pula Steel Factory Factory , by type .  In that year , there were Pula 32 active 2013 Number Fatal in the country .

Example 51:
titleEntities: {'Subject': ['Fatal Injuries Pula Steel Factory'], 'Date': []}
title: Number of Fatal Injuries at the Pula Steel Factory
X_Axis['Year']: ['2012', '2013', '2014', '2015', '2016']
Y_Axis['Number', 'of', 'Fatal', 'Injuries']: ['27', '32', '26', '22', '25']

gold: This shows the fluctuation of fatal injuries over a 5 year period . It indicates a downward trend in fatalities between 2013 and 2015 although this came to an end in 2016 . The most fatalities were recorded in 2013 .
gold_template: This shows the fluctuation of templateYLabel[1] templateYLabel[2] over a 5 templateXLabel[0] period . It indicates a downward trend in fatalities between templateXValue[1] and templateXValue[3] although this came to an end in templateXValue[last] . The most fatalities were recorded in templateXValue[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] , by type . In that year , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] templateTitle[1] in the country .
generated: This statistic shows the Number of Fatal in Pula and provincial Steel in Fatal Injuries Pula Steel Factory Factory , by type .  In that year , there were Pula 32 active 2013 Number Fatal in the country .

Example 52:
titleEntities: {'Subject': ['Fatal Injuries Pula Steel Factory'], 'Date': []}
title: Number of Fatal Injuries at the Pula Steel Factory
X_Axis['Year']: ['2012', '2013', '2014', '2015', '2016']
Y_Axis['Number', 'of', 'Fatal', 'Injuries']: ['30', '25', '16', '15', '12']

gold: The number of fatal injuries at the Pula Steel Factory showed a decrease over time . Its highest recorded point being in 2012 where there were 30 fatal injuries recorded . As time went on , the number dropped significantly having 13 fatal injuries recorded in 2016 .
gold_template: The templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] showed a templateNegativeTrend over time . Its highest recorded point being in templateXValue[0] where there were templateYValue[max] templateYLabel[1] templateYLabel[2] recorded . As time went on , the templateYLabel[0] templateNegativeTrend significantly having 13 templateYLabel[1] templateYLabel[2] recorded in templateXValue[last] .

generated_template: This statistic shows the templateScale of templateYLabel[0] templateYLabel[1] in the templateTitleSubject[0] in templateTitleDate[0] , sorted templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateYValue[max] templateScale of total templateYLabel[1] in the templateTitleSubject[0] .
generated: This statistic shows the percentage of Number Fatal in the Fatal Injuries Pula Steel Factory in , sorted Factory Year .  In , there were 30 % of total Fatal in the Fatal Injuries Pula Steel Factory .

Example 53:
titleEntities: {'Subject': ['Fatal Injuries Pula Steel Factory'], 'Date': []}
title: Number of Fatal Injuries at the Pula Steel Factory
X_Axis['Year']: ['2012', '2013', '2014', '2015', '2016']
Y_Axis['Number', 'of', 'Fatal', 'Injuries']: ['30', '25', '16', '15', '12']

gold: The bar chart shows the number of fatal injuries at the Pula Steel Factory . It shows that over a 5 year period , the number of fatal injuries got progressively lower . In 2012 there were 30 fatal injuries .
gold_template: The bar chart shows the templateYLabel[0] of templateYLabel[1] templateYLabel[2] at the templateTitleSubject[0] . It shows that over a 5 templateXLabel[0] period , the templateYLabel[0] of templateYLabel[1] templateYLabel[2] got progressively lower . In templateXValue[0] there were templateYValue[max] templateYLabel[1] templateYLabel[2] .

generated_template: This statistic shows the templateScale of templateYLabel[0] templateYLabel[1] in the templateTitleSubject[0] in templateTitleDate[0] , sorted templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateYValue[max] templateScale of total templateYLabel[1] in the templateTitleSubject[0] .
generated: This statistic shows the percentage of Number Fatal in the Fatal Injuries Pula Steel Factory in , sorted Factory Year .  In , there were 30 % of total Fatal in the Fatal Injuries Pula Steel Factory .

Example 54:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows minority representation in Lybia Parliament , across each four year parliament , from 1990 to 2019 . The percentage climbs as the years go on , with 0.5 % in 1990 - 1994 , 2 % in 1995 - 1999 , 7.5 % in 2000 - 2004 , 10 % in 2005 - 2009 , 12.7 % in 2010 - 2014 and then 14 % in 2015 - 2019 .
gold_template: This chart shows templateTitle[0] templateTitle[1] in templateTitleSubject[0] , across each four year templateTitleSubject[0] , from 1990 to 2019 . The templateScale climbs as the templateXLabel[0] go on , with templateYValue[min] templateScale in 1990 - 1994 , templateYValue[1] templateScale in 1995 - 1999 , templateYValue[2] templateScale in 2000 - 2004 , templateYValue[3] templateScale in 2005 - 2009 , templateYValue[4] templateScale in 2010 - 2014 and then templateYValue[max] templateScale in 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 55:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Bar chart showing the increase in percentage of minority representation in the Parliament of Lybia . \\n \\n Minority representation increases every 4 years - just 0.2 % in the period of 1990 - 1994 , increasing to 14 % in 2015 - 2019
gold_template: Bar chart showing the templatePositiveTrend in templateScale of templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of templateTitleSubject[0] . \\n templateTitle[0] templateTitle[1] increases every 4 templateXLabel[0] - just 0.2 templateScale in the period of 1990 - 1994 , templatePositiveTrend to templateYValue[max] templateScale in 2015 - 2019

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 56:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The graph shows the percentage of the Lybian Parliament consisting on minority group members , from 1990 to 2019 , displayed in 5 year increments . Between 1990 - 1994 only .4 % of parliament represented minorities , increasing to roughly 2 % between 1995 - 1999 . The percentage rose again roughly 7.5 % , then to 10 % by the end of 2009 .
gold_template: The graph shows the templateScale of the Lybian templateTitleSubject[0] consisting on templateTitle[0] group members , from 1990 to 2019 , displayed in 5 year increments . Between 1990 - 1994 only .4 templateScale of templateTitleSubject[0] represented minorities , templatePositiveTrend to roughly templateYValue[1] templateScale between 1995 - 1999 . The templateScale templatePositiveTrend again roughly templateYValue[2] templateScale , then to templateYValue[3] templateScale by the end of 2009 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 57:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The graph shows the proportion of the Libyan parliament that is made up of minorities , across periods of 5 years starting from 1990 , up to 2019 . \\n The graph shows a steady increase in minority representation , going from 1 % minority members of parliament between 1990 - 94 , to 14 in the 2015 - 19 time period .
gold_template: The graph shows the proportion of the Libyan templateTitleSubject[0] that is made up of minorities , across periods of 5 templateXLabel[0] starting from 1990 , up to 2019 . \\n The graph shows a steady templatePositiveTrend in templateTitle[0] templateTitle[1] , going from templateYValue[min] templateScale templateTitle[0] members of templateTitleSubject[0] between 1990 - 94 , to templateYValue[max] in the 2015 - 19 time period .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 58:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the percentage of minority representation in the parliament of Libya every 4 years between 1990 and 2019 . \\n \\n The chart shows that an increase of minority representation over this period . Between 1990 and 1994 , minority representation was at its lowest at under 2 % ( 0.25 % ) .
gold_template: This chart shows the templateScale of templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of Libya every 4 templateXLabel[0] between 1990 and 2019 . \\n The chart shows that an templatePositiveTrend of templateTitle[0] templateTitle[1] over this period . Between 1990 and 1994 , templateTitle[0] templateTitle[1] was at its lowest at under templateYValue[1] templateScale ( 0.25 templateScale ) .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 59:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows that there has been an increase in the percentage of minority representation in the parliament of Lybia from 1990 to 2019 . \\n \\n It has increased from < 2 % in 1990 - 1994 to 14 % in 2015 - 2019 .
gold_template: This chart shows that there has been an templatePositiveTrend in the templateScale of templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of templateTitleSubject[0] from 1990 to 2019 . \\n It has templatePositiveTrend from < templateYValue[1] templateScale in 1990 - 1994 to templateYValue[max] templateScale in 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 60:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Between 1990 and 1994 the Parliament of Lybia had less than 1 % of minorities represented . Between 1995 and 1999 this increased to slightly more than 2 % . Between 2000 and 2004 minorities had more than 7 % representation .
gold_template: Between 1990 and 1994 the templateTitleSubject[0] of templateTitleSubject[0] had less than templateYValue[min] templateScale of minorities represented . Between 1995 and 1999 this templatePositiveTrend to slightly more than templateYValue[1] templateScale . Between 2000 and 2004 minorities had more than 7 templateScale templateTitle[1] .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 61:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the steady incline of minority representation in the Lybian parliament from a lowly 2 % in during the 1990 - 1994 parliament , rising to an eventual 14 % in the 2015 - 2019 parliament .
gold_template: This chart shows the steady incline of templateTitle[0] templateTitle[1] in the Lybian templateTitleSubject[0] from a lowly templateYValue[1] templateScale in during the 1990 - 1994 templateTitleSubject[0] , templatePositiveTrend to an eventual templateYValue[max] templateScale in the 2015 - 2019 templateTitleSubject[0] .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 62:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Minority representation in Lybia 's parliament has increased from a fraction of 1 % in 1990 - 1994 to around 14 % in 2015 - 2019 . During the previous four-year periods it increased steadily , with the biggest step being from under 3 % to nearly 8 % in 2000 - 1004 .
gold_template: templateTitle[0] templateTitle[1] in templateTitleSubject[0] 's templateTitleSubject[0] has templatePositiveTrend from a fraction of templateYValue[min] templateScale in 1990 - 1994 to around templateYValue[max] templateScale in 2015 - 2019 . During the previous four-year periods it templatePositiveTrend steadily , with the biggest step being from under 3 templateScale to nearly templateYValue[2] templateScale in 2000 - 1004 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 63:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This graph shows the representation of minority groups in Lybian Parliament over the last 30 years . \\n Over the period of 30 years representation has increased from 0.5 % up to 15 % in 2019 . \\n Between 1990 - 1994 parliament to the 1995 - 1999 parliament the representation increased from 0.5 % to just over 2 % , more than than quadruple .
gold_template: This graph shows the templateTitle[1] of templateTitle[0] groups in Lybian templateTitleSubject[0] over the last 30 templateXLabel[0] . \\n Over the period of 30 templateXLabel[0] templateTitle[1] has templatePositiveTrend from templateYValue[min] templateScale up to 15 templateScale in 2019 . \\n Between 1990 - 1994 templateTitleSubject[0] to the 1995 - 1999 templateTitleSubject[0] the templateTitle[1] templatePositiveTrend from templateYValue[min] templateScale to just over templateYValue[1] templateScale , more than quadruple .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 64:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Minority representation in the parliament of Libya has drastically increased from 1990 to 2019 . In 1990 - 1994 it was at just 0.4 % , but this has increased over the years to now be 14 % in 2015 - 2019 .
gold_template: templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of Libya has drastically templatePositiveTrend from 1990 to 2019 . In 1990 - 1994 it was at just 0.4 templateScale , but this has templatePositiveTrend over the templateXLabel[0] to now be templateYValue[max] templateScale in 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 65:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the representation of minorities in the parliament of Lybia since 1990 to 2019 . \\n In the years 1990 to 1994 there were 0.2 % of minorities , in 1995 to 1999 there were 2 % of minorities , 2000 to 2004 there were 7.2 % of minorities , 2005 to 2009 there were 10 % of minorities , 2010 to 2014 there were 12.4 % of minorities , 2015 to 2019 there were 14 % of minorities . Over the years there is an explicit scene of an increase in percentage .
gold_template: This chart shows the templateTitle[1] of minorities in the templateTitleSubject[0] of templateTitleSubject[0] since 1990 to 2019 . \\n In the templateXLabel[0] 1990 to 1994 there were 0.2 templateScale of minorities , in 1995 to 1999 there were templateYValue[1] templateScale of minorities , 2000 to 2004 there were 7.2 templateScale of minorities , 2005 to 2009 there were templateYValue[3] templateScale of minorities , 2010 to 2014 there were 12.4 templateScale of minorities , 2015 to 2019 there were templateYValue[max] templateScale of minorities . Over the templateXLabel[0] there is an explicit scene of an templatePositiveTrend in templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 66:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Minority representation in the parliament of lybia is highest in 2015 - 2019 at over 14 % . It more than doubled from 1995 from 2 % to 7 % in 2000 - 2004 . \\n Year on year from 2000 it has increased on average 0.5 % from less than 1 % in 1990 to 14 % in 2015 - 2019
gold_template: templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of templateTitleSubject[0] is highest in 2015 - 2019 at over templateYValue[max] templateScale . It more than doubled from 1995 from templateYValue[1] templateScale to 7 templateScale in 2000 - 2004 . \\n Year on year from 2000 it has templatePositiveTrend on average templateYValue[min] templateScale from less than templateYValue[min] templateScale in 1990 to templateYValue[max] templateScale in 2015 - 2019

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 67:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the percentages of minority representation in the Parliament of Lybia throughout the years . From the chart , we see that around 1990 - 1994 , we saw the minority representation in the Parliament of Lybia at around 0.4 % , followed by 2.2 % in the years of 1995 - 1999 . We then saw a huge increase around 2000 - 2004 with 7.4 % and then around 10 % in 2005 - 2009 .
gold_template: This chart shows the percentages of templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of templateTitleSubject[0] throughout the templateXLabel[0] . From the chart , we see that around 1990 - 1994 , we saw the templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of templateTitleSubject[0] at around 0.4 templateScale , followed by 2.2 templateScale in the templateXLabel[0] of 1995 - 1999 . We then saw a huge templatePositiveTrend around 2000 - 2004 with 7.4 templateScale and then around templateYValue[3] templateScale in 2005 - 2009 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 68:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Minority representation in the Parliament of lybia has steadily increased between the years 1990 and 2019 . between 1990 and 1994 it was approximately 0.4 % and in the years 2015 and 2019 it was approximately 14 % .
gold_template: templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of templateTitleSubject[0] has steadily templatePositiveTrend between the templateXLabel[0] 1990 and 2019 . between 1990 and 1994 it was approximately 0.4 templateScale and in the templateXLabel[0] 2015 and 2019 it was approximately templateYValue[max] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 69:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows minority representation in Lybian parliament . Participation has increased between 1990 to 2019 . Between 1990 - 1994 there was under 1 % representation , but this increased to 2 % between 95 - 99 and this quadrupled to nearly 8 % between 2000 - 2005 .
gold_template: This chart shows templateTitle[0] templateTitle[1] in Lybian templateTitleSubject[0] . Participation has templatePositiveTrend between 1990 to 2019 . Between 1990 - 1994 there was under templateYValue[min] templateScale templateTitle[1] , but this templatePositiveTrend to templateYValue[1] templateScale between 95 - 99 and this quadrupled to nearly templateYValue[2] templateScale between 2000 - 2005 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 70:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The graph shows the minority representation in ye Lybian parliament from 1990 - 2019 . The percentage has increased steadily over the years from less than 1 % in 1990 to 14 % by 2019
gold_template: The graph shows the templateTitle[0] templateTitle[1] in ye Lybian templateTitleSubject[0] from 1990 - 2019 . The templateScale has templatePositiveTrend steadily over the templateXLabel[0] from less than templateYValue[min] templateScale in 1990 to templateYValue[max] templateScale by 2019

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 71:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The above chart shows the percentages of minority representation in the Lybian parliament across different ranges of years from 1990 to 2019 . The lowest recorded was 1990 - 1994 at 0.4 % , this rises to 2 % in 1995 - 1999 , 2000 - 2004 sees a big jump to 7.2 % and 10 % in 2005 - 2009 . This percentage rises to 12.8 % in 2010 - 2014 and again rises to 14 % in 2015 - 2019 , this has been the highest recorded showing an increasing trend on the percentages .
gold_template: The above chart shows the percentages of templateTitle[0] templateTitle[1] in the Lybian templateTitleSubject[0] across different ranges of templateXLabel[0] from 1990 to 2019 . The lowest recorded was 1990 - 1994 at 0.4 templateScale , this rises to templateYValue[1] templateScale in 1995 - 1999 , 2000 - 2004 sees a big jump to 7.2 templateScale and templateYValue[3] templateScale in 2005 - 2009 . This templateScale rises to 12.8 templateScale in 2010 - 2014 and again rises to templateYValue[max] templateScale in 2015 - 2019 , this has been the highest recorded showing an templatePositiveTrend trend on the percentages .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 72:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The chart shows the level of minority representation in the Parliament of Lybia during four-year terms from 1990 to 2019 . \\n We can see that in the period starting 1990 representation stands at less than 0.5 % in the Parliament . Representation more than doubles to 2 % in 1995 , rising significantly to over 7 % in 2000 , 10 % in 2005 , approximately 12.5 % in 2010 and finally 14 % in the period 2015 to 2019 .
gold_template: The chart shows the level of templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of templateTitleSubject[0] during four-year terms from 1990 to 2019 . \\n We can see that in the period starting 1990 templateTitle[1] stands at less than templateYValue[min] templateScale in the templateTitleSubject[0] . templateTitle[1] more than doubles to templateYValue[1] templateScale in 1995 , templatePositiveTrend significantly to over 7 templateScale in 2000 , templateYValue[3] templateScale in 2005 , approximately 12.5 templateScale in 2010 and finally templateYValue[max] templateScale in the period 2015 to 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 73:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Minority representation has steadily increased year on year in Libyan parliament , from less than 1 % in 1990 - 1994 to 14 % in 2015 - 2019 .
gold_template: templateTitle[0] templateTitle[1] has steadily templatePositiveTrend year on year in Libyan templateTitleSubject[0] , from less than templateYValue[min] templateScale in 1990 - 1994 to templateYValue[max] templateScale in 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 74:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: We can see a definite increase in the minority representation in the Parliament of Libya from the period 1990 - 2019 . The percentage of representatives was at a low of 0.4 % for the period 1990 - 1994 . Steadily those figures and percentages have increased to 14 % for the period 2015 - 19 .
gold_template: We can see a definite templatePositiveTrend in the templateTitle[0] templateTitle[1] in the templateTitleSubject[0] of Libya from the period 1990 - 2019 . The templateScale of representatives was at a low of 0.4 templateScale for the period 1990 - 1994 . Steadily those figures and percentages have templatePositiveTrend to templateYValue[max] templateScale for the period 2015 - 19 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 75:
titleEntities: {'Subject': ['Parliament Lybia'], 'Date': ['1', '1']}
title: Minority Representation in the Parliament of Lybia 1
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: THis shows the representation of minorities in Lybian parliament has steadily increased over 39 years . Despite this increase , the numbers of minority representation are still low with only 14 % of parliament between 2015 - 19 being a minority .
gold_template: THis shows the templateTitle[1] of minorities in Lybian templateTitleSubject[0] has steadily templatePositiveTrend over 39 templateXLabel[0] . Despite this templatePositiveTrend , the numbers of templateTitle[0] templateTitle[1] are still low with only templateYValue[max] templateScale of templateTitleSubject[0] between 2015 - 19 being a templateTitle[0] .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the 1 of Parliament Lybia Percentage in the financial year 1 global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Parliament Lybia brand .

Example 76:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The chart depicts the lack of diversity in the Libyan parliament with percentages for minority representation given over the years 1990 - 2019 . The years are split into six time periods and show a steady increase in minority representation from 1990 to 2019 . The period 1990 - 1994 has less than 2 % which rises to 14 % in the period 2015 - 2019 .
gold_template: The chart depicts the templateTitle[0] of templateTitle[1] in the templateTitleSubject[0] templateTitle[3] with percentages for templateTitle[5] templateTitle[6] given over the templateXLabel[0] 1990 - 2019 . The templateXLabel[0] are split into six time periods and show a steady templatePositiveTrend in templateTitle[5] templateTitle[6] from 1990 to 2019 . The period 1990 - 1994 has less than templateYValue[1] templateScale which rises to templateYValue[max] templateScale in the period 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 77:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows changes in the lack of diversity in the Libyan parliament from 1990 to 2019 as illustrated by their percentage of minority representation across different times periods . Minority representation was at it 's lowest in the period 1990 - 1994 at less than 1 % . By 2005 - 2009 it had increased to 10 % .
gold_template: This chart shows changes in the templateTitle[0] of templateTitle[1] in the templateTitleSubject[0] templateTitle[3] from 1990 to 2019 as illustrated by their templateScale of templateTitle[5] templateTitle[6] across different times periods . templateTitle[5] templateTitle[6] was at it 's lowest in the period 1990 - 1994 at less than templateYValue[min] templateScale . By 2005 - 2009 it had templatePositiveTrend to templateYValue[3] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 78:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: the graph shows the growth of minority representation in the Libyan parliament in percentage from 1990 till 2019 . the red colored bar shows that from 1990 till 1994 the percentage of minority representation was 0.4 % , it rose to 2 % in the period of 1995 and 1999 , there was an exponential increase in the 4 year period of 2000 to 2004 with a percentage of 7.6 % . the reported percentage in the next four year period was 10 % .
gold_template: the graph shows the growth of templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] in templateScale from 1990 till 2019 . the red colored bar shows that from 1990 till 1994 the templateScale of templateTitle[5] templateTitle[6] was 0.4 templateScale , it templatePositiveTrend to templateYValue[1] templateScale in the period of 1995 and 1999 , there was an exponential templatePositiveTrend in the 4 year period of 2000 to 2004 with a templateScale of 7.6 templateScale . the reported templateScale in the next four year period was templateYValue[3] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 79:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The graph shows the lack of diversity in libyan parliament minority representation has grown exponentially between 1990 - 1994 to 2015 - 2019 . The graph is given in terms of percentage . For instance , in 1990 - 1994 the lack of diversity was less than 1 % , which increases steadily up to 2015 - 2019 at 14 % .
gold_template: The graph shows the templateTitle[0] of templateTitle[1] in templateTitleSubject[0] templateTitle[3] templateTitle[5] templateTitle[6] has grown exponentially between 1990 - 1994 to 2015 - 2019 . The graph is given in terms of templateScale . For instance , in 1990 - 1994 the templateTitle[0] of templateTitle[1] was less than templateYValue[min] templateScale , which increases steadily up to 2015 - 2019 at templateYValue[max] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 80:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The diversity of minorities in the Libyan Parliament has leapt since the early nineties . \n In the first period only 1 % in the early ninenies were represented . Mid to late nineties there was a slow increase .
gold_template: The templateTitle[1] of minorities in the templateTitleSubject[0] templateTitle[3] has leapt since the early nineties . \n In the first period only templateYValue[min] templateScale in the early ninenies were represented . Mid to late nineties there was a slow templatePositiveTrend .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 81:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart uses the years and the percentage . \n\\n We can look at the lack of diversity in the Libyan parliament and the minority representation . \n\\n In 1990 - 1994 minority representation was Less than 1 % .
gold_template: This chart uses the templateXLabel[0] and the templateScale . \n\\n We can look at the templateTitle[0] of templateTitle[1] in the templateTitleSubject[0] templateTitle[3] and the templateTitle[5] templateTitle[6] . \n\\n In 1990 - 1994 templateTitle[5] templateTitle[6] was Less than templateYValue[min] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 82:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the lack of minority representation in the Libyan parliament from 1990 to 2019 . \n\\n It demonstrates that lack of diversity has increased steadily , from 0.5 % in 1990 to 14 % between 2015 - 2019 .
gold_template: This chart shows the templateTitle[0] of templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] from 1990 to 2019 . \n\\n It demonstrates that templateTitle[0] of templateTitle[1] has templatePositiveTrend steadily , from templateYValue[min] templateScale in 1990 to templateYValue[max] templateScale between 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 83:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart displays the minority representation in the Libyan parliament from 1990 through to 2019 . It has been steadily increasing but only by approximately 2 % in each parliamentary cycle .
gold_template: This chart displays the templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] from 1990 through to 2019 . It has been steadily templatePositiveTrend but only by approximately templateYValue[1] templateScale in each parliamentary cycle .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 84:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the percentage of minority representation in the Libyan parliament . We can see from the chart that between 1990 - 1994 the percentage of minority representation was approximately 0.5 % , it increased in years 1995 - 1999 to 2 % . We can then see it increased a large amount , in 2000 - 2004 the percentage was approximately 7.5 .
gold_template: This chart shows the templateScale of templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] . We can see from the chart that between 1990 - 1994 the templateScale of templateTitle[5] templateTitle[6] was approximately templateYValue[min] templateScale , it templatePositiveTrend in templateXLabel[0] 1995 - 1999 to templateYValue[1] templateScale . We can then see it templatePositiveTrend a large amount , in 2000 - 2004 the templateScale was approximately templateYValue[2] .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 85:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The chart shows minority representation in the Libyan parliament in four - year periods between 1990 and 2019 . Between 1990 and 1994 , minority representation was less than 0.5 % . In 1995 to 1999 it was 2 % .
gold_template: The chart shows templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] in four - year periods between 1990 and 2019 . Between 1990 and 1994 , templateTitle[5] templateTitle[6] was less than templateYValue[min] templateScale . In 1995 to 1999 it was templateYValue[1] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 86:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart demonstrates the increasing trend of minority representation in the Libyan parliament between 1990 and 2019 . During this period , representation increased from 1 % to 14 % . There was a significant increase between 1995 - 1999 and 2000 - 2004 , when minority representation rose from 2 % to 7.5 % .
gold_template: This chart demonstrates the templatePositiveTrend trend of templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] between 1990 and 2019 . During this period , templateTitle[6] templatePositiveTrend from templateYValue[min] templateScale to templateYValue[max] templateScale . There was a significant templatePositiveTrend between 1995 - 1999 and 2000 - 2004 , when templateTitle[5] templateTitle[6] templatePositiveTrend from templateYValue[1] templateScale to templateYValue[2] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 87:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The minority representation in the libyan parliment was 0.4 % in 1990 - 1994 this rose to 2 % in 1995 - 1999 , then to 7.6 % in 2000 - 2004 , in 2005 - 2009 it reached 10 % then rose to 12.4 % in 2010 - 2014 , finally in 2015 - 2019 it reached 14 % .
gold_template: The templateTitle[5] templateTitle[6] in the templateTitleSubject[0] parliment was 0.4 templateScale in 1990 - 1994 this templatePositiveTrend to templateYValue[1] templateScale in 1995 - 1999 , then to 7.6 templateScale in 2000 - 2004 , in 2005 - 2009 it reached templateYValue[3] templateScale then templatePositiveTrend to 12.4 templateScale in 2010 - 2014 , finally in 2015 - 2019 it reached templateYValue[max] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 88:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the percentage of minority representation in the Libyan parliament during different 5 - year periods between 1990 and 2019 . \n It shows a consistent increase over the years , starting with less than 1 % in 1990 - 1994 . It increases to 2 % in 1995 - 1999 , over 7 % in 2000 - 2004 , 10 % 2005 - 2009 , over 12 % in 2010 - 2014 , and finally 14 % in 2015 - 2019 .
gold_template: This chart shows the templateScale of templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] during different 5 - year periods between 1990 and 2019 . \n It shows a consistent templatePositiveTrend over the templateXLabel[0] , starting with less than templateYValue[min] templateScale in 1990 - 1994 . It increases to templateYValue[1] templateScale in 1995 - 1999 , over 7 templateScale in 2000 - 2004 , templateYValue[3] templateScale 2005 - 2009 , over 12 templateScale in 2010 - 2014 , and finally templateYValue[max] templateScale in 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 89:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: Although at present 14 % of Parliament , there has been a strident increase in minority representation \n from near 0 in the early 90 's to 70 times the number over the 20 year period ( 1990 to 19 ) . \n That is rising from less than 0.5 % in 1990/94 to 10 % ten years later , and further 40 % to 14 % up to 2019 .
gold_template: Although at present templateYValue[max] templateScale of templateTitle[3] , there has been a strident templatePositiveTrend in templateTitle[5] templateTitle[6] \n from near 0 in the early 90 's to 70 times the number over the 20 year period ( 1990 to 19 ) . \n That is templatePositiveTrend from less than templateYValue[min] templateScale in 1990/94 to templateYValue[3] templateScale templateYValue[3] templateXLabel[0] later , and further 40 templateScale to templateYValue[max] templateScale up to 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 90:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: As the years have gone by , there has been more diversity in the Libyan Parliament , starting with less than 1 % in 1990 - 1994 , increasing vastly to 14 % in 2015 - 2019 .
gold_template: As the templateXLabel[0] have gone by , there has been more templateTitle[1] in the templateTitleSubject[0] templateTitle[3] , starting with less than templateYValue[min] templateScale in 1990 - 1994 , templatePositiveTrend vastly to templateYValue[max] templateScale in 2015 - 2019 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 91:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: In 2015 - 2019 , lack of diversity rose to 14 % . This is the highest in recent years . In 1990 - 1994 , lack of diversity in Libyan parliament was highly below 2 % .
gold_template: In 2015 - 2019 , templateTitle[0] of templateTitle[1] templatePositiveTrend to templateYValue[max] templateScale . This is the highest in recent templateXLabel[0] . In 1990 - 1994 , templateTitle[0] of templateTitle[1] in templateTitleSubject[0] templateTitle[3] was highly below templateYValue[1] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 92:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This graph shows the minority representation in the Libyan parliament , tracking percentage change in four year cycles . There is a general upward trajectory , with the 1990 - 1994 government having approx . 0.4 % minority representation , and the 2015 - 2019 government approximately 14 % representation .
gold_template: This graph shows the templateTitle[5] templateTitle[6] in the templateTitleSubject[0] templateTitle[3] , tracking templateScale change in four year cycles . There is a general upward trajectory , with the 1990 - 1994 government having approx . 0.4 templateScale templateTitle[5] templateTitle[6] , and the 2015 - 2019 government approximately templateYValue[max] templateScale templateTitle[6] .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 93:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This graph shows the percentage of minority representation in the Libyan Government over time , from 1990 - 2019 , in increments of 4 years . Every 4 years , the graph shows that the percentage of minority representation in the govt goes up . It is currently at its highest in the 2015 - 2019 years at roughly 14 % .
gold_template: This graph shows the templateScale of templateTitle[5] templateTitle[6] in the templateTitleSubject[0] Government over time , from 1990 - 2019 , in increments of 4 templateXLabel[0] . Every 4 templateXLabel[0] , the graph shows that the templateScale of templateTitle[5] templateTitle[6] in the govt goes up . It is currently at its highest in the 2015 - 2019 templateXLabel[0] at roughly templateYValue[max] templateScale .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 94:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The graph shows the lack of diversity in % terms in the Libyan parliament across 5 year periods starting from 1990 . In this initial 5 year period it showed less than 1 % of the people were from a minority representation . However , the figures increased every 5 years until by 2019 there was a a 14 % representation of minorities in the Libyan parliament
gold_template: The graph shows the templateTitle[0] of templateTitle[1] in templateScale terms in the templateTitleSubject[0] templateTitle[3] across 5 year periods starting from 1990 . In this initial 5 year period it showed less than templateYValue[min] templateScale of the people were from a templateTitle[5] templateTitle[6] . However , the figures templatePositiveTrend every 5 templateXLabel[0] until by 2019 there was a templateYValue[max] templateScale templateTitle[6] of minorities in the templateTitleSubject[0] templateTitle[3]

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 95:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This chart shows the lack of diversity in the Libyan parliament by minority representation . \n As you can see their minority representation has been steadily increasing since the 1990 - 1994 parliament . \n In 1990 - 1994 they had 0.25 % minority representation , this more than doubled to 2 % in the 1995 - 1999 parliament .
gold_template: This chart shows the templateTitle[0] of templateTitle[1] in the templateTitleSubject[0] templateTitle[3] by templateTitle[5] templateTitle[6] . \n As you can see their templateTitle[5] templateTitle[6] has been steadily templatePositiveTrend since the 1990 - 1994 templateTitle[3] . \n In 1990 - 1994 they had 0.25 templateScale templateTitle[5] templateTitle[6] , this more than doubled to templateYValue[1] templateScale in the 1995 - 1999 templateTitle[3] .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 96:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: IN the Libyan parliament the figure show that over time the percentage of minority representation has grown from less than 1 % from 1990 - 1994 . There was 2 % from 1995 - 1999 . Then a sharper rise to 7.5 % from 2000 - 2004 .
gold_template: IN the templateTitleSubject[0] templateTitle[3] the figure show that over time the templateScale of templateTitle[5] templateTitle[6] has grown from less than templateYValue[min] templateScale from 1990 - 1994 . There was templateYValue[1] templateScale from 1995 - 1999 . Then a sharper rise to templateYValue[2] templateScale from 2000 - 2004 .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 97:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: The chart shows the % of diversity in the Libyan parliament . Between 1990 and 2019 the % rose steadily from 0.4 % to 14 % during successive five - year periods .
gold_template: The chart shows the templateScale of templateTitle[1] in the templateTitleSubject[0] templateTitle[3] . Between 1990 and 2019 the templateScale templatePositiveTrend steadily from 0.4 templateScale to templateYValue[max] templateScale during successive five - year periods .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 98:
titleEntities: {'Subject': ['Libyan'], 'Date': []}
title: Lack of diversity in the Libyan parliament : percentage of minority representation
X_Axis['Years']: ['1990-1994', '1995-1999', '2000-2004', '2005-2009', '2010-2014', '2015-2019']
Y_Axis['Percentage']: ['0.5', '2.1', '7.5', '10.0', '12.7', '14.0']

gold: This graph the percentage of the lack of diversity in the Libyan parliament : minority representation in consecutive 4 year blocks . From first glance , it is evident that the percentage of minority inclusion is always increasing . The biggest percentage increase is 2 % - 7.5 % in the years ( 1995 - 1999 ) - ( 2000 - 2004 ) .
gold_template: This graph the templateScale of the templateTitle[0] of templateTitle[1] in the templateTitleSubject[0] templateTitle[3] : templateTitle[5] templateTitle[6] in consecutive 4 year blocks . From first glance , it is evident that the templateScale of templateTitle[5] inclusion is always templatePositiveTrend . The biggest templateScale templatePositiveTrend is templateYValue[1] templateScale - templateYValue[2] templateScale in the templateXLabel[0] ( 1995 - 1999 ) - ( 2000 - 2004 ) .

generated_template: This statistic shows the templateTitle[4] of templateTitleSubject[0] templateYLabel[2] in the financial year templateTitle[5] templateTitle[6] global templateXLabel[0] . In this period the United Kingdom made up templateYValue[1] templateScale of all templateYLabel[2] for the templateTitleSubject[0] brand .
generated: This statistic shows the percentage of Libyan Percentage in the financial year minority representation global Years .  In this period the United Kingdom made up 2.1 percentage of all Percentage for the Libyan brand .

Example 99:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart shows the most expensive digital camera brand by average price . Cambo was most expensive at £ 75 on average , compared to Memoto ( 70 £ ) , Sigma ( 62 £ ) , Hunten ( £ 58 ) and Konica ( £ 52 ) .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateXLabel[0] templateXLabel[1] templateTitle[4] templateYLabel[0] templateYLabel[1] . templateXValue[2] was templateTitle[0] templateTitle[1] at £ 75 on templateYLabel[0] , compared to templateXValue[0] ( templateYValue[0] £ ) , templateXValue[1] ( templateYValue[1] £ ) , templateXValue[3] ( £ 58 ) and templateXValue[last] ( £ 52 ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 100:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart shows the most expensive digital cameras \n\\n Cambo cameras are the most expensive at £ 75 on average , followed by Memoto ( £ 70 ) , Sigma ( £ 62 ) , and Hunten ( £ 58 ) . The cheapest brand is Konica where on average a digital camera will cost £ 54 . The range in prices is only £ 21 which is fairly low .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] \n\\n templateXValue[2] templateTitle[3] are the templateTitle[0] templateTitle[1] at £ 75 on templateYLabel[0] , followed templateTitle[4] templateXValue[0] ( £ templateYValue[0] ) , templateXValue[1] ( £ templateYValue[1] ) , and templateXValue[3] ( £ 58 ) . The cheapest templateXLabel[1] is templateXValue[last] where on templateYLabel[0] a templateTitle[2] templateXLabel[0] will cost £ templateYValue[min] . The range in prices is only £ 21 which is fairly low .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 101:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart shows a number of digital cameras by average price . \\n From the chart we can see that the average price of Cambo is highest at around £ 76 , Memoto is 2nd at £ 70 , and Sigma is 3rd at around £ 62 . Hunten and Konica are cheapest with average prices of £ 58 and £ 54 , respectively .
gold_template: This chart shows a number of templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[0] templateYLabel[1] . \\n From the chart we can see that the templateYLabel[0] templateYLabel[1] of templateXValue[2] is highest at around £ templateYValue[max] , templateXValue[0] is 2nd at £ templateYValue[0] , and templateXValue[1] is 3rd at around £ templateYValue[1] . templateXValue[3] and templateXValue[last] are cheapest with templateYLabel[0] prices of £ 58 and £ templateYValue[min] , respectively .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 102:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart compares the average price of the most expensive camera brands in £ 's . Of the 5 compared , Konica came in the cheapest on average at around £ 54 on average , Followed by Hunten at £ 58 , Sigma at £ 62 and Memoto at £ 70 . The highest average price for digital cameras was the brand Cambo at around £ 76 on average .
gold_template: This chart compares the templateYLabel[0] templateYLabel[1] of the templateTitle[0] templateTitle[1] templateXLabel[0] brands in £ 's . Of the 5 compared , templateXValue[last] came in the cheapest on templateYLabel[0] at around £ templateYValue[min] on templateYLabel[0] , Followed templateTitle[4] templateXValue[3] at £ 58 , templateXValue[1] at £ templateYValue[1] and templateXValue[0] at £ templateYValue[0] . The highest templateYLabel[0] templateYLabel[1] for templateTitle[2] templateTitle[3] was the templateXLabel[1] templateXValue[2] at around £ templateYValue[max] on templateYLabel[0] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 103:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The chart shows the most expensive digital cameras by average price . From the chart we can see that the Cambo camera brand is the most expensive ( at around £ 76 ) whilst the Konica is the least expensive ( at around £ 54 ) . The Memoto , Sigma , and Hunten are all between these two price ranges .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[0] templateYLabel[1] . From the chart we can see that the templateXValue[2] templateXLabel[0] templateXLabel[1] is the templateTitle[0] templateTitle[1] ( at around £ templateYValue[max] ) whilst the templateXValue[last] is the least templateTitle[1] ( at around £ templateYValue[min] ) . The templateXValue[0] , templateXValue[1] , and templateXValue[3] are all between these two templateYLabel[1] ranges .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 104:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The chart shows the most expensive digital cameras by average price - a comparison of five brands , and a range of £ 50 to £ 80 \n\\n The cameras range from between £ 52 ( Konica ) to £ 75 ( Cambo ) . The average price of the five is Sigma , at £ 62 .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[0] templateYLabel[1] - a comparison of five brands , and a range of £ 50 to £ 80 \n\\n The templateTitle[3] range from between £ 52 ( templateXValue[last] ) to £ 75 ( templateXValue[2] ) . The templateYLabel[0] templateYLabel[1] of the five is templateXValue[1] , at £ templateYValue[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 105:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart shows the most expensive digital cameras by average price . \n From the chart we see that the prices all hover between 55 and 75 % of the average ( with Konica being the cheapest at 55 % , and Cambo the most expensive , at 75 % ) .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[0] templateYLabel[1] . \n From the chart we see that the prices all hover between 55 and 75 templateScale of the templateYLabel[0] ( with templateXValue[last] being the cheapest at 55 templateScale , and templateXValue[2] the templateTitle[0] templateTitle[1] , at 75 templateScale ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 106:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart shows the average price of digital camera brands in £ s. \n\\n From the chart we can see that the Cambo brand is the most expensive at around £ 76 closely followed by the Memoto brand at £ 70 . The Sigma brand camera is the next expensive at £ 62 with Hunten being £ 58 and finally the Konica is the least expensive at £ 54 .
gold_template: This chart shows the templateYLabel[0] templateYLabel[1] of templateTitle[2] templateXLabel[0] brands in £ s. \n\\n From the chart we can see that the templateXValue[2] templateXLabel[1] is the templateTitle[0] templateTitle[1] at around £ templateYValue[max] closely followed templateTitle[4] the templateXValue[0] templateXLabel[1] at £ templateYValue[0] . The templateXValue[1] templateXLabel[1] templateXLabel[0] is the next templateTitle[1] at £ templateYValue[1] with templateXValue[3] being £ 58 and finally the templateXValue[last] is the least templateTitle[1] at £ templateYValue[min] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 107:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The graph indicates price of digital cameras by brand , measured by average price of digital cameras ( GBP ) . \n The most expensive brand is Cambo ( 75 pounds ) , followed by Memoto ( 70 pounds ) . The least expensive camera brand is Konica ( 55 pounds ) .
gold_template: The graph indicates templateYLabel[1] of templateTitle[2] templateTitle[3] templateTitle[4] templateXLabel[1] , measured templateTitle[4] templateYLabel[0] templateYLabel[1] of templateTitle[2] templateTitle[3] ( GBP ) . \n The templateTitle[0] templateTitle[1] templateXLabel[1] is templateXValue[2] ( 75 pounds ) , followed templateTitle[4] templateXValue[0] ( templateYValue[0] pounds ) . The least templateTitle[1] templateXLabel[0] templateXLabel[1] is templateXValue[last] ( 55 pounds ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 108:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This bar chart shows the most expensive digital cameras by average price . Cambo was the most expensive digital camera : £ 75 average price . Memoto was the next expensive as the average price is £ 70 .
gold_template: This bar chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[0] templateYLabel[1] . templateXValue[2] was the templateTitle[0] templateTitle[1] templateTitle[2] templateXLabel[0] : £ 75 templateYLabel[0] templateYLabel[1] . templateXValue[0] was the next templateTitle[1] as the templateYLabel[0] templateYLabel[1] is £ templateYValue[0] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 109:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This graph shows the average price of various brands of cameras . Looking at the graph , the prices are fairly similar with only 20 pounds between the two , Cambo being the highest , and Konica the lowest . The other brands fall somewhere between these values .
gold_template: This graph shows the templateYLabel[0] templateYLabel[1] of various brands of templateTitle[3] . Looking at the graph , the prices are fairly similar with only 20 pounds between the two , templateXValue[2] being the highest , and templateXValue[last] the lowest . The other brands fall somewhere between these values .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 110:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart compares the average price of digital camera brands . The range of average prices is just over £ 20 . Konica is the lowest at an average of £ 54 .
gold_template: This chart compares the templateYLabel[0] templateYLabel[1] of templateTitle[2] templateXLabel[0] brands . The range of templateYLabel[0] prices is just over £ 20 . templateXValue[last] is the lowest at an templateYLabel[0] of £ templateYValue[min] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 111:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The graph shows the average price of digital cameras ( GBP ) \n Camera prices ranged from £ 55 to £ 75 providing only a £ 20 difference . \n Konica was the cheapest with an average of £ 55 , followed by Hunten £ 68 , then Sigma £ 62 . Memoto averaged at £ 70 and the most expensive was Cambo at £ 75 .
gold_template: The graph shows the templateYLabel[0] templateYLabel[1] of templateTitle[2] templateTitle[3] ( GBP ) \n templateXLabel[0] prices ranged from £ 55 to £ 75 providing only a £ 20 difference . \n templateXValue[last] was the cheapest with an templateYLabel[0] of £ 55 , followed templateTitle[4] templateXValue[3] £ 68 , then templateXValue[1] £ templateYValue[1] . templateXValue[0] averaged at £ templateYValue[0] and the templateTitle[0] templateTitle[1] was templateXValue[2] at £ 75 .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 112:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The chart shows the average price of Digital Cameras by brand \n\\n The chart shows the Cambo brand to be the most expensive with Konica being the cheapest average price . The differential is relatively small .
gold_template: The chart shows the templateYLabel[0] templateYLabel[1] of templateTitle[2] templateTitle[3] templateTitle[4] templateXLabel[1] \n\\n The chart shows the templateXValue[2] templateXLabel[1] to be the templateTitle[0] templateTitle[1] with templateXValue[last] being the cheapest templateYLabel[0] templateYLabel[1] . The differential is relatively small .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 113:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This graph displays the average price of various models of camera in order to illustrate the most expensive . Highest in average price is Cambo , followed by Memoto and Sigma . Hunten and Konica have the lowest average prices .
gold_template: This graph displays the templateYLabel[0] templateYLabel[1] of various models of templateXLabel[0] in order to illustrate the templateTitle[0] templateTitle[1] . Highest in templateYLabel[0] templateYLabel[1] is templateXValue[2] , followed templateTitle[4] templateXValue[0] and templateXValue[1] . templateXValue[3] and templateXValue[last] have the lowest templateYLabel[0] prices .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 114:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The most expensive make of digital camera shown by average price in the table is Cambo , with an average price of £ 78 . The least expensive is Konica , with an average price of £ 54 . Memoto ( 2nd place ) , Sigma ( third place ) and Hunten ( fourth place come between .
gold_template: The templateTitle[0] templateTitle[1] make of templateTitle[2] templateXLabel[0] shown templateTitle[4] templateYLabel[0] templateYLabel[1] in the table is templateXValue[2] , with an templateYLabel[0] templateYLabel[1] of £ 78 . The least templateTitle[1] is templateXValue[last] , with an templateYLabel[0] templateYLabel[1] of £ templateYValue[min] . templateXValue[0] ( 2nd place ) , templateXValue[1] ( third place ) and templateXValue[3] ( fourth place come between .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 115:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The chart shows the average price per camera brand however it is n't clear if this average on sale or based on volumes etc . On what is seen , Cambo has the highest average camera price at £ 75 and Konic the lowest average at £ 52
gold_template: The chart shows the templateYLabel[0] templateYLabel[1] per templateXLabel[0] templateXLabel[1] however it is n't clear if this templateYLabel[0] on sale or based on volumes etc . On what is seen , templateXValue[2] has the highest templateYLabel[0] templateXLabel[0] templateYLabel[1] at £ 75 and Konic the lowest templateYLabel[0] at £ 52

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 116:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This graph shows how expensive different brands of digital cameras are based on the average price of their products . Konica 's cameras tend to be the cheapest , at an average price of £ 54 . Cambo 's cameras are the most expensive , with .
gold_template: This graph shows how templateTitle[1] different brands of templateTitle[2] templateTitle[3] are based on the templateYLabel[0] templateYLabel[1] of their products . templateXValue[last] 's templateTitle[3] tend to be the cheapest , at an templateYLabel[0] templateYLabel[1] of £ templateYValue[min] . templateXValue[2] 's templateTitle[3] are the templateTitle[0] templateTitle[1] , with .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 117:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: As we can see from the chart digital cameras are majorly expensive . However prices do vary from brand to brand . The least expensive appears to by Konica which averages £ 53.00 , followed by Hunten who average £ 58 .
gold_template: As we can see from the chart templateTitle[2] templateTitle[3] are majorly templateTitle[1] . However prices do vary from templateXLabel[1] to templateXLabel[1] . The least templateTitle[1] appears to templateTitle[4] templateXValue[last] which averages £ 53.00 , followed templateTitle[4] templateXValue[3] who templateYLabel[0] £ 58 .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 118:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This graph shows the average price of digital cameras by brand . Cambo being the most expensive at almost £ 80 , closely followed by Memoto , then Sigma , Henten and Konica being the cheapest at just over £ 50 .
gold_template: This graph shows the templateYLabel[0] templateYLabel[1] of templateTitle[2] templateTitle[3] templateTitle[4] templateXLabel[1] . templateXValue[2] being the templateTitle[0] templateTitle[1] at almost £ 80 , closely followed templateTitle[4] templateXValue[0] , then templateXValue[1] , Henten and templateXValue[last] being the cheapest at just over £ 50 .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 119:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: This chart shows that the average price of a Cambo camera is most expensive at £ 75 , followed by Memoto then Sigma and Hunten . Konica had the cheapest average price at £ 54 .
gold_template: This chart shows that the templateYLabel[0] templateYLabel[1] of a templateXValue[2] templateXLabel[0] is templateTitle[0] templateTitle[1] at £ 75 , followed templateTitle[4] templateXValue[0] then templateXValue[1] and templateXValue[3] . templateXValue[last] had the cheapest templateYLabel[0] templateYLabel[1] at £ templateYValue[min] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 120:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The chart shows the most expensive digital cameras by price . We can see that Cambo is the most expensive at around £ 75 on average and Konica the lowest at around £ 52 on average .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateTitle[4] templateYLabel[1] . We can see that templateXValue[2] is the templateTitle[0] templateTitle[1] at around £ 75 on templateYLabel[0] and templateXValue[last] the lowest at around £ 52 on templateYLabel[0] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 121:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most expensive digital cameras by average price
X_Axis['Camera', 'brand']: ['Memoto', 'Sigma', 'Cambo', 'Hunten', 'Konica']
Y_Axis['Average', 'price', 'in']: ['70.1', '62.3', '75.9', '58.6', '53.5']

gold: The graph shows the most expensive digital cameras , this is shown by average price . The most expensive is the brand Cambo with the average price being £ 76 and the least expensive being Konica at £ 54 . Memoto averages £ 70 , Sigma £ 62 and Hunten £ 58 .
gold_template: The graph shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] , this is shown templateTitle[4] templateYLabel[0] templateYLabel[1] . The templateTitle[0] templateTitle[1] is the templateXLabel[1] templateXValue[2] with the templateYLabel[0] templateYLabel[1] being £ templateYValue[max] and the least templateTitle[1] being templateXValue[last] at £ templateYValue[min] . templateXValue[0] averages £ templateYValue[0] , templateXValue[1] £ templateYValue[1] and templateXValue[3] £ 58 .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[1] templateYLabel[1] in templateTitle[3] and provincial templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] . templateYValue[1] templateTitle[1] templateYLabel[1] were classified as templateXValue[1] in templateTitle[3] templateTitle[4] in templateTitleSubject[0] in templateTitle[6] templateTitle[7] templateTitleDate[0] .
generated: This statistic shows the Average of expensive price in cameras and provincial by in The price .  62.3 expensive price were classified as Sigma in cameras by in The price .

Example 122:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: The chart displays the warmest cities in South America . There are data for six cities : Santiago , Lima , Bogota , Montevideo , Belem and Cordoba with temperatures reported in degrees centigrade . From the chart we can see that Belem had the highest recorded temperature at 36 degrees and Bogota the lowest temperature of 16 .
gold_template: The chart displays the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . There are data for six templateTitle[1] : templateXValue[0] , templateXValue[1] , templateXValue[2] , templateXValue[3] , templateXValue[4] and templateXValue[last] with temperatures reported in degrees centigrade . From the chart we can see that templateXValue[4] had the highest recorded templateYLabel[0] at templateYValue[max] degrees and templateXValue[2] the lowest templateYLabel[0] of templateYValue[min] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 123:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This chart shows the warmest cities in South America by temperature . Belem proved to be the warmest city at 36 C . Followed by Montevideo at 29 C , Lima at 25 C , Cordoba at 24 C , Santiago at 20 C and with the coolest city Bogota at 16 C .
gold_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] by templateYLabel[0] . templateXValue[4] proved to be the templateTitle[0] templateXLabel[0] at templateYValue[max] templateYLabel[1] . Followed by templateXValue[3] at templateYValue[3] templateYLabel[1] , templateXValue[1] at templateYValue[1] templateYLabel[1] , templateXValue[last] at 24 templateYLabel[1] , templateXValue[0] at templateYValue[0] templateYLabel[1] and with the coolest templateXLabel[0] templateXValue[2] at templateYValue[min] templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 124:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: Belem is the warmest city in south america with a temperature of 36 degrees . on the other hand , Bogota is the coldest with 16 degrees . Santiago , Lima and Cordoba have average temperatures of 20 , 25 and 23 degrees respectively .
gold_template: templateXValue[4] is the templateTitle[0] templateXLabel[0] in templateTitleSubject[0] with a templateYLabel[0] of templateYValue[max] degrees . on the other hand , templateXValue[2] is the coldest with templateYValue[min] degrees . templateXValue[0] , templateXValue[1] and templateXValue[last] have average temperatures of templateYValue[0] , templateYValue[1] and templateYValue[last] degrees respectively .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 125:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: The graph presents the warmest cities in South America . Here , Belem is the warmest at approx 36 degrees , followed by Montevideo at approx . 28 degrees and Lima at 25 degrees .
gold_template: The graph presents the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . Here , templateXValue[4] is the templateTitle[0] at approx templateYValue[max] degrees , followed by templateXValue[3] at approx . 28 degrees and templateXValue[1] at templateYValue[1] degrees .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 126:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: With temperatures soaring past 35 degrees celsius for Belem this is by far the Warmest City in South America , followed by a drop in temperature second place to Montevideo , Lima takes third place , closely followed by Cordoba , cooling down to a 20 degrees celsius for Santiago , and a practically freezing in comparison to Belem we have Bogota with 16 degrees . bbbrrrrr
gold_template: With temperatures soaring past 35 degrees celsius for templateXValue[4] this is by far the templateTitle[0] templateXLabel[0] in templateTitleSubject[0] , followed by a drop in templateYLabel[0] second place to templateXValue[3] , templateXValue[1] takes third place , closely followed by templateXValue[last] , cooling down to a templateYValue[0] degrees celsius for templateXValue[0] , and a practically freezing in comparison to templateXValue[4] we have templateXValue[2] with templateYValue[min] degrees . bbbrrrrr

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 127:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This bar chart shows the temperatures of the warmest cities in South America . \n\\n The coolest city shown is Bogota , at 16 degrees celsius , the warmest city shown is Belem , at 36 degrees celsius . \n\\n The cities in order of temperature , from coolest to warmest are ; Bogota , Santiago , Cordoba , Lima , Montevideo and Belem .
gold_template: This bar chart shows the temperatures of the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n\\n The coolest templateXLabel[0] shown is templateXValue[2] , at templateYValue[min] degrees celsius , the templateTitle[0] templateXLabel[0] shown is templateXValue[4] , at templateYValue[max] degrees celsius . \n\\n The templateTitle[1] in order of templateYLabel[0] , from coolest to templateTitle[0] are ; templateXValue[2] , templateXValue[0] , templateXValue[last] , templateXValue[1] , templateXValue[3] and templateXValue[4] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 128:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This chart shows the warmest cities in South America . \n It demonstrates that Belem is the warmest , with a temperature of 36 C , while Bogota is the coldest , with a temperature of 16 C .
gold_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n It demonstrates that templateXValue[4] is the templateTitle[0] , with a templateYLabel[0] of templateYValue[max] templateYLabel[1] , while templateXValue[2] is the coldest , with a templateYLabel[0] of templateYValue[min] templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 129:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This chart displays the cities with the warmest temperatures in South America . Belem has the highest temperature followed closely by Montevideo and Lima , with Cordoba , Santiago and Bogata in the lower half of the table .
gold_template: This chart displays the templateTitle[1] with the templateTitle[0] temperatures in templateTitleSubject[0] . templateXValue[4] has the highest templateYLabel[0] followed closely by templateXValue[3] and templateXValue[1] , with templateXValue[last] , templateXValue[0] and Bogata in the lower half of the table .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 130:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: The chart shows the warmest cities in South America . Belem is the warmest at 36 degrees , followed by Montevideo at 29 degrees , and Lima at 35 degrees . Next is Cordoba at 23 degrees , followed by Santiago at 20 degrees and finally Bogota at 16 degrees ( approximate ) .
gold_template: The chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . templateXValue[4] is the templateTitle[0] at templateYValue[max] degrees , followed by templateXValue[3] at templateYValue[3] degrees , and templateXValue[1] at 35 degrees . Next is templateXValue[last] at templateYValue[last] degrees , followed by templateXValue[0] at templateYValue[0] degrees and finally templateXValue[2] at templateYValue[min] degrees ( approximate ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 131:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: The chart shows the temperature in six cities in South America . Belem is the warmest at just above 35 C . This is followed by Montevideo at just under 30 C .
gold_template: The chart shows the templateYLabel[0] in six templateTitle[1] in templateTitleSubject[0] . templateXValue[4] is the templateTitle[0] at just above 35 templateYLabel[1] . This is followed by templateXValue[3] at just under 30 templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 132:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This chart describes the warmest cities in South America . The warmest city is Belem , by a significant margin . Montevideo is next warmest at 29 degrees , followed by Lima ( 25 degrees ) , Cordoba 23 degrees ) and then Santiago ( 25 degrees ) .
gold_template: This chart describes the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . The templateTitle[0] templateXLabel[0] is templateXValue[4] , by a significant margin . templateXValue[3] is next templateTitle[0] at templateYValue[3] degrees , followed by templateXValue[1] ( templateYValue[1] degrees ) , templateXValue[last] templateYValue[last] degrees ) and then templateXValue[0] ( templateYValue[1] degrees ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 133:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: The warmest city in south america is Belem at 36 degress , next is montevideo at 29 degress , then lima at 25 degrees , cordoba is 23 degress , santiago is 20 degress and last is bogota at 16 degrees .
gold_template: The templateTitle[0] templateXLabel[0] in templateTitleSubject[0] is templateXValue[4] at templateYValue[max] degress , next is templateXValue[3] at templateYValue[3] degress , then templateXValue[1] at templateYValue[1] degrees , templateXValue[last] is templateYValue[last] degress , templateXValue[0] is templateYValue[0] degress and last is templateXValue[2] at templateYValue[min] degrees .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 134:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This chart shows the temperature in degrees Celsius in 6 South American cities . The warmest is Belem with 36 , followed by Montevideo with 29 , Lima with 25 , Cordoba with 23 , Santiago with 20 , and finally Bogota with 16 .
gold_template: This chart shows the templateYLabel[0] in degrees Celsius in 6 templateTitleSubject[0] American templateTitle[1] . The templateTitle[0] is templateXValue[4] with templateYValue[max] , followed by templateXValue[3] with templateYValue[3] , templateXValue[1] with templateYValue[1] , templateXValue[last] with templateYValue[last] , templateXValue[0] with templateYValue[0] , and finally templateXValue[2] with templateYValue[min] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 135:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: Belem is clearly the warmest city recorded here recording temperature of more than double the coolest city of Bogota at 16 C and 36 C respectively whenever the period recorded is , presumably in Winter given the normal summer temperatures of all of these cities !
gold_template: templateXValue[4] is clearly the templateTitle[0] templateXLabel[0] recorded here recording templateYLabel[0] of more than double the coolest templateXLabel[0] of templateXValue[2] at templateYValue[min] templateYLabel[1] and templateYValue[max] templateYLabel[1] respectively whenever the period recorded is , presumably in Winter given the normal summer temperatures of all of these templateTitle[1] !

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 136:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: Belem is the warmest city in South America with an average over 35 . Bogota was the least warmest at just over 15
gold_template: templateXValue[4] is the templateTitle[0] templateXLabel[0] in templateTitleSubject[0] with an average over 35 . templateXValue[2] was the least templateTitle[0] at just over 15

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 137:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: Belem has above 35 degree temperature . this is the highest among the cities in South America . bogota has over 15 degree temperature .
gold_template: templateXValue[4] has above 35 degree templateYLabel[0] . this is the highest among the templateTitle[1] in templateTitleSubject[0] . templateXValue[2] has over 15 degree templateYLabel[0] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 138:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This graph shows the warmest cities in South America , measured in degrees celsius . The warmest is Belem at approx 36 degrees , followed by Montevideo at 29 degrees , Lima with 25 degrees , Cordoba at 23 degrees , Santiago at 20 degrees and finally Bogota comes in coldest at approx 16 degrees celsius
gold_template: This graph shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] , measured in degrees celsius . The templateTitle[0] is templateXValue[4] at approx templateYValue[max] degrees , followed by templateXValue[3] at templateYValue[3] degrees , templateXValue[1] with templateYValue[1] degrees , templateXValue[last] at templateYValue[last] degrees , templateXValue[0] at templateYValue[0] degrees and finally templateXValue[2] comes in coldest at approx templateYValue[min] degrees celsius

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 139:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This graph shows the temperature across 6 different cities in South America , from which you can see which is warmest . Belem is the warmest city out of Santiago , Lima , Bogota , Montevideo and Cordoba . Belem 's temperature is around 36 degrees celsius
gold_template: This graph shows the templateYLabel[0] across 6 different templateTitle[1] in templateTitleSubject[0] , from which you can see which is templateTitle[0] . templateXValue[4] is the templateTitle[0] templateXLabel[0] out of templateXValue[0] , templateXValue[1] , templateXValue[2] , templateXValue[3] and templateXValue[last] . templateXValue[4] 's templateYLabel[0] is around templateYValue[max] degrees celsius

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 140:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: The graph shows a list of South American countries and their respective warmest temperatures . It shows that Belem had the highest temperature at 36 degrees celcius . Montevideo was the 2nd highest at 29 .
gold_template: The graph shows a list of templateTitleSubject[0] American countries and their respective templateTitle[0] temperatures . It shows that templateXValue[4] had the highest templateYLabel[0] at templateYValue[max] degrees celcius . templateXValue[3] was the 2nd highest at templateYValue[3] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 141:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This chart shows the warmest cities in South America . \n You can see that Belem is the warmest city at 36 degrees C , followed by Montevideo at 29 degrees C. Bogota is the coolest city at 16 degrees C and Santiago is the second coolest city at 20 degrees C. \n There is a difference of 20 degrees C between the coolest and the warmest city .
gold_template: This chart shows the templateTitle[0] templateTitle[1] in templateTitleSubject[0] . \n You can see that templateXValue[4] is the templateTitle[0] templateXLabel[0] at templateYValue[max] degrees templateYLabel[1] , followed by templateXValue[3] at templateYValue[3] degrees C. templateXValue[2] is the coolest templateXLabel[0] at templateYValue[min] degrees templateYLabel[1] and templateXValue[0] is the second coolest templateXLabel[0] at templateYValue[0] degrees C. \n There is a difference of templateYValue[0] degrees templateYLabel[1] between the coolest and the templateTitle[0] templateXLabel[0] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 142:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: In South America the warmest city appears to be Belem at 36 degrees Centigrade . The coolest is Bogota recording 17 degrees .
gold_template: In templateTitleSubject[0] the templateTitle[0] templateXLabel[0] appears to be templateXValue[4] at templateYValue[max] degrees Centigrade . The coolest is templateXValue[2] recording 17 degrees .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 143:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: The chart shows the temperatures of the six warmest cities in South America . The warmest is Belem , at 36 Degrees Celcius , followed by Montevideo , Lima , Cordoba , Santiato and finally Bogota at 16 Degrees .
gold_template: The chart shows the temperatures of the six templateTitle[0] templateTitle[1] in templateTitleSubject[0] . The templateTitle[0] is templateXValue[4] , at templateYValue[max] Degrees Celcius , followed by templateXValue[3] , templateXValue[1] , templateXValue[last] , Santiato and finally templateXValue[2] at templateYValue[min] Degrees .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 144:
titleEntities: {'Subject': ['South America'], 'Date': []}
title: The warmest cities in South America
X_Axis['City']: ['Santiago', 'Lima', 'Bogota', 'Montevideo', 'Belem', 'Cordoba']
Y_Axis['Temperature', 'in', 'C']: ['20', '25', '16', '29', '36', '23']

gold: This graph compares the temperature of the warmest South American cities in degrees Celsius . The warmest city , Belem ( 36 degree C ) , is about 2.2 times warmer than the coldest city Bogota ( 16 degree C ) . The other city temperatures are , Santiago ( 20 degree C ) , Lima ( 25 degree C ) , Montevideo ( 29 degree C ) and Cordoba ( 23 ) degree C .
gold_template: This graph compares the templateYLabel[0] of the templateTitle[0] templateTitleSubject[0] American templateTitle[1] in degrees Celsius . The templateTitle[0] templateXLabel[0] , templateXValue[4] ( templateYValue[max] degree templateYLabel[1] ) , is about 2.2 times warmer than the coldest templateXLabel[0] templateXValue[2] ( templateYValue[min] degree templateYLabel[1] ) . The other templateXLabel[0] temperatures are , templateXValue[0] ( templateYValue[0] degree templateYLabel[1] ) , templateXValue[1] ( templateYValue[1] degree templateYLabel[1] ) , templateXValue[3] ( templateYValue[3] degree templateYLabel[1] ) and templateXValue[last] ( templateYValue[last] ) degree templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Temperature of warmest South America ( PACs ) active in the country in , distinguished America City .  In , there were America 25 active Lima warmest active South America in the country .

Example 145:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart shows the most explored glaciers by the number of expeditions undertaken during a particular time frame . Volta received 4 visits , Tasman received 2 visits , Akkem received 9 visits , Zvezda received 6 , Mefonna received 13 ( and as such was the most popular ) and Olav received 5 .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] undertaken during a particular time frame . templateXValue[0] received templateYValue[0] visits , templateXValue[1] received templateYValue[min] visits , templateXValue[2] received templateYValue[2] visits , templateXValue[3] received templateYValue[3] , templateXValue[4] received templateYValue[max] ( and as such was the templateTitle[0] popular ) and templateXValue[last] received templateYValue[last] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 146:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart shows the most explored glaciers according to the number of expeditions . \n Mefonna has the most with 13 expeditions , this is much more than other glaciers . \n Tasman has the fewest expeditions with just 2 .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] according to the templateYLabel[0] of templateYLabel[1] . \n templateXValue[4] has the templateTitle[0] with templateYValue[max] templateYLabel[1] , this is much more than other templateTitle[2] . \n templateXValue[1] has the fewest templateYLabel[1] with just templateYValue[min] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 147:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart shows the number of expeditions that have explored a variety glaciers . We can see that the most explored is Mefonna with 13 expeditions , and the least explored is Tasman . \n The data does n't tell us much about the thoroughness , length of time spent per expedition , or the size of the expedition party .
gold_template: This chart shows the templateYLabel[0] of templateYLabel[1] that have templateTitle[1] a variety templateTitle[2] . We can see that the templateTitle[0] templateTitle[1] is templateXValue[4] with templateYValue[max] templateYLabel[1] , and the least templateTitle[1] is templateXValue[1] . \n The data does n't tell us much about the thoroughness , length of time spent per expedition , or the size of the expedition party .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 148:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart expresses the most explored glaciers by the number of expeditions . The glacier which has been explored the most is Mefonna with 13 expeditions , Akkem is next most explored with 9 . Zvezda , Olav , and Volta have each been explored 6 , 5 and 4 times respectively with Tasman being explored the least amount of times with 2 expeditions .
gold_template: This chart expresses the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] . The templateXLabel[0] which has been templateTitle[1] the templateTitle[0] is templateXValue[4] with templateYValue[max] templateYLabel[1] , templateXValue[2] is next templateTitle[0] templateTitle[1] with templateYValue[2] . templateXValue[3] , templateXValue[last] , and templateXValue[0] have each been templateTitle[1] templateYValue[3] , templateYValue[last] and templateYValue[0] times respectively with templateXValue[1] being templateTitle[1] the least amount of times with templateYValue[min] templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 149:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: The chart shows the most explored glaciers by number of expeditions . From the chart we can see that Mefonna is clearly the most explored glacier , whilst Tasman is the least explored . Volta , Olav and Zvezda are also nowhere near as explored as Mefonna , and Akkem trails at second most explored glacier .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateYLabel[0] of templateYLabel[1] . From the chart we can see that templateXValue[4] is clearly the templateTitle[0] templateTitle[1] templateXLabel[0] , whilst templateXValue[1] is the least templateTitle[1] . templateXValue[0] , templateXValue[last] and templateXValue[3] are also nowhere near as templateTitle[1] as templateXValue[4] , and templateXValue[2] trails at second templateTitle[0] templateTitle[1] templateXLabel[0] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 150:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: The graph shows the most explored glaciers by number of expeditions . Six glaciers are listed . \n\\n The most explored glacier , at 13 expeditions , is Mefonna .
gold_template: The graph shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateYLabel[0] of templateYLabel[1] . templateYValue[3] templateTitle[2] are listed . \n\\n The templateTitle[0] templateTitle[1] templateXLabel[0] , at templateYValue[max] templateYLabel[1] , is templateXValue[4] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 151:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart shows the most explored glaciers by number of expeditions . \n From the chart we see that the Akkem and Mefonna glaciers ( with 9 and 13 visits respectively , for a total of 22 ) were visited more often than the remaining 4 glaciers put together ( with a combined total of 17 ) .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateYLabel[0] of templateYLabel[1] . \n From the chart we see that the templateXValue[2] and templateXValue[4] templateTitle[2] ( with templateYValue[2] and templateYValue[max] visits respectively , for a total of 22 ) were visited more often than the remaining templateYValue[0] templateTitle[2] put together ( with a combined total of 17 ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 152:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart shows the number of expeditions made glaciers . \n\\n From this chart we see that the glacier that has had the most expeditions made to it is the Mefonna glacier with 13 expeditions . The next glacier with the most expeditions is Akkem with 9 followed by Zvezda with 6 .
gold_template: This chart shows the templateYLabel[0] of templateYLabel[1] made templateTitle[2] . \n\\n From this chart we see that the templateXLabel[0] that has had the templateTitle[0] templateYLabel[1] made to it is the templateXValue[4] templateXLabel[0] with templateYValue[max] templateYLabel[1] . The next templateXLabel[0] with the templateTitle[0] templateYLabel[1] is templateXValue[2] with templateYValue[2] followed templateTitle[3] templateXValue[3] with templateYValue[3] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 153:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: The graph describes the most explored glaciers , measured by number of expeditions taken . \n The most explored glacier is Mefonna ( 13 expeditions ) , followed by Akkem ( 9 expeditions ) . The least explored glacier is Tasman ( 2 expeditions ) .
gold_template: The graph describes the templateTitle[0] templateTitle[1] templateTitle[2] , measured templateTitle[3] templateYLabel[0] of templateYLabel[1] taken . \n The templateTitle[0] templateTitle[1] templateXLabel[0] is templateXValue[4] ( templateYValue[max] templateYLabel[1] ) , followed templateTitle[3] templateXValue[2] ( templateYValue[2] templateYLabel[1] ) . The least templateTitle[1] templateXLabel[0] is templateXValue[1] ( templateYValue[min] templateYLabel[1] ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 154:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This graph shows the most explored glaciers by number of expeditions . Mefonna was the most explored glacier with 13 expeditions . Akhem followed with 9 expeditions .
gold_template: This graph shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] templateYLabel[0] of templateYLabel[1] . templateXValue[4] was the templateTitle[0] templateTitle[1] templateXLabel[0] with templateYValue[max] templateYLabel[1] . Akhem followed with templateYValue[2] templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 155:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This graph shows the number of expeditions which have taken place across various glaciers . The numbers are varied between 13 expeditions and 2 expeditions with no clear similarities between any of the glaciers .
gold_template: This graph shows the templateYLabel[0] of templateYLabel[1] which have taken place across various templateTitle[2] . The numbers are varied between templateYValue[max] templateYLabel[1] and templateYValue[min] templateYLabel[1] with no clear similarities between any of the templateTitle[2] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 156:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This graph compares glaciers by how frequently they have been explored . \n\\n Mefonna has the highest number of explorations by some way with 13 overall . Akkem is next with 9 .
gold_template: This graph compares templateTitle[2] templateTitle[3] how frequently they have been templateTitle[1] . \n\\n templateXValue[4] has the highest templateYLabel[0] of explorations templateTitle[3] some way with templateYValue[max] overall . templateXValue[2] is next with templateYValue[2] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 157:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: The graph shows the most explored glaciers by the number of expeditions . The least explored glacier was Tasman with only 2 expeditions . Volta had 4 expeditions Olay 5 and Zvezda 6 .
gold_template: The graph shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] . The least templateTitle[1] templateXLabel[0] was templateXValue[1] with only templateYValue[min] templateYLabel[1] . templateXValue[0] had templateYValue[0] templateYLabel[1] Olay templateYValue[last] and templateXValue[3] templateYValue[3] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 158:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: The chart shows the most explored glaciers based on the number of expeditions to each glacier \n\\n Chart shows most popular is the Mefonna glacier with the least popular being the Tasman . Akkem , Zvezda and Olav are in the middle range .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] based on the templateYLabel[0] of templateYLabel[1] to each templateXLabel[0] \n\\n Chart shows templateTitle[0] popular is the templateXValue[4] templateXLabel[0] with the least popular being the templateXValue[1] . templateXValue[2] , templateXValue[3] and templateXValue[last] are in the middle range .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 159:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This graph displays the most explored glaciers and uses the number of expeditions to qualify this data . The most explored by far is Mefonna , with 13 expeditions . This number is slightly lower for Akkem ( 9 expeditions ) and lower still for Zvezda ( 6 ) .
gold_template: This graph displays the templateTitle[0] templateTitle[1] templateTitle[2] and uses the templateYLabel[0] of templateYLabel[1] to qualify this data . The templateTitle[0] templateTitle[1] templateTitle[3] far is templateXValue[4] , with templateYValue[max] templateYLabel[1] . This templateYLabel[0] is slightly lower for templateXValue[2] ( templateYValue[2] templateYLabel[1] ) and lower still for templateXValue[3] ( templateYValue[3] ) .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 160:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This table shows the number of expeditions journeying to six different glaciers . The most visited glacier ( Mefonna ) had 13 visits ; the least visited glacier ( Tasman ) had 2 visits . The table does not necessarily represent the depth or breadth of exploration - it does not show the duration of the expedition < y_axis > , nor the size of the geographical area explored .
gold_template: This table shows the templateYLabel[0] of templateYLabel[1] journeying to templateYValue[3] different templateTitle[2] . The templateTitle[0] visited templateXLabel[0] ( templateXValue[4] ) had templateYValue[max] visits ; the least visited templateXLabel[0] ( templateXValue[1] ) had templateYValue[min] visits . The table does not necessarily represent the depth or breadth of exploration - it does not show the duration of the expedition < y_axis > , nor the size of the geographical area templateTitle[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 161:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: The chart shows the most explored glaciers in terms of the number of expeditions with Mefonna having the most – 13 expeditions down to Tasman the least expored of the group at 2 expeditions . In between , we have Volata 4 , Olav 5 , Zvevzda 6 and Akkem 9 .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in terms of the templateYLabel[0] of templateYLabel[1] with templateXValue[4] having the templateTitle[0] – templateYValue[max] templateYLabel[1] down to templateXValue[1] the least expored of the group at templateYValue[min] templateYLabel[1] . In between , we have Volata templateYValue[0] , templateXValue[last] templateYValue[last] , Zvevzda templateYValue[3] and templateXValue[2] templateYValue[2] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 162:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This graph shows how well - explored several glers are , based on how many expeditions have been made to them . The least explored glacier is Tasman , with only 2 expeditions ever being made there , whilst Mefonna is by far the most explored , having undergone 13 expeditions .
gold_template: This graph shows how well - templateTitle[1] several glers are , based on how many templateYLabel[1] have been made to them . The least templateTitle[1] templateXLabel[0] is templateXValue[1] , with only templateYValue[min] templateYLabel[1] ever being made there , whilst templateXValue[4] is templateTitle[3] far the templateTitle[0] templateTitle[1] , having undergone templateYValue[max] templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 163:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: The chart shows the most explored glaciers by the number of expeditions . We can see that the most explored is Mefonna with approximately 13 number of expeditions . This then decreases to 9 with Akkem and Zvezda is next with 6 .
gold_template: The chart shows the templateTitle[0] templateTitle[1] templateTitle[2] templateTitle[3] the templateYLabel[0] of templateYLabel[1] . We can see that the templateTitle[0] templateTitle[1] is templateXValue[4] with approximately templateYValue[max] templateYLabel[0] of templateYLabel[1] . This then decreases to templateYValue[2] with templateXValue[2] and templateXValue[3] is next with templateYValue[3] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 164:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This graph shows the number of expeditions take up each Glacier . Mefonna being the most climbed at 13 and Tasman being the least popular at just 2 climbs .
gold_template: This graph shows the templateYLabel[0] of templateYLabel[1] take up each templateXLabel[0] . templateXValue[4] being the templateTitle[0] climbed at templateYValue[max] and templateXValue[1] being the least popular at just templateYValue[min] climbs .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 165:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart shows that Mefonna was the most explored glacier with 13 expeditions , followed by Akkem , Zvezda , Olav , Volta and last , Tasman with 2 expeditions .
gold_template: This chart shows that templateXValue[4] was the templateTitle[0] templateTitle[1] templateXLabel[0] with templateYValue[max] templateYLabel[1] , followed templateTitle[3] templateXValue[2] , templateXValue[3] , templateXValue[last] , templateXValue[0] and last , templateXValue[1] with templateYValue[min] templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 166:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: This chart shows us the number of expeditions to different glaciers . Mefonna is by far the most visited , with Akkem coming in second at 9 expeditions .
gold_template: This chart shows us the templateYLabel[0] of templateYLabel[1] to different templateTitle[2] . templateXValue[4] is templateTitle[3] far the templateTitle[0] visited , with templateXValue[2] coming in second at templateYValue[2] templateYLabel[1] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 167:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most explored glaciers by the number of expeditions
X_Axis['Glacier']: ['Volta', 'Tasman', 'Akkem', 'Zvezda', 'Mefonna', 'Olav']
Y_Axis['Number', 'of', 'expeditions']: ['4', '2', '9', '6', '13', '5']

gold: Mefonna is the most explored glacier by number of expeditions . Mefonna had 13 expeditions whereas Tasman only had 2 . Volta had 4 , Olav 5 , Zvezda 6 and Akkem 9 .
gold_template: templateXValue[4] is the templateTitle[0] templateTitle[1] templateXLabel[0] templateTitle[3] templateYLabel[0] of templateYLabel[1] . templateXValue[4] had templateYValue[max] templateYLabel[1] whereas templateXValue[1] only had templateYValue[min] . templateXValue[0] had templateYValue[0] , templateXValue[last] templateYValue[last] , templateXValue[3] templateYValue[3] and templateXValue[2] templateYValue[2] .

generated_template: This statistic shows the templateYLabel[0] of templateTitle[0] templateTitleSubject[0] ( PACs ) active in the country in templateTitleDate[0] , distinguished templateTitle[5] templateXLabel[0] templateXLabel[1] . In templateTitleDate[0] , there were templateTitle[3] templateYValue[1] active templateXValue[1] templateTitle[0] active templateTitleSubject[0] in the country .
generated: This statistic shows the Number of most The ( PACs ) active in the country in , distinguished expeditions Glacier .  In , there were by 2 active Tasman most active The in country .

Example 168:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: The chart displays data for six teams in a quiz competition and details the number of mistakes made by each team . The title and graphic representation are a little at odds , as the teams with the tallest bars were actually the least successful . Additionally the scale for the number of mistakes is hard to read with any precision as it suggests incorrect answers could be part of a whole number .
gold_template: The chart displays data for templateYValue[3] templateTitle[2] in a templateTitle[3] templateTitle[4] and details the templateYLabel[0] of templateYLabel[1] made by each templateXLabel[0] . The title and graphic representation are a little at odds , as the templateTitle[2] with the tallest bars were actually the least templateTitle[1] . Additionally the scale for the templateYLabel[0] of templateYLabel[1] is hard to read with any precision as it suggests incorrect answers could be part of a whole templateYLabel[0] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 169:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This chart shows the most successful teams in the quiz competition as determined by their number of mistakes . Team Fearless were the most successful with the least mistakes of roughly 1 , while team Lovely had the most mistakes , and thereby were the least successful with 9 mistakes . Team Cats came in at place 3 with 3 mistakes , closely followed by team DIY with around 4 mistakes .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] templateTitle[4] as determined by their templateYLabel[0] of templateYLabel[1] . templateXLabel[0] templateXValue[4] were the templateTitle[0] templateTitle[1] with the least templateYLabel[1] of roughly templateYValue[min] , while templateXLabel[0] templateXValue[2] had the templateTitle[0] templateYLabel[1] , and thereby were the least templateTitle[1] with templateYValue[max] templateYLabel[1] . templateXLabel[0] templateXValue[1] came in at place templateYValue[1] with templateYValue[1] templateYLabel[1] , closely followed by templateXLabel[0] templateXValue[0] with around templateYValue[0] templateYLabel[1] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 170:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: The fearless team were the most successful with 1 mistake recorded and the lovely team recorded the most number of mistakes with 9 wrong answers . the teams with average grades were DIY , smart kids and ABC
gold_template: The templateXValue[4] templateXLabel[0] were the templateTitle[0] templateTitle[1] with templateYValue[min] mistake recorded and the templateXValue[2] templateXLabel[0] recorded the templateTitle[0] templateYLabel[0] of templateYLabel[1] with templateYValue[max] wrong answers . the templateTitle[2] with average grades were templateXValue[0] , templateXValue[3] and templateXValue[last]

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 171:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This chart depicts the most successful teams in the quiz competition by the number of mistakes . Therefore , the lowest number of mistakes would capture the most successful team . In this chart , it appears that the team Fearless were the most successful having only made approx .
gold_template: This chart depicts the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] templateTitle[4] by the templateYLabel[0] of templateYLabel[1] . Therefore , the lowest templateYLabel[0] of templateYLabel[1] would capture the templateTitle[0] templateTitle[1] templateXLabel[0] . In this chart , it appears that the templateXLabel[0] templateXValue[4] were the templateTitle[0] templateTitle[1] having only made approx .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 172:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: LEading by a country mile for the most successful team in the quiz as they had the least mistakes is Fearless , their closet rivals were cats , followed by DIY with 4 mistakes , ABC were next and the worst team with the most mistakes were Lovely ( far from it as they were last )
gold_template: LEading by a country mile for the templateTitle[0] templateTitle[1] templateXLabel[0] in the templateTitle[3] as they had the least templateYLabel[1] is templateXValue[4] , their closet rivals were templateXValue[1] , followed by templateXValue[0] with templateYValue[0] templateYLabel[1] , templateXValue[last] were next and the worst templateXLabel[0] with the templateTitle[0] templateYLabel[1] were templateXValue[2] ( far from it as they were last )

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 173:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This chart shows the number of mistakes made by the teams . \\n \\n In the quiz , the most mistakes were made by Lovely , with 9 mistakes . \\n \\n The most successful teams were Cats and Fearless .
gold_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[2] . \\n In the templateTitle[3] , the templateTitle[0] templateYLabel[1] were made by templateXValue[2] , with templateYValue[max] templateYLabel[1] . \\n The templateTitle[0] templateTitle[1] templateTitle[2] were templateXValue[1] and templateXValue[4] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 174:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This chart shows the number of mistakes made by 6 of the most successful teams in the quiz . \\n It shows that the Lovely team made the most mistakes ( Totalling 9 altogether ) , while the team that made the least mistakes was Fearless , with just 1 mistake .
gold_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateYValue[3] of the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] . \\n It shows that the templateXValue[2] templateXLabel[0] made the templateTitle[0] templateYLabel[1] ( Totalling templateYValue[max] altogether ) , while the templateXLabel[0] that made the least templateYLabel[1] was templateXValue[4] , with just templateYValue[min] mistake .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 175:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: Team Fearless leads the way in the quiz competition with only 1 mistake whilst Team Lovely is rounding out at the bottom with 9 mistakes
gold_template: templateXLabel[0] templateXValue[4] leads the way in the templateTitle[3] templateTitle[4] with only templateYValue[min] mistake whilst templateXLabel[0] templateXValue[2] is rounding out at the bottom with templateYValue[max] templateYLabel[1]

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 176:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: The chart shows the number of mistakes that quiz teams made . The least successful team , with the most mistakes was Lovely , followed by smart kids , then ABC . Next is DIY with 4 , cats with 3 , and the most successful team with 1 mistake was fearless .
gold_template: The chart shows the templateYLabel[0] of templateYLabel[1] that templateTitle[3] templateTitle[2] made . The least templateTitle[1] templateXLabel[0] , with the templateTitle[0] templateYLabel[1] was templateXValue[2] , followed by templateXValue[3] , then templateXValue[last] . Next is templateXValue[0] with templateYValue[0] , templateXValue[1] with templateYValue[1] , and the templateTitle[0] templateTitle[1] templateXLabel[0] with templateYValue[min] mistake was templateXValue[4] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 177:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: The chart shows the number of mistakes made by each team in a quiz competition . The Lovely team was least successful with 9 mistakes . Smart Kids made 6 mistakes , ABC made 5 mistakes and DIY made 4 mistakes .
gold_template: The chart shows the templateYLabel[0] of templateYLabel[1] made by each templateXLabel[0] in a templateTitle[3] templateTitle[4] . The templateXValue[2] templateXLabel[0] was least templateTitle[1] with templateYValue[max] templateYLabel[1] . templateXValue[3] made templateYValue[3] templateYLabel[1] , templateXValue[last] made templateYValue[last] templateYLabel[1] and templateXValue[0] made templateYValue[0] templateYLabel[1] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 178:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This graph demonstrates success in a quiz competition . The Lovely team performed worst with 9 mistakes ; the Smart Kids made 6 mistakes , the ABC team made 5 mistakes , followed by the DIY on 4 mistakes and Cats on 3 mistakes . Fearless won the quiz with only 1 mistake .
gold_template: This graph demonstrates success in a templateTitle[3] templateTitle[4] . The templateXValue[2] templateXLabel[0] performed worst with templateYValue[max] templateYLabel[1] ; the templateXValue[3] made templateYValue[3] templateYLabel[1] , the templateXValue[last] templateXLabel[0] made templateYValue[last] templateYLabel[1] , followed by the templateXValue[0] on templateYValue[0] templateYLabel[1] and templateXValue[1] on templateYValue[1] templateYLabel[1] . templateXValue[4] won the templateTitle[3] with only templateYValue[min] mistake .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 179:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: First place in the quiz was Fearless with 1 mistake , next was cats with 3 mistakes , then DIY with 4 mistakes , then ABC with 5 mistakes , then smart kids with 6 mistakes and in final place was Lovely with 9 mistakes
gold_template: First place in the templateTitle[3] was templateXValue[4] with templateYValue[min] mistake , next was templateXValue[1] with templateYValue[1] templateYLabel[1] , then templateXValue[0] with templateYValue[0] templateYLabel[1] , then templateXValue[last] with templateYValue[last] templateYLabel[1] , then templateXValue[3] with templateYValue[3] templateYLabel[1] and in final place was templateXValue[2] with templateYValue[max] templateYLabel[1]

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 180:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This chart shows the number of mistakes made by 6 teams in a quiz . The most successful team is Fearless with just a single mistake , followed by Cats with 3 , DIY with 4 , ABC with 5 , Smart Kids with 6 , and finally Lovely with 9 .
gold_template: This chart shows the templateYLabel[0] of templateYLabel[1] made by templateYValue[3] templateTitle[2] in a templateTitle[3] . The templateTitle[0] templateTitle[1] templateXLabel[0] is templateXValue[4] with just a single mistake , followed by templateXValue[1] with templateYValue[1] , templateXValue[0] with templateYValue[0] , templateXValue[last] with templateYValue[last] , templateXValue[3] with templateYValue[3] , and finally templateXValue[2] with templateYValue[max] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 181:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: Fearless are the most successful team posting the fewest mistakes of the 6 recorded teams at just one mistake , compared to lovely 9 , which is way above the average overall for the groups altogether .
gold_template: templateXValue[4] are the templateTitle[0] templateTitle[1] templateXLabel[0] posting the fewest templateYLabel[1] of the templateYValue[3] recorded templateTitle[2] at just templateYValue[min] mistake , compared to templateXValue[2] templateYValue[max] , which is way above the average overall for the groups altogether .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 182:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: Fearless won the quiz , and were a few clear of nearest challengers Cats . Diy were 3rd followed closely by ABC . \\n Lovely were in last place .
gold_template: templateXValue[4] won the templateTitle[3] , and were a few clear of nearest challengers templateXValue[1] . templateXValue[0] were 3rd followed closely by templateXValue[last] . \\n templateXValue[2] were in last place .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 183:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: According to the chart , the most successful teams in quiz competition is Fearless with number of mistakes which is less than 2 . Lovely has 9 mistakes made during the quiz competition . ABC , DIY , Cats , and Smart kids have 5 , 4 , 3 , 6 number of mistakes respectively
gold_template: According to the chart , the templateTitle[0] templateTitle[1] templateTitle[2] in templateTitle[3] templateTitle[4] is templateXValue[4] with templateYLabel[0] of templateYLabel[1] which is less than 2 . templateXValue[2] has templateYValue[max] templateYLabel[1] made during the templateTitle[3] templateTitle[4] . templateXValue[last] , templateXValue[0] , templateXValue[1] , and templateXValue[3] have templateYValue[last] , templateYValue[0] , templateYValue[1] , templateYValue[3] templateYLabel[0] of templateYLabel[1] respectively

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 184:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This graph shows a measurement of success for teams in a quiz competition . Team Fearless are the most successful , making only 1 mistake , with Team Lovely the least successful with 9 mistakes . In descending order , the remaining teams were Team Smart Kids with 6 mistakes ; Team ABC with 5 ; Team DIY with 4 and Team Cats with 3 mistakes .
gold_template: This graph shows a measurement of success for templateTitle[2] in a templateTitle[3] templateTitle[4] . templateXLabel[0] templateXValue[4] are the templateTitle[0] templateTitle[1] , making only templateYValue[min] mistake , with templateXLabel[0] templateXValue[2] the least templateTitle[1] with templateYValue[max] templateYLabel[1] . In descending order , the remaining templateTitle[2] were templateXLabel[0] templateXValue[3] with templateYValue[3] templateYLabel[1] ; templateXLabel[0] templateXValue[last] with templateYValue[last] ; templateXLabel[0] templateXValue[0] with templateYValue[0] and templateXLabel[0] templateXValue[1] with templateYValue[1] templateYLabel[1] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 185:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This graph shows the number of mistakes each team made in the quiz competition . The team lovely made 9 mistakes in the quiz , and had the most mistakes . The team fearless had the fewest mistakes with only one mistake .
gold_template: This graph shows the templateYLabel[0] of templateYLabel[1] each templateXLabel[0] made in the templateTitle[3] templateTitle[4] . The templateXLabel[0] templateXValue[2] made templateYValue[max] templateYLabel[1] in the templateTitle[3] , and had the templateTitle[0] templateYLabel[1] . The templateXLabel[0] templateXValue[4] had the fewest templateYLabel[1] with only templateYValue[min] mistake .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 186:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: The graph shows the most successful quiz teams based on the numbers of mistakes they made . The most successful were Fearless with only 1 mistake whereas the least successful team were Lovely who made 9 mistakes in total .
gold_template: The graph shows the templateTitle[0] templateTitle[1] templateTitle[3] templateTitle[2] based on the numbers of templateYLabel[1] they made . The templateTitle[0] templateTitle[1] were templateXValue[4] with only templateYValue[min] mistake whereas the least templateTitle[1] templateXLabel[0] were templateXValue[2] who made templateYValue[max] templateYLabel[1] in total .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 187:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This chart shows the most successful teams in the quiz competition . \\n The most successful team is Fearless with only 1 mistake , followed by Cats with 3 mistakes and then DIY with 4 mistakes . The next team is ABC with 5 mistakes , then Smart Kids with 6 mistakes .
gold_template: This chart shows the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] templateTitle[4] . \\n The templateTitle[0] templateTitle[1] templateXLabel[0] is templateXValue[4] with only templateYValue[min] mistake , followed by templateXValue[1] with templateYValue[1] templateYLabel[1] and then templateXValue[0] with templateYValue[0] templateYLabel[1] . The next templateXLabel[0] is templateXValue[last] with templateYValue[last] templateYLabel[1] , then templateXValue[3] with templateYValue[3] templateYLabel[1] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 188:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: The results of the quiz is as follows : The winners were Fearless , with only 1 mistake . Second were cats with 3 mistakes , Then DIY with 4 mistakes , and then ABC with 5 mistakes . Finally the team with the most mistakes was Lovely who made 9 mistakes .
gold_template: The results of the templateTitle[3] is as follows : The winners were templateXValue[4] , with only templateYValue[min] mistake . Second were templateXValue[1] with templateYValue[1] templateYLabel[1] , Then templateXValue[0] with templateYValue[0] templateYLabel[1] , and then templateXValue[last] with templateYValue[last] templateYLabel[1] . Finally the templateXLabel[0] with the templateTitle[0] templateYLabel[1] was templateXValue[2] who made templateYValue[max] templateYLabel[1] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 189:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: The chart shows the number of mistakes made by the most successful teams in the quiz competition . The number of mistakes ranges from 1 by the fearless team to 9 by the lovely team . In between these were the Cats on 3 , the DIY on 4 , ABC on 5 mistakes and Smart kids on 6 mistakes .
gold_template: The chart shows the templateYLabel[0] of templateYLabel[1] made by the templateTitle[0] templateTitle[1] templateTitle[2] in the templateTitle[3] templateTitle[4] . The templateYLabel[0] of templateYLabel[1] ranges from templateYValue[min] by the templateXValue[4] templateXLabel[0] to templateYValue[max] by the templateXValue[2] templateXLabel[0] . In between these were the templateXValue[1] on templateYValue[1] , the templateXValue[0] on templateYValue[0] , templateXValue[last] on templateYValue[last] templateYLabel[1] and templateXValue[3] on templateYValue[3] templateYLabel[1] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

Example 190:
titleEntities: {'Subject': ['The'], 'Date': []}
title: The most successful teams in quiz competition
X_Axis['Team']: ['DIY', 'Cats', 'Lovely', 'Smart_Kids', 'Fearless', 'ABC']
Y_Axis['Number', 'of', 'mistakes']: ['4', '3', '9', '6', '1', '5']

gold: This graph compares the most successful quiz teams and the number of mistakes they make . The team that makes the least mistakes is fearless with one mistake , with the most being team lovely with 11 mistakes . The other mistakes made are , Cats with 3 , DIY with 4 , Smart Kids with 6 , and ABC with 5 .
gold_template: This graph compares the templateTitle[0] templateTitle[1] templateTitle[3] templateTitle[2] and the templateYLabel[0] of templateYLabel[1] they make . The templateXLabel[0] that makes the least templateYLabel[1] is templateXValue[4] with templateYValue[min] mistake , with the templateTitle[0] being templateXLabel[0] templateXValue[2] with 11 templateYLabel[1] . The other templateYLabel[1] made are , templateXValue[1] with templateYValue[1] , templateXValue[0] with templateYValue[0] , templateXValue[3] with templateYValue[3] , and templateXValue[last] with templateYValue[last] .

generated_template: The statistic shows the templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] templateTitle[4] in templateTitleDate[0] , templateTitle[6] templateTitle[7] . The total templateYLabel[0] of templateTitle[1] templateTitle[2] templateYLabel[1] globally amounted to around 70.96 templateScale templateYLabel[3] templateYLabel[4] in templateTitleDate[0] , while the templateYLabel[1] made with templateXValue[0] cards exceeded templateYValue[max] templateScale templateYLabel[3] templateYLabel[4] .
generated: The statistic shows the Number of successful teams mistakes competition in , competition .  The total Number of successful teams mistakes globally amounted to around 70.96 % mistakes in , while the mistakes made with DIY cards exceeded 9 % mistakes .

